{"!name":"sap.ui.mdc","!version":"1.21.1","!define":{"sap.ui.mdc.SelectionMode":{"!description":"Defines the mode of the table.","!module":"sap/ui/mdc/library","Single":{"!description":"Only one row/item can be selected at a time.","!category":"enum","!type":"String"},"!category":"static class","Multi":{"!description":"Multiple rows/items can be selected at a time.","!category":"enum","!type":"String"},"None":{"!description":"No rows/items can be selected (default).","!category":"enum","!type":"String"}},"sap.ui.mdc.table.CreationRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.CreationRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.CreationRow"},"sap.ui.mdc.chart.Item_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.Item with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chart.Item"},"sap.ui.mdc.field.FieldInfoBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInfoBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldInfoBase"},"sap.ui.mdc.actiontoolbar.ActionToolbarAction":{"!description":"The action for an {@link sap.ui.mdc.ActionToolbar ActionToolbar}) control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.actiontoolbar.ActionToolbarAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setAction":{"!description":"Sets the aggregated {@link #getAction action}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.ui.mdc.actiontoolbar.ActionToolbarAction","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to set"}},"!proto":"sap.ui.core.Control","!category":"class","getAction":{"!description":"Gets content of aggregation {@link #getAction action}.\n\nAction","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getLayoutInformation":{"!description":"Gets current value of property {@link #getLayoutInformation layoutInformation}.\n\nLayout information\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.actiontoolbar.ActionToolbarAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ActionToolbarAction.<br>\n<b>Note:<\/b><br>\nThe control is experimental and the API / behavior is not finalized. It should only be used internally in other mdc controls (e.g.\nchart/table).<br>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLayoutInformation layoutInformation} : object (default: ...see text or source)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAction action} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/mdc/actiontoolbar/ActionToolbarAction","!helpDescription":"The action for an {@link sap.ui.mdc.ActionToolbar ActionToolbar}) control","getOverflowToolbarConfig":{"!description":"Sets the behavior of the <code>ActionToolbarAction<\/code> inside an <code>OverflowToolbar<\/code> configuration.","!static":false,"!category":"function","!type":"fn() -> Object"},"setLayoutInformation":{"!description":"Sets a new value for property {@link #getLayoutInformation layoutInformation}.\n\nLayout information\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oLayoutInformation?: Object) -> sap.ui.mdc.actiontoolbar.ActionToolbarAction","parameters":{"oLayoutInformation":"type: object, description: New value for property <code>layoutInformation<\/code>"}},"destroyAction":{"!description":"Destroys the action in the aggregation {@link #getAction action}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.actiontoolbar.ActionToolbarAction"}},"sap.ui.mdc.enum.SelectType":{"!description":"Enumeration of the possible selection types","Add":{"!description":"the given conditions are just added to the existing ones, if not already existing.","!category":"enum","!type":"String"},"Set":{"!description":"The given condition are just set and replacing the existing ones.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/SelectType","!category":"static class","Remove":{"!description":"The given conditions are removed.","!category":"enum","!type":"String"}},"sap.ui.mdc.FilterBarDelegate":{"!description":"Base Delegate for {@link sap.ui.mdc.FilterBar FilterBar}. Extend this object in your project to use all functionalites of the {@link sap.ui.mdc.FilterBar FilterBar}. <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/FilterBarDelegate","!helpDescription":"Base Delegate for {@link sap.ui.mdc.FilterBar FilterBar}. Extend this object in your project to use all functionalites of the {@link sap.ui.mdc.FilterBar FilterBar}. <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.valuehelp.base.DialogTab_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.DialogTab with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.DialogTab"},"sap.ui.mdc.p13n.Engine_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.Engine with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.p13n.AdaptationProvider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.p13n.Engine"},"sap.ui.mdc.condition.ConditionModelPropertyBinding":{"!description":"Property binding implementation for Conditions.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModelPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONPropertyBinding.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.ConditionModelPropertyBinding.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Creates a new <code>ConditionModelPropertyBinding<\/code>.\n\nThis constructor must only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.mdc.condition.ConditionModel#bindProperty ConditionModel.bindProperty} on the corresponding model instance instead.","!module":"sap/ui/mdc/condition/ConditionModelPropertyBinding","!helpDescription":"Property binding implementation for Conditions.","!proto":"sap.ui.model.json.JSONPropertyBinding","!category":"class"},"sap.ui.mdc.filterbar.aligned":{"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"FilterItemLayout":"sap.ui.mdc.filterbar.aligned.FilterItemLayout_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"FilterContainer":"sap.ui.mdc.filterbar.aligned.FilterContainer_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"width":{"!description":"Width of the <code>VerticalLayout<\/code>. If no width is set, the width of the content is used. If the content of the layout has a larger width than the layout, it is cut off. There is no scrolling inside the layout.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!category":"namespace","enabled":{"!description":"If not enabled, all controls inside are not enabled automatically.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.odata.v4.FieldValueHelpDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.odata.v4.FieldValueHelpDelegate"},"module:sap/ui/mdc/ValueHelpDelegate":{"!description":"Delegate for {@link sap.ui.mdc.ValueHelp ValueHelp}.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","executeSearch":{"!description":"Executes a search in a <code>ListBinding<\/code>.","!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding, sSearch: String) -> Promise"},"executeFilter":{"!description":"Executes a filter in a <code>ListBinding<\/code>.","!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding, oFilter: sap.ui.model.Filter, iRequestedItems: Number) -> Promise<sap.ui.model.ListBinding>"},"createConditionPayload":{"!description":"Provides the possibility to convey custom data in conditions. This enables an application to enhance conditions with data relevant for combined key or outparameter scenarios.","!category":"function","!type":"fn(oPayload: Object, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, aValues: [Object], oContext?: sap.ui.model.Context) -> undefined | Object"},"!category":"namespace","checkListBindingPending":{"!description":"Checks if the <code>ListBinding<\/code> is waiting for an update. As long as the context has not been set for <code>ListBinding<\/code>, <code>ValueHelp<\/code> needs to wait.","!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding, oListBindingInfo: Object) -> Boolean | Promise<boolean>"},"modifySelectionBehaviour":{"!description":"Provides the possibility to customize selection events in 'Select from list' scenarios. This enables an application to reuse conditions in collective search scenarios, instead of always creating new ones.","!category":"function","!type":"fn(oPayload: Object, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oChange: Object) -> Object"},"onConditionPropagation":{"!description":"Callback invoked everytime a {@link sap.ui.mdc.ValueHelp ValueHelp} fires a select event or the value of the corresponding field changes This callback may be used to update external fields.","!category":"function","!type":"fn(oPayload: Object, oValueHelp: sap.ui.mdc.ValueHelp, sReason: sap.ui.mdc.enum.PropagationReason, oConfig: Object)"},"checkBindingsPending":{"!description":"Checks if at least one <code>PropertyBinding<\/code> is waiting for an update. As long as the value has not been set for <code>PropertyBinding<\/code>, <code>ValueHelp<\/code> needs to wait.\n\nThis check is used when selecting the description for a key if in parameters are used. The description can only be determined if the values of the in parameters are known.","!category":"function","!type":"fn(oPayload: Object, aBindings: [sap.ui.model.PropertyBinding]) -> null | Promise"},"getTypesForConditions":{"!description":"Provides type information for listcontent filtering","!category":"function","!type":"fn(oPayload: Object, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oConditions: Object) -> Object"},"!module":"sap/ui/mdc/ValueHelpDelegate","retrieveContent":{"!description":"Requests the content of the value help.\n\nThis function is called when the value help is opened or a key or description is requested.\n\nSo, depending on the value help content used, all content controls and data need to be assigned. Once they are assigned and the data is set, the returned <code>Promise<\/code> needs to be resolved. Only then does the value help continue opening or reading data.","!category":"function","!type":"fn(oPayload: Object, oContainer: sap.ui.mdc.valuehelp.base.Container, sContentId: String) -> Promise"},"!helpDescription":"Delegate for {@link sap.ui.mdc.ValueHelp ValueHelp}.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","module:sap/ui/mdc/ValueHelpDelegate":"module:sap/ui/mdc/ValueHelpDelegate","adjustSearch":{"!description":"Changes the search string.\n\nIf <code>$search<\/code> is used, depending on which back-end service is used, the search string might need to be escaped.","!category":"function","!type":"fn(oPayload: Object, bTypeahead: Boolean, sSearch: String) -> String"},"getInitialFilterConditions":{"!description":"Provides an initial condition configuration everytime a value help content is shown.\n\n<b>Note:<\/b> Make sure to provide the type information to the corresponding properties of the {@link sap.ui.mdc.filterbar.vh.FilterBar FilterBar}.\n\n<b>Note:<\/b> Be aware that setting the condition for the search field or type-ahead could lead to unwanted side effects.","!category":"function","!type":"fn(oPayload: Object, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oControl: sap.ui.core.Control) -> Promise<object> | Object"},"isFilterableListItemSelected":{"!description":"Provides the possibility to customize selections in 'Select from list' scenarios. By default, only condition keys are considered. This may be extended with payload dependent filters.","!category":"function","!type":"fn(oPayload: Object, oContent: sap.ui.mdc.valuehelp.base.FilterableListContent, oItem: sap.ui.core.Element, aConditions: [sap.ui.mdc.condition.ConditionObject]) -> Boolean"},"isSearchSupported":{"!description":"Checks if a <code>ListBinding<\/code> supports $Search.","!category":"function","!type":"fn(oPayload: Object, oContent: sap.ui.mdc.valuehelp.base.Content, oListBinding: sap.ui.model.ListBinding) -> Boolean"}},"sap.ui.mdc.p13n.UIManager":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.UIManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"_checkValidInterface":{"!description":"Checks if the UIManager has been initialized with a valid AdaptationProvider interface.","!static":true,"!category":"function","!type":"fn(oAdaptationProvider: sap.ui.mdc.AdaptationProvider)","parameters":{"oAdaptationProvider":"type: sap.ui.mdc.AdaptationProvider, description: undefined"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.p13n.UIManager.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new UIManager.\nThis registry creates and manages default persistence providers for each persistence mode.\nIt is intended for use cases where no dedicated provider can or should be created by an application.\nThe UIManager currently resides in the Engine and must never be called separately.","!module":"sap/ui/mdc/p13n/UIManager","!proto":"sap.ui.base.Object","show":{"!description":"Opens a personalization Dialog according to the provided Controller in the registration that the Engine can find for the Control and key.","!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control, vKey: String, oSource: sap.ui.core.Control) -> Promise","parameters":{"oSource":"type: sap.ui.core.Control, description: The source to be used. This may only be relevant in case the corresponding Controller is configured for liveMode","vControl":"type: sap.ui.mdc.Control, description: The registered control instance","vKey":"type: string, description: The key(s) for the according Controller"}},"create":{"!description":"This method can be used to create a customized P13nUI without using the default implementation of <code>Engine#showUI<\/code> which will use all properties available by default.","!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control, vKey: [String | String], aCustomInfo: [Object]) -> Promise","parameters":{"vControl":"type: sap.ui.mdc.Control, description: The registered control instance","aCustomInfo":"type: Object[], description: A custom set of propertyinfos as base to create the UI","vKey":"type: string|string[], description: The key for the according Controller"}},"!category":"class","getInstance":{"!description":"This method is the central point of access to the UIManager Singleton.","!static":true,"!category":"function","!type":"fn()"}},"sap.ui.mdc.table.GridTableType":{"!description":"The table type info class for the metadata-driven table.","getSelectionLimit":{"!description":"Gets current value of property {@link #getSelectionLimit selectionLimit}.\n\nNumber of indices which can be selected in a range. Accepts positive integer values. If set to 0, the selection limit is disabled, and the Select All checkbox appears instead of the Deselect All button.\n\nDefault value is <code>200<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.GridTableType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getRowCount":{"!description":"Gets current value of property {@link #getRowCount rowCount}.\n\nRow count of the inner table.<br> This property specifies the minimum row count if <code>sap.ui.mdc.RowCountMode.Auto<\/code> is used.<br> This property specifies the row count if <code>sap.ui.mdc.RowCountMode.Fixed<\/code> is used.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.mdc.table.TableTypeBase","!category":"class","setSelectionLimit":{"!description":"Sets a new value for property {@link #getSelectionLimit selectionLimit}.\n\nNumber of indices which can be selected in a range. Accepts positive integer values. If set to 0, the selection limit is disabled, and the Select All checkbox appears instead of the Deselect All button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200<\/code>.","!static":false,"!category":"function","!type":"fn(iSelectionLimit?: Number) -> sap.ui.mdc.table.GridTableType","parameters":{"iSelectionLimit":"type: int, description: New value for property <code>selectionLimit<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.GridTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getShowHeaderSelector":{"!description":"Gets current value of property {@link #getShowHeaderSelector showHeaderSelector}.\n\nDetermines whether the header selector is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowHeaderSelector":{"!description":"Sets a new value for property {@link #getShowHeaderSelector showHeaderSelector}.\n\nDetermines whether the header selector is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeaderSelector?: Boolean) -> sap.ui.mdc.table.GridTableType","parameters":{"bShowHeaderSelector":"type: boolean, description: New value for property <code>showHeaderSelector<\/code>"}},"getRowCountMode":{"!description":"Gets current value of property {@link #getRowCountMode rowCountMode}.\n\nDefines how the table handles the row count.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.RowCountMode"},"!constructorDescription":"Constructor for a new <code>GridTableType<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRowCountMode rowCountMode} : sap.ui.mdc.RowCountMode (default: Auto)<\/li>\n<li>{@link #getRowCount rowCount} : int (default: 10)<\/li>\n<li>{@link #getSelectionLimit selectionLimit} : int (default: 200)<\/li>\n<li>{@link #getShowHeaderSelector showHeaderSelector} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.table.TableTypeBase#constructor sap.ui.mdc.table.TableTypeBase}\ncan be used as well.","!module":"sap/ui/mdc/table/GridTableType","!helpDescription":"The table type info class for the metadata-driven table.","setRowCount":{"!description":"Sets a new value for property {@link #getRowCount rowCount}.\n\nRow count of the inner table.<br> This property specifies the minimum row count if <code>sap.ui.mdc.RowCountMode.Auto<\/code> is used.<br> This property specifies the row count if <code>sap.ui.mdc.RowCountMode.Fixed<\/code> is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!static":false,"!category":"function","!type":"fn(iRowCount?: Number) -> sap.ui.mdc.table.GridTableType","parameters":{"iRowCount":"type: int, description: New value for property <code>rowCount<\/code>"}},"setRowCountMode":{"!description":"Sets a new value for property {@link #getRowCountMode rowCountMode}.\n\nDefines how the table handles the row count.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sRowCountMode?: sap.ui.mdc.RowCountMode) -> sap.ui.mdc.table.GridTableType","parameters":{"sRowCountMode":"type: sap.ui.mdc.RowCountMode, description: New value for property <code>rowCountMode<\/code>"}}},"sap.ui.mdc.odata.v4.FieldValueHelpDelegate":{"!description":"Delegate class for sap.ui.mdc.field.FieldValueHelp.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/odata/v4/FieldValueHelpDelegate","!helpDescription":"Delegate class for sap.ui.mdc.field.FieldValueHelp.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.filterbar.aligned.FilterItemLayout":{"!description":"Represents a filter item on the UI.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.aligned.FilterItemLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.aligned.FilterItemLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new filterBar/aligned/FilterItemLayout.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.layout.VerticalLayout#constructor sap.ui.layout.VerticalLayout} can be used.","!module":"sap/ui/mdc/filterbar/aligned/FilterItemLayout","!helpDescription":"Represents a filter item on the UI.","!proto":"sap.ui.layout.VerticalLayout","!category":"class"},"sap.ui.mdc.Link":{"!description":"A <code>Link<\/code> control can be used to handle navigation scenarios with one or more targets through direct navigation or by opening a <code>Panel<\/code>.<br> It can also be used to display additional content, such as <code>ContactDetails<\/code> on the <code>Panel<\/code>. <b>Note:<\/b> Navigation targets are determined by the implementation of a {@link sap.ui.mdc.LinkDelegate}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Link.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getContent":{"!description":"Function that is called in the <code>createPopover<\/code> function of {@link sap.ui.mdc.field.FieldInfoBase}.","!static":false,"!category":"function","!type":"fn(fnGetAutoClosedControl?: fn()) -> sap.ui.mdc.link.Panel","parameters":{"fnGetAutoClosedControl":"type: function, description: Function returning the <code>Popover<\/code> control that is created in <code>createPopover<\/code>"}},"retrieveLinkType":{"!static":false,"!category":"function","!type":"fn() -> Promise"},"!proto":"sap.ui.mdc.field.FieldInfoBase","!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to <code>LinkDelegate<\/code> module that provides the required APIs to create content for the <code>Link<\/code> control.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"isTriggerable":{"!description":"Checks if <code>FieldInfo<\/code> is clickable and therefore rendered as a <code>Link<\/code> control.","!static":false,"!category":"function","!type":"fn() -> Promise"},"retrieveLinkItems":{"!description":"Calls the <code>modifyLinkItems<\/code> function of <code>Delegate<\/code> before returning the <code>LinkItem<\/code> objects.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to <code>LinkDelegate<\/code> module that provides the required APIs to create content for the <code>Link<\/code> control.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Link","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setSourceControl":{"!description":"Sets the associated {@link #getSourceControl sourceControl}.","!static":false,"!category":"function","!type":"fn(oSourceControl: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.mdc.Link","parameters":{"oSourceControl":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this sourceControl association; alternatively, an element instance may be given"}},"!constructorDescription":"Constructor for the new <code>Link<\/code>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnablePersonalization enablePersonalization} : boolean (default: true)<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSourceControl sourceControl} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldInfoBase#constructor sap.ui.mdc.field.FieldInfoBase}\ncan be used as well.","!module":"sap/ui/mdc/Link","!helpDescription":"A <code>Link<\/code> control can be used to handle navigation scenarios with one or more targets through direct navigation or by opening a <code>Panel<\/code>.<br> It can also be used to display additional content, such as <code>ContactDetails<\/code> on the <code>Panel<\/code>. <b>Note:<\/b> Navigation targets are determined by the implementation of a {@link sap.ui.mdc.LinkDelegate}.","getDirectLinkHrefAndTarget":{"!description":"Returns an object containing <code>href<\/code> and <code>target<\/code> of the direct navigation. Returns <code>null<\/code> if there is no direct link.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getSourceControl":{"!description":"ID of the element which is the current target of the association {@link #getSourceControl sourceControl}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getTriggerHref":{"!description":"Returns an <code>href<\/code> of direct link navigation, once the <code>Promise<\/code> has been resolved.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setEnablePersonalization":{"!description":"Sets a new value for property {@link #getEnablePersonalization enablePersonalization}.\n\nEnables/disables the personalization settings for users and key users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnablePersonalization?: Boolean) -> sap.ui.mdc.Link","parameters":{"bEnablePersonalization":"type: boolean, description: New value for property <code>enablePersonalization<\/code>"}},"retrieveBaseline":{"!description":"Retrieves the items that are initially part of the baseline which is used when a reset is done.","!static":true,"!category":"function","!type":"fn(oPanel: sap.ui.mdc.link.Panel) -> [Object]","parameters":{"oPanel":"type: sap.ui.mdc.link.Panel, description: Instance of a <code>Panel<\/code> control"}},"retrieveAdditionalContent":{"!static":false,"!category":"function","!type":"fn() -> [Promise<sap.ui.core.Control]"},"retrieveAllMetadata":{"!description":"Retrieves the relevant metadata for the panel and returns a property info array.","!static":true,"!category":"function","!type":"fn(oPanel: sap.ui.mdc.link.Panel) -> [Object]","parameters":{"oPanel":"type: sap.ui.mdc.link.Panel, description: Instance of a <code>Panel<\/code> control"}},"getEnablePersonalization":{"!description":"Gets current value of property {@link #getEnablePersonalization enablePersonalization}.\n\nEnables/disables the personalization settings for users and key users.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.chart.SelectionDetailsActions_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.SelectionDetailsActions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chart.SelectionDetailsActions"},"sap.ui.mdc.field.ConditionsType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.ConditionsType"},"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect":{"!description":"Can be used to manage the <code>CollectiveSearchSelect<\/code> contro search items.","setSelectedItemKey":{"!description":"Sets a new value for property {@link #getSelectedItemKey selectedItemKey}.\n\nThe key of the selected item of the <code>CollectiveSearchSelect<\/code>.\n\nThe selectedItemKey must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSelectedItemKey?: String) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"sSelectedItemKey":"type: string, description: New value for property <code>selectedItemKey<\/code>"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSelectedItemKey":{"!description":"Gets current value of property {@link #getSelectedItemKey selectedItemKey}.\n\nThe key of the selected item of the <code>CollectiveSearchSelect<\/code>.\n\nThe selectedItemKey must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.","!static":false,"!category":"function","!type":"fn() -> String"},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"get_currentItemText":{"!description":"Gets current value of property {@link #get_currentItemText _currentItemText}.","!static":false,"!category":"function","!type":"fn() -> String"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code> itself.\n\nThis event is fired when a new item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect"},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the <code>CollectiveSearchSelect<\/code>.\n\nThe title will be shown on the popover of the control on top of the List.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"set_currentItemText":{"!description":"Sets a new value for property {@link #get_currentItemText _currentItemText}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(s_currentItemText?: String) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"s_currentItemText":"type: string, description: New value for property <code>_currentItemText<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"oItem":"type: sap.ui.core.Item, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems displayed by the <code>CollectiveSearchSelect<\/code> control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!constructorDescription":"Constructor for a new <code>CollectiveSearchSelect<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSelectedItemKey selectedItemKey} : string<\/li>\n<li>{@link #get_currentItemText _currentItemText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the <code>CollectiveSearchSelect<\/code>.\n\nThe title will be shown on the popover of the control on top of the List.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/mdc/filterbar/vh/CollectiveSearchSelect","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"!helpDescription":"Can be used to manage the <code>CollectiveSearchSelect<\/code> contro search items.","detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.filterbar.vh.CollectiveSearchSelect<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.Item, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.filterbar.FilterBarBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.FilterBarBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.FilterBarBase"},"sap.ui.mdc.enum.ActionToolbarActionAlignment":{"!description":"Defines the alignment of the <code>ActionToolbarAction<\/code> action control.","!module":"sap/ui/mdc/enum/ActionToolbarActionAlignment","Begin":{"!category":"enum","!type":"String"},"!category":"static class","End":{"!category":"enum","!type":"String"}},"sap.ui.mdc.table.RowSettings_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.RowSettings"},"sap.ui.mdc.field.MultiValueFieldDelegate":{"!description":"Delegate class for <code>sap.ui.mdc.MultiValueField<\/code>.<br>","!module":"sap/ui/mdc/field/MultiValueFieldDelegate","!helpDescription":"Delegate class for <code>sap.ui.mdc.MultiValueField<\/code>.<br>","!proto":"sap.ui.base.Object","!category":"class","updateItems":{"!description":"Implements the model-specific logic to update items after conditions have been updated.\n\nItems can be removed, updated, or added. Use the binding information of the <code>MultiValueField<\/code> control to update the data in the model.","!static":true,"!category":"function","!type":"fn(oPayload: Object, aConditions: [sap.ui.mdc.condition.ConditionObject], oMultiValueField: sap.ui.mdc.MultiValueField)","parameters":{"aConditions":"type: sap.ui.mdc.condition.ConditionObject[], description: Current conditions of the <code>MultiValueField<\/code> control","oMultiValueField":"type: sap.ui.mdc.MultiValueField, description: Current <code>MultiValueField<\/code> control to determine binding information to update the values of the corresponding model","oPayload":"type: object, description: Payload for delegate"}}},"sap.ui.mdc.enum.EditMode":{"!description":"Defines in what mode a <code>Field<\/code> or <code>FilterField<\/code> is rendered.","ReadOnly":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in read-only mode","!category":"enum","!type":"String"},"EditableReadOnly":{"!description":"If more then one control is rendered by the <code>Field<\/code> or <code>FilterField<\/code> control, the first part is editable, and the other parts are read-only.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/EditMode","EditableDisplay":{"!description":"If more then one control is rendered by the <code>Field<\/code> or <code>FilterField<\/code> control, the first part is editable, and the other parts are in display mode.","!category":"enum","!type":"String"},"Editable":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in editable mode","!category":"enum","!type":"String"},"!category":"static class","Disabled":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in disabled mode","!category":"enum","!type":"String"},"Display":{"!description":"<code>Field<\/code> or <code>FilterField<\/code> is rendered in display mode","!category":"enum","!type":"String"}},"sap.ui.mdc.MultiValueField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.MultiValueField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.MultiValueField"},"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper":{"!description":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMdcTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpMdcTableWrapper.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpMdcTableWrapper<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. This is a wrapper to use a\n<code>sap.ui.mdc.Table<\/code> control as content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.ui.mdc.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase#constructor sap.ui.mdc.field.FieldValueHelpTableWrapperBase}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldValueHelpMdcTableWrapper","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpMdcTableWrapper"},"!helpDescription":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> sap.ui.mdc.field.FieldValueHelpMdcTableWrapper","parameters":{"oTable":"type: sap.ui.mdc.Table, description: The table to set"}},"!proto":"sap.ui.mdc.field.FieldValueHelpTableWrapperBase","!category":"class"},"sap.ui.mdc.ChartToolbarActionType":{"!description":"Defines the types of chart actions in the toolbar.","Legend":{"!description":"Legend action.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class","DrillDownUp":{"!description":"Drill down and up action.","!category":"enum","!type":"String"},"ZoomInOut":{"!description":"Zoom in and zoom out action.","!category":"enum","!type":"String"},"FullScreen":{"!description":"Full screen action.","!category":"enum","!type":"String"}},"sap.ui.mdc.field.DynamicDateRangeConditionsType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DynamicDateRangeConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.ConditionsType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.DynamicDateRangeConditionsType"},"sap.ui.mdc.valuehelp.content":{"descriptionPath":{"!description":"The path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.","!category":"enum","!type":"String"},"useFirstMatch":{"!description":"If set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.","!category":"enum","!type":"Boolean"},"keyPath":{"!description":"The path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.","!category":"enum","!type":"String"},"!category":"namespace","shortTitle":{"!description":"Title text that appears in the dialog header.","!category":"enum","!type":"String"},"filterFields":{"!description":"The fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.","!category":"enum","!type":"String"},"title":{"!description":"Title text that appears tab header.","!category":"enum","!type":"String"},"Conditions":"sap.ui.mdc.valuehelp.content.Conditions_obj","Bool":"sap.ui.mdc.valuehelp.content.Bool_obj","filterList":{"!description":"If set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.","!category":"enum","!type":"Boolean"},"useAsValueHelp":{"!description":"If set, the List is also opened if the ValueHelp icon is pressed.","!category":"enum","!type":"Boolean"},"group":{"!description":"group : String","!category":"enum","!type":"String"},"!description":"Content-modules to be used in {@link sap.ui.mdc.valueHelp.Popover Popover} or {@link sap.ui.mdc.valueHelp.Dialog Dialog}\n\nThese modules are not to be used stand-alone.","visible":{"!description":"Hide content temporary.","!category":"enum","!type":"Boolean"},"MDCTable":"sap.ui.mdc.valuehelp.content.MDCTable_obj","caseSensitive":{"!description":"If this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"tokenizerTitle":{"!description":"Title text that appears in the dialog tokenizer panel, when ony one content exist.","!category":"enum","!type":"String"},"label":{"!description":"Label shown on condition panel.","!category":"enum","!type":"String"},"FixedList":"sap.ui.mdc.valuehelp.content.FixedList_obj","MTable":"sap.ui.mdc.valuehelp.content.MTable_obj","!module":"sap/ui/mdc/ValueHelp","filterValue":{"!description":"Value for filtering ($search)\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container","!category":"enum","!type":"String"},"!helpDescription":"Content-modules to be used in {@link sap.ui.mdc.valueHelp.Popover Popover} or {@link sap.ui.mdc.valueHelp.Dialog Dialog}\n\nThese modules are not to be used stand-alone.","groupable":{"!description":"If set, the items of the list can be grouped","!category":"enum","!type":"Boolean"},"conditions":{"!description":"Conditions of the value help\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container","!category":"enum","!type":"[Object]"},"config":{"!description":"internal configuration\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container","!category":"enum","!type":"Object"}},"sap.ui.mdc.Table_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Table with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Table"},"sap.ui.mdc.field.CustomFieldInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.CustomFieldInfo"},"sap.ui.mdc.valuehelp.base":{"descriptionPath":{"!description":"The path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.","!category":"enum","!type":"String"},"useFirstMatch":{"!description":"If set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"keyPath":{"!description":"The path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.","!category":"enum","!type":"String"},"!category":"namespace","shortTitle":{"!description":"Title text that appears in the dialog header.","!category":"enum","!type":"String"},"filterFields":{"!description":"The fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.","!category":"enum","!type":"String"},"title":{"!description":"Title text that appears tab header.","!category":"enum","!type":"String"},"content":{"!description":"Content control","!category":"enum","!type":"Object"},"DialogTab":"sap.ui.mdc.valuehelp.base.DialogTab_obj","Container":"sap.ui.mdc.valuehelp.base.Container_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"useAsValueHelp":{"!description":"If set, the List is also opened if the ValueHelp icon is pressed.","!category":"enum","!type":"Boolean"},"group":{"!description":"group : String","!category":"enum","!type":"String"},"!description":"Base-modules for {@link sap.ui.mdc.ValueHelp ValueHelp}\n\nThese modules are not to be used stand-alone.","ListContent":"sap.ui.mdc.valuehelp.base.ListContent_obj","FilterableListContent":"sap.ui.mdc.valuehelp.base.FilterableListContent_obj","visible":{"!description":"Hide content temporary.","!category":"enum","!type":"Boolean"},"caseSensitive":{"!description":"If this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"tokenizerTitle":{"!description":"Title text that appears in the dialog tokenizer panel, when ony one content exist.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/ValueHelp","filterValue":{"!description":"Value for filtering ($search)\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container","!category":"enum","!type":"String"},"!helpDescription":"Base-modules for {@link sap.ui.mdc.ValueHelp ValueHelp}\n\nThese modules are not to be used stand-alone.","Content":"sap.ui.mdc.valuehelp.base.Content_obj","conditions":{"!description":"Conditions of the value help\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container","!category":"enum","!type":"[Object]"},"config":{"!description":"internal configuration\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container","!category":"enum","!type":"Object"}},"sap.ui.mdc.Control":{"!description":"The base class for MDC controls providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Control.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPropertyHelper":{"!description":"Returns the property helper instance, if available.","!static":true,"!category":"function","!type":"fn() -> sap.ui.mdc.util.PropertyHelper"},"initControlDelegate":{"!description":"Loads and initializes the delegate module related to the enhanced control.","!static":true,"!category":"function","!type":"fn(oPreloadedModule?: Object) -> Promise<sap.ui.mdc.BaseDelegate>","parameters":{"oPreloadedModule":"type: object, description: Preloaded delegate module"}},"!proto":"sap.ui.core.Control","isPropertyHelperFinal":{"!description":"Indicates if the control's propertyHelper already contains all available properties","!static":true,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!static":false,"!category":"function","!type":"fn() -> Object"},"initPropertyHelper":{"!description":"Loads and initializes the property helper related to the enhanced control.","!static":true,"!category":"function","!type":"fn(PropertyHelperClass?: sap.ui.mdc.util.PropertyHelper, aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"PropertyHelperClass":"type: sap.ui.mdc.util.PropertyHelper, description: Custom property helper class","bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDelegate: Object) -> sap.ui.mdc.Control","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Control with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getPayload":{"!description":"Returns the payload object set for the delegate property.","!static":true,"!category":"function","!type":"fn() -> Object"},"finalizePropertyHelper":{"!description":"Finalize the propertyHelper using the control's delegate.","!static":true,"!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"!constructorDescription":"Creates and initializes a new MDC control with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/mdc/Control","!helpDescription":"The base class for MDC controls providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getTypeUtil":{"!description":"Returns the <code>typeUtil<\/code> made available by a delegate module.","!static":true,"!category":"function","!type":"fn() -> sap.ui.mdc.util.TypeUtil"},"awaitPropertyHelper":{"!description":"Provides access to the property helper initialization <code>Promise<\/code>.","!static":true,"!category":"function","!type":"fn() -> Promise<sap.ui.mdc.util.PropertyHelper>"},"getControlDelegate":{"!description":"Returns the delegate instance, if available.","!static":true,"!category":"function","!type":"fn() -> sap.ui.mdc.BaseDelegate"},"awaitControlDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code>. <b>Note:<\/b> <code>initControlDelegate<\/code> must be called to start the delegate initialization","!static":true,"!category":"function","!type":"fn() -> Promise"}},"sap.ui.mdc.valuehelp.content.Bool":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element to provide a value help for boolean fields.","removeItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Removes a item from the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not change items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.field.ListFieldHelpItem) -> sap.ui.mdc.field.ListFieldHelpItem | null","parameters":{"vItem":"type: int|string|sap.ui.mdc.field.ListFieldHelpItem, description: The item to remove or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.Bool.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.valuehelp.content.FixedList","destroyItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Destroys all the items in the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not change items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.Bool"},"!category":"class","removeAllItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Removes all the controls from the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not change items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.ListFieldHelpItem]"},"setUseFirstMatch":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>useFirstMatch<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bUseFirstMatch?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bUseFirstMatch":"type: boolean, description: New value for property <code>useFirstMatch<\/code>"}},"setUseAsValueHelp":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>useAsValueHelp<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bUseAsValueHelp?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bUseAsValueHelp":"type: boolean, description: New value for property <code>useAsValueHelp<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Bool with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.content.FixedList.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Adds some item to the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not add items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.ListFieldHelpItem) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"oItem":"type: sap.ui.mdc.field.ListFieldHelpItem, description: The item to add; if empty, nothing is inserted"}},"setCaseSensitive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>caseSensitive<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bCaseSensitive?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bCaseSensitive":"type: boolean, description: New value for property <code>caseSensitive<\/code>"}},"!constructorDescription":"Constructor for a new <code>Bool<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.valuehelp.content.FixedList#constructor sap.ui.mdc.valuehelp.content.FixedList} can be used.","!module":"sap/ui/mdc/valuehelp/content/Bool","!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element to provide a value help for boolean fields.","setFilterList":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the property is automatically set.<br>Sets a new value for property <code>filterList<\/code>.\n\n<b>Note:<\/b> Do not set this property for the <code>Bool<\/code> content. It will be set by itself","!static":false,"!category":"function","!type":"fn(bFilterList?: Boolean) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"bFilterList":"type: boolean, description: New value for property <code>filterList<\/code>"}},"insertItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the items are automatically set.<br>Inserts a item to the aggregation <code>items<\/code>.\n\n<b>Note:<\/b> Do not add items to the <code>Bool<\/code> content. The items will be filled by itself","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.ListFieldHelpItem, iIndex: Number) -> sap.ui.mdc.valuehelp.content.Bool","parameters":{"iIndex":"type: int, description: The 0-based index the item should be inserted at; for a negative value of iIndex, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.field.ListFieldHelpItem, description: The item to add; if empty, nothing is inserted"}}},"sap.ui.mdc.Chart":{"getZoomState":{"!description":"Returns the current zoom information as an object { \"enabled\":true, \"currentZoomLevel\":0.16 }","!static":false,"!category":"function","!type":"fn() -> Object"},"setP13nMode":{"!description":"Defines which personalization options are available in the chart. Valid options are: \"Item\", \"Sort\", \"Type\".","!static":false,"!category":"function","!type":"fn(aMode: Array) -> sap.ui.mdc.Chart","parameters":{"aMode":"type: array, description: String array containing the p13n options that are available"}},"detachSelectionDetailsActionPressed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSelectionHandler":{"!description":"Retrieves the selection handler of the inner chart.","!static":false,"!category":"function","!type":"fn() -> Object"},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.Chart","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted"}},"getAllowedRolesForKinds":{"!description":"Retrieves the allowed chart roles for the chart types. <b>Note:<\/b> This is only used inside the personalization.","!static":false,"!category":"function","!type":"fn() -> Object"},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nThe minimal width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"isFilteringEnabled":{"!description":"Gets whether filtering is enabled in the personalization dialog.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPropertyInfo":{"!description":"Sets a new value for property {@link #getPropertyInfo propertyInfo}.\n\nSpecifies the chart metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(oPropertyInfo?: Object) -> sap.ui.mdc.Chart","parameters":{"oPropertyInfo":"type: object, description: New value for property <code>propertyInfo<\/code>"}},"zoomOut":{"!description":"Zooms out the inner chart.","!static":false,"!category":"function","!type":"fn(iValue: Number)","parameters":{"iValue":"type: int, description: how much steps should be zoomed out"}},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nSpecifies header text that is shown in chart\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.mdc.Chart","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThis property describes the measures and dimensions visible in the chart. Changes in the personalization are also reflected here.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.chart.Item]"},"getIgnoreToolbarActions":{"!description":"Gets current value of property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions should not be available in the chart's toolbar.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.ChartToolbarActionType]"},"getMinHeight":{"!description":"Gets current value of property {@link #getMinHeight minHeight}.\n\nThe minimal height\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.chart.Item<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item) -> Number","parameters":{"oItem":"type: sap.ui.mdc.chart.Item, description: The item whose index is looked for"}},"setVariant":{"!description":"Sets the aggregated {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn(oVariant: sap.ui.fl.variants.VariantManagement) -> sap.ui.mdc.Chart","parameters":{"oVariant":"type: sap.ui.fl.variants.VariantManagement, description: The variant to set"}},"innerChartBound":{"!description":"Can be used to check whether the inner chart is initialized and bound.","!static":false,"!category":"function","!type":"fn() -> Promise"},"setLegendVisible":{"!description":"Sets the visibility of the legend. Calls <code>setLegendVisible<\/code> on the delegate.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.ui.mdc.Chart","parameters":{"bVisible":"type: boolean, description: <code>true<\/code> to show legend, <code>false<\/code> to hide"}},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setMinHeight":{"!description":"Sets a new value for property {@link #getMinHeight minHeight}.\n\nThe minimal height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"400px\"<\/code>.","!static":false,"!category":"function","!type":"fn(sMinHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sMinHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>minHeight<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","init":{"!description":"Initialises the MDC Chart","!static":false,"!category":"function","!type":"fn()"},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Chart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVariant":{"!description":"Gets content of aggregation {@link #getVariant variant}.\n\nReference to a {@link sap.ui.fl.variants.VariantManagement} control for the chart.","!static":false,"!category":"function","!type":"fn() -> sap.ui.fl.variants.VariantManagement"},"zoomIn":{"!description":"Zooms in the inner chart.","!static":false,"!category":"function","!type":"fn(iValue: Number)","parameters":{"iValue":"type: int, description: how much steps should be zoomed in"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"getChartTypeLayoutConfig":{"!description":"Retrieves the chart type layout configuration. <b>Note:<\/b> This is only used inside personalization.","!static":false,"!category":"function","!type":"fn() -> Object"},"applySettings":{"!description":"Applies given settings onto the MDC chart, loads the delegate and initializes the MDC chart","!static":false,"!category":"function","!type":"fn(mSettings: *)","parameters":{"mSettings":"type: *, description: settings to apply"}},"getChartType":{"!description":"Gets current value of property {@link #getChartType chartType}.\n\nSpecifies the type of chart to be created by the <code>Chart<\/code> control.\n\nDefault value is <code>\"column\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelectionDetailsActions":{"!description":"Gets content of aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.chart.Item]"},"setHeight":{"!description":"Defines the height of the chart.","!static":false,"!category":"function","!type":"fn(iHeight: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"iHeight":"type: sap.ui.core.CSSSize, description: New height for the chart."}},"setFilter":{"!description":"Sets the associated {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.ID | sap.ui.mdc.IFilter) -> sap.ui.mdc.Chart","parameters":{"oFilter":"type: sap.ui.core.ID|sap.ui.mdc.IFilter, description: ID of an element which becomes the new target of this filter association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"_onFiltersChanged":{"!description":"Callback for when fuilters changed Activates the overlay on the MDC chart","!static":false,"!category":"function","!type":"fn(oEvent: undefined)","parameters":{"oEvent":"type: undefined, description: filter changed event"}},"!module":"sap/ui/mdc/Chart","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDefines the no data text shown in the chart.\n\nDefault value is <code>\"No data\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"detachInnerChartLoadedData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:innerChartLoadedData innerChartLoadedData} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setIgnoreToolbarActions":{"!description":"Sets a new value for property {@link #getIgnoreToolbarActions ignoreToolbarActions}.\n\nSpecifies which actions should not be available in the chart's toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sIgnoreToolbarActions?: [sap.ui.mdc.ChartToolbarActionType]) -> sap.ui.mdc.Chart","parameters":{"sIgnoreToolbarActions":"type: sap.ui.mdc.ChartToolbarActionType[], description: New value for property <code>ignoreToolbarActions<\/code>"}},"_showDrillDown":{"!description":"shows the drill-down popover for selection a dimension to drill down to.","!static":false,"!category":"function","!type":"fn(oDrillBtn: sap.m.Button)","parameters":{"oDrillBtn":"type: sap.m.Button, description: reference to the drill down button for loacation of the popover"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.chart.Item) -> sap.ui.mdc.chart.Item | null","parameters":{"vItem":"type: int|string|sap.ui.mdc.chart.Item, description: The item to remove or its index or id"}},"attachSelectionDetailsActionPressed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Chart<\/code> itself.\n\nThis event is fired when a SelectionDetailsAction is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Chart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getManagedObjectModel":{"!description":"Gets the managed object model.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.base.ManagedObjectModel"},"attachInnerChartLoadedData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:innerChartLoadedData innerChartLoadedData} event of this <code>sap.ui.mdc.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Chart<\/code> itself.\n\nThis event is fired when a data load on the inner chart completes","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Chart<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.mdc.Control","!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nThis aggregation describes actions that are added to the chart toolbar. See {@link sap.ui.mdc.actiontoolbar.ActionToolbarAction} for more information.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getChartTypeInfo":{"!description":"Gets information about the current chart type.","!static":false,"!category":"function","!type":"fn() -> Object"},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the chart.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"destroyVariant":{"!description":"Destroys the variant in the aggregation {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"getLegendVisible":{"!description":"Gets current value of property {@link #getLegendVisible legendVisible}.\n\nEnables the legend of the chart.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowChartTooltip":{"!description":"Gets current value of property {@link #getShowChartTooltip showChartTooltip}.\n\nControls the visibility of the chart tooltip. If set to <code>true<\/code>, an instance of {@link sap.viz.ui5.controls.VizTooltip} is created and shown when hovering over a data point.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nSpecifies header text that is shown in chart","!static":false,"!category":"function","!type":"fn() -> String"},"addAction":{"!description":"Adds an action to the <code>actions<\/code> aggregation of the chart. If the given control is not of type {@link sap.ui.mdc.actiontoolbar.ActionToolbarAction}, a container is created for the control before passing it on to the {@link sap.ui.mdc.ActionToolbar}.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.mdc.Chart","parameters":{"oControl":"type: sap.ui.core.Control, description: to add to the aggregation"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item) -> sap.ui.mdc.Chart","parameters":{"oItem":"type: sap.ui.mdc.chart.Item, description: The item to add; if empty, nothing is inserted"}},"getAdaptationUI":{"!description":"Gets the adaptation panel for the p13n dialog. <b>Note:<\/b> This is only used for personalization, do not use it otherwise.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the chart.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nThe minimal width\n\nDefault value is <code>\"240px\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: \"100%\")<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string (default: \"No data\")<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.ChartP13nMode[] (default: [])<\/li>\n<li>{@link #getLegendVisible legendVisible} : boolean (default: true)<\/li>\n<li>{@link #getIgnoreToolbarActions ignoreToolbarActions} : sap.ui.mdc.ChartToolbarActionType[] (default: [])<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize (default: \"240px\")<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize (default: \"400px\")<\/li>\n<li>{@link #getSortConditions sortConditions} : object<\/li>\n<li>{@link #getFilterConditions filterConditions} : object (default: {})<\/li>\n<li>{@link #getShowChartTooltip showChartTooltip} : boolean (default: true)<\/li>\n<li>{@link #getAutoBindOnInit autoBindOnInit} : boolean (default: true)<\/li>\n<li>{@link #getChartType chartType} : string (default: \"column\")<\/li>\n<li>{@link #getShowSelectionDetails showSelectionDetails} : boolean (default: true)<\/li>\n<li>{@link #getPropertyInfo propertyInfo} : object (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.mdc.chart.Item[] (default)<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSelectionDetailsActions selectionDetailsActions} : sap.ui.mdc.chart.SelectionDetailsActions<\/li>\n<li>{@link #getVariant variant} : sap.ui.fl.variants.VariantManagement<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFilter filter} : (sap.ui.core.ID | sap.ui.mdc.IFilter)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:innerChartLoadedData innerChartLoadedData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","getShowSelectionDetails":{"!description":"Gets current value of property {@link #getShowSelectionDetails showSelectionDetails}.\n\nEnables the Details button in the chart toolbar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getCurrentState":{"!description":"Fetches the current state of the chart (as a JSON) Needed for P13n to fetch current state","!static":false,"!category":"function","!type":"fn() -> Object"},"initialized":{"!description":"Checks whether the chart is initialized. After initialization the delegate is loaded and (in case of <code>autoBindOnInit=true<\/code>) the inner chart is created. The inner chart is not bound yet. Use <code>innerChartBound<\/code> for it.","!static":false,"!category":"function","!type":"fn() -> Promise"},"fireSelectionDetailsActionPressed":{"!description":"Fires event {@link #event:selectionDetailsActionPressed selectionDetailsActionPressed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowSelectionDetails":{"!description":"Sets a new value for property {@link #getShowSelectionDetails showSelectionDetails}.\n\nEnables the Details button in the chart toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSelectionDetails?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bShowSelectionDetails":"type: boolean, description: New value for property <code>showSelectionDetails<\/code>"}},"setSelectionDetailsActions":{"!description":"Sets the aggregated {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn(oSelectionDetailsActions: sap.ui.mdc.chart.SelectionDetailsActions) -> sap.ui.mdc.Chart","parameters":{"oSelectionDetailsActions":"type: sap.ui.mdc.chart.SelectionDetailsActions, description: The selectionDetailsActions to set"}},"getConditions":{"!description":"Getter for <code>filterConditions<\/code> set in the personalization settings.","!static":false,"!category":"function","!type":"fn() -> Array"},"setSortConditions":{"!description":"Sets a new value for property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSortConditions: Object) -> sap.ui.mdc.Chart","parameters":{"oSortConditions":"type: object, description: New value for property <code>sortConditions<\/code>"}},"getAvailableChartTypes":{"!description":"Gets the available chart types for the current state of the inner chart","!static":false,"!category":"function","!type":"fn() -> Array"},"fireInnerChartLoadedData":{"!description":"Fires event {@link #event:innerChartLoadedData innerChartLoadedData} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Chart","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAutoBindOnInit":{"!description":"Gets current value of property {@link #getAutoBindOnInit autoBindOnInit}.\n\nIf set to <code>true<\/code>, the chart is automatically bound after initialization. If set to <code>false<\/code>, the chart is bound after the first call to <code>rebind<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"100%\"<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Chart","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getFilterConditions":{"!description":"Gets current value of property {@link #getFilterConditions filterConditions}.\n\nDefines the filter conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setAutoBindOnInit":{"!description":"Sets a new value for property {@link #getAutoBindOnInit autoBindOnInit}.\n\nIf set to <code>true<\/code>, the chart is automatically bound after initialization. If set to <code>false<\/code>, the chart is bound after the first call to <code>rebind<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoBindOnInit?: Boolean) -> sap.ui.mdc.Chart","parameters":{"bAutoBindOnInit":"type: boolean, description: New value for property <code>autoBindOnInit<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Chart","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getFilter":{"!description":"ID of the element which is the current target of the association {@link #getFilter filter}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"destroySelectionDetailsActions":{"!description":"Destroys the selectionDetailsActions in the aggregation {@link #getSelectionDetailsActions selectionDetailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Chart"},"getSortConditions":{"!description":"Gets current value of property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.","!static":false,"!category":"function","!type":"fn() -> Object"},"setFilterConditions":{"!description":"Sets a new value for property {@link #getFilterConditions filterConditions}.\n\nDefines the filter conditions.\n\n<b>Note:<\/b> This property is exclusively used for handling flexibility changes. Do not use it for anything else.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterConditions?: Object) -> sap.ui.mdc.Chart","parameters":{"oFilterConditions":"type: object, description: New value for property <code>filterConditions<\/code>"}},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options available for the chart.<br> <b>Note:<\/b> The order of the provided options does not influence the arrangement of the icons on the UI.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.ChartP13nMode]"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.chart.Item, iIndex: Number) -> sap.ui.mdc.Chart","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.chart.Item, description: The item to insert; if empty, nothing is inserted"}},"_renderOverlay":{"!description":"Adds/Removes the overlay shown above the inner chart","!static":false,"!category":"function","!type":"fn(bShow: Boolean)","parameters":{"bShow":"type: boolean, description: true to show overlay, false to hide"}},"getPropertyInfo":{"!description":"Gets current value of property {@link #getPropertyInfo propertyInfo}.\n\nSpecifies the chart metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.field.MultiValueFieldDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.field.MultiValueFieldDelegate"},"sap.ui.mdc.ActionToolbar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ActionToolbar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.ActionToolbar"},"sap.ui.mdc.RowCountMode":{"!description":"Defines the row count mode of the GridTable.","Auto":{"!description":"The table automatically fills the height of the surrounding container.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class","Fixed":{"!description":"The table always has as many rows as defined in the <code>rowCount<\/code> property of <code>GridTableType<\/code>.","!category":"enum","!type":"String"}},"sap.ui.mdc.mixin":{"PromiseMixin":"sap.ui.mdc.mixin.PromiseMixin","DelegateMixin":"sap.ui.mdc.mixin.DelegateMixin","FilterIntegrationMixin":"sap.ui.mdc.mixin.FilterIntegrationMixin","!module":"sap/ui/mdc/library","!category":"namespace","PropertyHelperMixin":"sap.ui.mdc.mixin.PropertyHelperMixin","AdaptationMixin":"sap.ui.mdc.mixin.AdaptationMixin"},"sap.ui.mdc.valuehelp.base.Container":{"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if the selected condition changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"shouldOpenOnNavigate":{"!description":"Determines if the value help should be opened when the user used the arrow keys.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseAsValueHelp":{"!description":"If the container is used for type-ahead it might be wanted that the same content should also be shown as valuehelp. If not, the field should not show a valuehelp icon.\n\n<b>Note<\/b> This function needs only to be implemented for <code>Container<\/code> implementing the <code>sap.ui.mdc.valuehelp.container.ITypeahead<\/code> interface.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears in the dialog or tab header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"isMultiSelect":{"!description":"Determines if multiselection is active.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"awaitValueHelpDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code> of the value help.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Promise"},"fireRequestDelegateContent":{"!description":"Fires event {@link #event:requestDelegateContent requestDelegateContent} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isTypeaheadSupported":{"!description":"Determines if the content of the container supports typeahead\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.Container"},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element.","navigate":{"!description":"Triggers navigation in the content of the container.\n\nAs this could be asynchronous in case additional data needs to be loaded a promise is returned.\n\n<b>Note:<\/b> This function must only be called by the <code>ValueHelp<\/code> element.","!static":false,"!category":"function","!type":"fn(iStep: Number) -> Promise<object>","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.Container.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachNavigated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if a navigation was executed in the content of the container","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireOpened":{"!description":"Fires event {@link #event:opened opened} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears in the dialog or tab header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeFocus":{"!description":"The focus visualization of the field help needs to be removed as the user starts typing into the field.","!static":false,"!category":"function","!type":"fn()"},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if the value help is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.mdc.valuehelp.base.Content) -> sap.ui.mdc.valuehelp.base.Content | null","parameters":{"vContent":"type: int|string|sap.ui.mdc.valuehelp.base.Content, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Container with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"isOpen":{"!description":"Determines if the container is open.\n\n<b>Note:<\/b> This function must only be called by the <code>ValueHelp<\/code> element.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/mdc/valuehelp/base/Container","attachRequestSwitchToDialog":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if the value help should switch to dialog mode.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe container checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the <code>ValueHelp<\/code> element.","!static":false,"!category":"function","!type":"fn(oConfig: Object) -> Promise<sap.ui.mdc.field.FieldHelpItem>","parameters":{"oConfig":"type: object, description: Configuration"}},"!helpDescription":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element.","detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content, iIndex: Number) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachNavigated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if the change is cancelled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:opened opened} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the container. This aggregation holds the actual controls enabling the user to select items or create conditions (e.g. tables or condition panels)","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.valuehelp.base.Content]"},"!proto":"sap.ui.core.Element","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if a change on the value help is confirmed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAriaAttributes":{"!description":"Returns the aria attributes the field needs from the value help","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> Object","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as <code>ValueHelp<\/code> might not be connected to a field)"}},"!category":"class","isValidationSupported":{"!description":"Defines if the content of the container can be used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavigated":{"!description":"Fires event {@link #event:navigated navigated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireConfirm":{"!description":"Fires event {@link #event:confirm confirm} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>Container<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.mdc.valuehelp.base.Content[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:opened opened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:requestDelegateContent requestDelegateContent} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:requestSwitchToDialog requestSwitchToDialog} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigated navigated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","isDialog":{"!description":"Determines if the container is used as dialog inside the value help\n\nThe container is also used as dialog if <code>useAsValueHelp<\/code> is set on content and no other dialog is set.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueHelpDelegatePayload":{"!description":"Determines the delegate payload of the value help\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Object"},"getValueHelpIcon":{"!description":"Return the value help icon that should be used for the field.","!static":false,"!category":"function","!type":"fn() -> String"},"shouldOpenOnClick":{"!description":"Determines if the value help should be opened when the user clicks into the connected control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"close":{"!description":"Closes the container","!static":false,"!category":"function","!type":"fn()"},"detachRequestSwitchToDialog":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:opened opened} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if the value help is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachRequestDelegateContent":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:requestDelegateContent requestDelegateContent} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself.\n\nFired if the Container requests the delegate content.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Container<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.mdc.valuehelp.base.Content<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content) -> Number","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: The content whose index is looked for"}},"isOpening":{"!description":"Determines if the container is opening.\n\n<b>Note:<\/b> This function must only be called by the <code>ValueHelp<\/code> element.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.valuehelp.base.Content]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.valuehelp.base.Content) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oContent":"type: sap.ui.mdc.valuehelp.base.Content, description: The content to add; if empty, nothing is inserted"}},"getValueHelpDelegate":{"!description":"Determines the delegate of the value help\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.BaseDelegate"},"fireRequestSwitchToDialog":{"!description":"Fires event {@link #event:requestSwitchToDialog requestSwitchToDialog} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isValueHelpDelegateInitialized":{"!description":"Determines if delegate of the value help is initialized\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"providesScrolling":{"!description":"Determines if the container provides a own scroll functionality. If not, the <code>Content<\/code> needs to provide a scrolling solution like a {@link sap.m.ScrollContainer ScrollContainer}.\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isTypeahead":{"!description":"Determines if the container is used as typeahead inside the value help\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachRequestDelegateContent":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:requestDelegateContent requestDelegateContent} event of this <code>sap.ui.mdc.valuehelp.base.Container<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Container","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"open":{"!description":"Opens the container","!static":false,"!category":"function","!type":"fn(oValueHelpContentPromise: Promise) -> Promise","parameters":{"oValueHelpContentPromise":"type: Promise, description: Promise for content request"}}},"sap.ui.mdc.valuehelp.content.Conditions_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Conditions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.Conditions"},"sap.ui.mdc.field.FieldInfoBase":{"!description":"A <code>FieldInfoBase<\/code> element is a base class that shows any kind of information related to the <code>Field<\/code> control, for example, navigation targets or contact details.","detachDataUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"checkDirectNavigation":{"!description":"Checks if there is a direct navigation or if there is a popover to be opened.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldInfoBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireDataUpdate":{"!description":"Fires event {@link #event:dataUpdate dataUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getContent":{"!description":"Returns the content of the popover.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!proto":"sap.ui.mdc.Element","!category":"class","isTriggerable":{"!description":"Returns <code>true<\/code> as a promise result if the control created by <code>Field<\/code> can be triggered.","!static":false,"!category":"function","!type":"fn() -> Promise"},"detachPopoverAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:popoverAfterOpen popoverAfterOpen} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInfoBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>FieldInfoBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:dataUpdate dataUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:popoverAfterOpen popoverAfterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Element#constructor sap.ui.mdc.Element}\ncan be used as well.","attachDataUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself.\n\nThis event is fired if the data was updated.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/mdc/field/FieldInfoBase","!helpDescription":"A <code>FieldInfoBase<\/code> element is a base class that shows any kind of information related to the <code>Field<\/code> control, for example, navigation targets or contact details.","getSourceControl":{"!description":"Returns the parent control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Field"},"getTriggerHref":{"!description":"Returns as a promise result href which defines the target navigation of the <code>Link<\/code> control created by <code>Field<\/code>. If direct navigation is used, href is returned. If the information panel contains more content than only one link, <code>undefined<\/code> is returned.","!static":false,"!category":"function","!type":"fn() -> Promise"},"attachPopoverAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:popoverAfterOpen popoverAfterOpen} event of this <code>sap.ui.mdc.field.FieldInfoBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself.\n\nThis event is fired after the popover is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldInfoBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"firePopoverAfterOpen":{"!description":"Fires event {@link #event:popoverAfterOpen popoverAfterOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldInfoBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"open":{"!description":"Opens the info panel in the control created by <code>Field<\/code>.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> Promise","parameters":{"oControl":"type: sap.ui.core.Control, description: Optional control reference to which the popover is attached. By default the parent is used as reference."}}},"sap.ui.mdc.table.RowSettings":{"!description":"The <code>RowSettings<\/code> control is used to configure a row. This control can only be used in the context of the <code>sap.ui.mdc.Table<\/code> control to define row settings.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.RowSettings.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getHighlightText":{"!description":"Gets current value of property {@link #getHighlightText highlightText}.\n\nDefines the semantics of the {@link sap.ui.mdc.table.RowSettings#setHighlight highlight} property for accessibility purposes.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","!category":"class","getHighlight":{"!description":"Gets current value of property {@link #getHighlight highlight}.\n\nThe highlight state of the rows.\n\nIf the highlight is set to {@link sap.ui.core.MessageType sap.ui.core.MessageType.None} (default), no highlights are visible. Valid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor}.\n\nAccessibility support is provided through the associated {@link sap.ui.mdc.table.RowSettings#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllRowActions":{"!description":"Removes all the controls from the aggregation {@link #getRowActions rowActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.table.RowActionItem]"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getNavigated":{"!description":"Gets current value of property {@link #getNavigated navigated}.\n\nThe navigated state of a row.\n\nIf set to <code>true<\/code>, a navigation indicator is displayed at the end of the row.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNavigated":{"!description":"Sets a new value for property {@link #getNavigated navigated}.\n\nThe navigated state of a row.\n\nIf set to <code>true<\/code>, a navigation indicator is displayed at the end of the row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bNavigated?: Boolean) -> sap.ui.mdc.table.RowSettings","parameters":{"bNavigated":"type: boolean, description: New value for property <code>navigated<\/code>"}},"addRowAction":{"!description":"Adds some rowAction to the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn(oRowAction: sap.ui.mdc.table.RowActionItem) -> sap.ui.mdc.table.RowSettings","parameters":{"oRowAction":"type: sap.ui.mdc.table.RowActionItem, description: The rowAction to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for new RowSettings.\n\nCaution: Only use bindings which are bound against the rows, as working functionalities cannot be ensured for other binding types.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHighlight highlight} : string (default: \"None\")<\/li>\n<li>{@link #getHighlightText highlightText} : string (default: \"\")<\/li>\n<li>{@link #getNavigated navigated} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRowActions rowActions} : sap.ui.mdc.table.RowActionItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","insertRowAction":{"!description":"Inserts a rowAction into the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn(oRowAction: sap.ui.mdc.table.RowActionItem, iIndex: Number) -> sap.ui.mdc.table.RowSettings","parameters":{"oRowAction":"type: sap.ui.mdc.table.RowActionItem, description: The rowAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the rowAction should be inserted at; for a negative value of <code>iIndex<\/code>, the rowAction is inserted at position 0; for a value greater than the current size of the aggregation, the rowAction is inserted at the last position"}},"!module":"sap/ui/mdc/table/RowSettings","indexOfRowAction":{"!description":"Checks for the provided <code>sap.ui.mdc.table.RowActionItem<\/code> in the aggregation {@link #getRowActions rowActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRowAction: sap.ui.mdc.table.RowActionItem) -> Number","parameters":{"oRowAction":"type: sap.ui.mdc.table.RowActionItem, description: The rowAction whose index is looked for"}},"setHighlight":{"!description":"Sets a new value for property {@link #getHighlight highlight}.\n\nThe highlight state of the rows.\n\nIf the highlight is set to {@link sap.ui.core.MessageType sap.ui.core.MessageType.None} (default), no highlights are visible. Valid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor}.\n\nAccessibility support is provided through the associated {@link sap.ui.mdc.table.RowSettings#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHighlight?: String) -> sap.ui.mdc.table.RowSettings","parameters":{"sHighlight":"type: string, description: New value for property <code>highlight<\/code>"}},"!helpDescription":"The <code>RowSettings<\/code> control is used to configure a row. This control can only be used in the context of the <code>sap.ui.mdc.Table<\/code> control to define row settings.","setHighlightText":{"!description":"Sets a new value for property {@link #getHighlightText highlightText}.\n\nDefines the semantics of the {@link sap.ui.mdc.table.RowSettings#setHighlight highlight} property for accessibility purposes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHighlightText?: String) -> sap.ui.mdc.table.RowSettings","parameters":{"sHighlightText":"type: string, description: New value for property <code>highlightText<\/code>"}},"destroyRowActions":{"!description":"Destroys all the rowActions in the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.RowSettings"},"getRowActions":{"!description":"Gets content of aggregation {@link #getRowActions rowActions}.\n\nThe available actions for a row.\n\nrowActions cannot be bound with a factory. Additionally, {@link sap.m.Table} only works with row actions of type navigation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.table.RowActionItem]"},"removeRowAction":{"!description":"Removes a rowAction from the aggregation {@link #getRowActions rowActions}.","!static":false,"!category":"function","!type":"fn(vRowAction: Number | String | sap.ui.mdc.table.RowActionItem) -> sap.ui.mdc.table.RowActionItem | null","parameters":{"vRowAction":"type: int|string|sap.ui.mdc.table.RowActionItem, description: The rowAction to remove or its index or id"}}},"sap.ui.mdc.util":{"PromiseCache":"sap.ui.mdc.util.PromiseCache","DateUtil":"sap.ui.mdc.util.DateUtil","TypeUtil":"sap.ui.mdc.util.TypeUtil","FilterUtil":"sap.ui.mdc.util.FilterUtil","!category":"namespace"},"sap.ui.mdc.util.TypeUtil":{"!description":"Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage. <b>Note:<\/b> This utility is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/util/TypeUtil","!helpDescription":"Provides mapping functionality for model dependent data types to base types. Extend this object in your project to customize behaviour depending on model usage. <b>Note:<\/b> This utility is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","getDataTypeClass":{"!description":"Returns a dataType class based on given object path, formatoptions and constraints","!static":"true","!category":"function","!type":"fn(sDataType: String) -> sap.ui.model.SimpleType"},"externalizeValue":{"!description":"converts a value into a string using a designated type\n\nThe value is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(vValue: Object, vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> String"},"!category":"namespace","internalizeValue":{"!description":"converts a string into a type-based value\n\nThe value is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(sValue: String, vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> Object"},"getBaseType":{"!description":"To know what control is rendered the <code>Field<\/code> or <\/code>FilterField<\/code> needs to know if the type represents a date, a number or something else in a normalized way.\n\nAs default <code>string<\/code> is returned.","!static":"true","!category":"function","!type":"fn(sType: String, oFormatOptions: Object, oConstraints: Object) -> sap.ui.mdc.enum.BaseType"},"getDataTypeInstance":{"!description":"Returns a dataType instance based on given object path, formatoptions and constraints","!static":"true","!category":"function","!type":"fn(sDataType: String, oFormatOptions?: Object, oConstraints?: Object) -> sap.ui.model.SimpleType"},"getTypeConfig":{"!description":"returns a type mapping configuration object for a given type string or simpleType","!static":"true","!category":"function","!type":"fn(vType: String | sap.ui.model.SimpleType, oFormatOptions?: Object, oConstraints?: Object) -> sap.ui.mdc.TypeConfig"}},"sap.ui.mdc.field.OutParameter":{"!description":"The <code>OutParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.OutParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.InParameter.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.OutParameter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>OutParameter<\/code>.\n\nThe {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element supports out parameters. The binding to the data is defined in this element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFixedValue fixedValue} : any<\/li>\n<li>{@link #getMode mode} : sap.ui.mdc.enum.OutParameterMode (default: Always)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.InParameter#constructor sap.ui.mdc.field.InParameter}\ncan be used as well.","!module":"sap/ui/mdc/field/OutParameter","!helpDescription":"The <code>OutParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","setFixedValue":{"!description":"Sets a new value for property {@link #getFixedValue fixedValue}.\n\nFixed value which is set on the <code>OutParameter<\/code> element.\n\n<b>Note:<\/b> This property is only used if <code>helpPath<\/code> is not set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFixedValue?: Object) -> sap.ui.mdc.field.OutParameter","parameters":{"oFixedValue":"type: any, description: New value for property <code>fixedValue<\/code>"}},"getFixedValue":{"!description":"Gets current value of property {@link #getFixedValue fixedValue}.\n\nFixed value which is set on the <code>OutParameter<\/code> element.\n\n<b>Note:<\/b> This property is only used if <code>helpPath<\/code> is not set.","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.mdc.field.InParameter","setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nUpdate mode of the <code>OutParameter<\/code> element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Always<\/code>.","!static":false,"!category":"function","!type":"fn(sMode?: sap.ui.mdc.enum.OutParameterMode) -> sap.ui.mdc.field.OutParameter","parameters":{"sMode":"type: sap.ui.mdc.enum.OutParameterMode, description: New value for property <code>mode<\/code>"}},"!category":"class","getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nUpdate mode of the <code>OutParameter<\/code> element.\n\nDefault value is <code>Always<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enum.OutParameterMode"}},"sap.ui.mdc.table.RowActionItem":{"!description":"The <code>RowActionItem<\/code> control represents a action for a row. This control can only be used in the context of <code>sap.ui.mdc.Table<\/code> control to define row actions.","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nWhether the item should be visible on the screen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.mdc.table.RowActionItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.RowActionItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nWhether the item should be visible on the screen.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nText for the row action item.\n\nCustom text cannot be set when using <code>sap.m.Table<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nType of the row action item.\n\nAs of version 1.98, only sap.ui.mdc.RowAction.Navigation is available. Setting the type ensures default values for the properties <code>icon<\/code> and <code>text<\/code>. If an icon or text is set explicitly this setting is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.mdc.RowAction) -> sap.ui.mdc.table.RowActionItem","parameters":{"sType":"type: sap.ui.mdc.RowAction, description: New value for property <code>type<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon for the row action item.\n\nA custom icon cannot be set when using <code>sap.m.Table<\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowActionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon for the row action item.\n\nA custom icon cannot be set when using <code>sap.m.Table<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.mdc.table.RowActionItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.mdc.table.RowActionItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.RowActionItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.table.RowActionItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for new RowActionItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.mdc.RowAction<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/table/RowActionItem","!helpDescription":"The <code>RowActionItem<\/code> control represents a action for a row. This control can only be used in the context of <code>sap.ui.mdc.Table<\/code> control to define row actions.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nType of the row action item.\n\nAs of version 1.98, only sap.ui.mdc.RowAction.Navigation is available. Setting the type ensures default values for the properties <code>icon<\/code> and <code>text<\/code>. If an icon or text is set explicitly this setting is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.RowAction"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.mdc.table.RowActionItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.RowActionItem<\/code> itself.\n\nFired when the row action item is pressed.\n\n<code>sap.ui.table.Table<\/code>: The press event is fired when a row action item is pressed.\n\n<code>sap.m.Table<\/code>: The press event is fired when a row with a row action item is pressed. The <code>sap.ui.mdc.Table<\/code>'s <code>rowPress<\/code> event is fired as well, when pressing a row with a row action item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.RowActionItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.RowActionItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nText for the row action item.\n\nCustom text cannot be set when using <code>sap.m.Table<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.ui.mdc.table.RowActionItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.mdc.condition.FilterConverter":{"!description":"Utility to convert {@link sap.ui.mdc.condition.ConditionObject conditions} of a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} into {@link sap.ui.model.Filter Filter}","createConditionTypesMapFromFilterBar":{"!description":"creates a map with the types of the conditions.","!static":"true","!category":"function","!type":"fn(oConditions: Object, oFilterBar: sap.ui.mdc.FilterBar) -> Object"},"!module":"sap/ui/mdc/condition/FilterConverter","!helpDescription":"Utility to convert {@link sap.ui.mdc.condition.ConditionObject conditions} of a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} into {@link sap.ui.model.Filter Filter}","createFilters":{"!description":"Converts all conditions given in a oConditions map into a {@link sap.ui.model.Filter Filter} object.","!static":"true","!category":"function","!type":"fn(oConditions: Object, oConditionTypes: Object, fConvert2FilterCallback?: fn(), bCaseSensitive?: Boolean) -> sap.ui.model.Filter"},"!category":"namespace"},"sap.ui.mdc.filterbar.vh.FilterContainer":{"!description":"The FilterContainer is a IFilterContainer implementation for <code>AlignedFlowLayout<\/code>","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.FilterContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.IFilterContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.vh.FilterContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new filterBar/vh/FilterContainer.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.filterbar.IFilterContainer#constructor sap.ui.mdc.filterbar.IFilterContainer}\ncan be used as well.","!module":"sap/ui/mdc/filterbar/vh/FilterContainer","!helpDescription":"The FilterContainer is a IFilterContainer implementation for <code>AlignedFlowLayout<\/code>","!proto":"sap.ui.mdc.filterbar.IFilterContainer","!category":"class"},"sap.ui.mdc.table.TableTypeBase":{"!description":"The table type info base class for the metadata-driven table. Base class with no implementation.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.TableTypeBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.TableTypeBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TableTypeBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","!module":"sap/ui/mdc/table/TableTypeBase","!helpDescription":"The table type info base class for the metadata-driven table. Base class with no implementation.","!proto":"sap.ui.core.Element","!category":"class"},"sap.ui.mdc.field.FieldInput":{"!description":"The <code>FieldInput<\/code> control is used to render an input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldInput<\/code>.\n\nThe <code>FieldInput<\/code> control enhances the {@link sap.m.Input Input} control to add ARIA attributes\nand other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAriaAttributes ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Input#constructor sap.m.Input}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldInput","!helpDescription":"The <code>FieldInput<\/code> control is used to render an input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","setAriaAttributes":{"!description":"Sets a new value for property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>Input<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAriaAttributes?: Object) -> sap.ui.mdc.field.FieldInput","parameters":{"oAriaAttributes":"type: object, description: New value for property <code>ariaAttributes<\/code>"}},"!proto":"sap.m.Input","getAriaAttributes":{"!description":"Gets current value of property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>Input<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.p13n":{"AdaptationProvider":"sap.ui.mdc.p13n.AdaptationProvider_obj","UIManager":"sap.ui.mdc.p13n.UIManager_obj","!category":"namespace","subcontroller":"sap.ui.mdc.p13n.subcontroller","StateUtil":"sap.ui.mdc.p13n.StateUtil_obj","modification":"sap.ui.mdc.p13n.modification","Engine":"sap.ui.mdc.p13n.Engine_obj","modules":"sap.ui.mdc.p13n.modules"},"sap.ui.mdc.field.DynamicDateRangeConditionsType":{"!description":"This class represents a type to map an array of conditions used in a {@link sap.ui.mdc.FilterField FilterField} control to a value of a {@link sap.m.DynamicDateRange DynamicDateRange} control.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DynamicDateRangeConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.ConditionsType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.DynamicDateRangeConditionsType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a <code>ConditionsType<\/code> to be used in <code>DynamicDateRange<\/code> control.","!module":"sap/ui/mdc/field/DynamicDateRangeConditionsType","!helpDescription":"This class represents a type to map an array of conditions used in a {@link sap.ui.mdc.FilterField FilterField} control to a value of a {@link sap.m.DynamicDateRange DynamicDateRange} control.","!proto":"sap.ui.mdc.field.ConditionsType","!category":"class"},"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMdcTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper"},"sap.ui.mdc.mixin.AdaptationMixin":{"!description":"Enhances a given control prototype with consolidated handling for adaptation.\n\nThe following methods are available:\n\n<ul> <li><code>getEngine<\/code> - Provides access to the adaptation engine singleton instance.<\/li> <li><code>retrieveInbuiltFilter<\/code> - Provides access to the AdaptationFilterBar initialization<\/li> <li><code>getInbuiltFilter<\/code> - Returns the AdaptationFilterBar instance, if available.<\/li> <li><code>getAdaptationConfigAttribute<\/code> - Returns an adaptationConfig attribute.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>exit<\/code><\/li> <\/ul>","!module":"sap/ui/mdc/mixin/AdaptationMixin","!helpDescription":"Enhances a given control prototype with consolidated handling for adaptation.\n\nThe following methods are available:\n\n<ul> <li><code>getEngine<\/code> - Provides access to the adaptation engine singleton instance.<\/li> <li><code>retrieveInbuiltFilter<\/code> - Provides access to the AdaptationFilterBar initialization<\/li> <li><code>getInbuiltFilter<\/code> - Returns the AdaptationFilterBar instance, if available.<\/li> <li><code>getAdaptationConfigAttribute<\/code> - Returns an adaptationConfig attribute.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>exit<\/code><\/li> <\/ul>","!category":"namespace"},"sap.ui.mdc.field.FieldValueHelpMTableWrapper":{"!description":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpMTableWrapper.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpMTableWrapper<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. This is a wrapper to use a\n{@link sap.m.Table Table} control as content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.m.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase#constructor sap.ui.mdc.field.FieldValueHelpTableWrapperBase}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldValueHelpMTableWrapper","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpMTableWrapper"},"!helpDescription":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.\n\nTable of the field help.\n\nAs the <code>FieldValueHelp<\/code> element cannot know the semantic of the items, the caller is responsible for the item handling. The items must be active to allow interaction and selection.\n\nThis can be handled automatically if the following applies: <ul> <li>No <code>keyPath<\/code> or <code>descriptionPath<\/code> is specified for the <code>FieldValueHelp<\/code> element<\/li> <li>Table has no paging <\/li> <li>Table uses <code>ColumnListItem<\/code> as item <\/li> <li>The first column if the table contains the key and the second column the description, using a <code>Text<\/code> control <\/li> <\/ul>\n\nFor everything else the application has to implement the logic.\n\nIf the <code>ListBinding<\/code> of the table is initially created to be suspended, no filtering or selection is triggered. So the table is empty. Upon user interaction (type ahead, search request, or search from <code>FilterBar<\/code>) the <code>ListBinding<\/code> is resumed so the filter is executed. If <code>FilterBar<\/code> is in <code>LiveMode<\/code>, and <code>InParameters<\/code> are used, this also triggers filtering.","!static":false,"!category":"function","!type":"fn() -> sap.m.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.m.Table) -> sap.ui.mdc.field.FieldValueHelpMTableWrapper","parameters":{"oTable":"type: sap.m.Table, description: The table to set"}},"!proto":"sap.ui.mdc.field.FieldValueHelpTableWrapperBase","!category":"class"},"sap.ui.mdc.odata.v4":{"ChartDelegate":{"!description":"Delegate class for sap.ui.mdc.Chart and ODataV4. Enables additional analytical capabilities. <b>Note:<\/b> The class is experimental and the API/behavior is not finalized.","!module":"sap/ui/mdc/odata/v4/ChartDelegate","!category":"enum","!type":"String"},"FieldValueHelpDelegate":"sap.ui.mdc.odata.v4.FieldValueHelpDelegate_obj","!category":"namespace"},"sap.ui.mdc.valuehelp":{"!description":"Modules for {@link sap.ui.mdc.ValueHelp ValueHelp}","ITypeaheadContainer":"sap.ui.mdc.valuehelp.ITypeaheadContainer","_quickSelectEnabled":{"!description":"_quickSelectEnabled : Boolean","!category":"enum","!type":"Boolean"},"_selectedContentKey":{"!description":"_selectedContentKey : String","!category":"enum","!type":"String"},"_selectableContents":{"!description":"_selectableContents : [Object]","!category":"enum","!type":"[Object]"},"IDialogContainer":"sap.ui.mdc.valuehelp.IDialogContainer","IDialogContent":"sap.ui.mdc.valuehelp.IDialogContent","!category":"namespace","title":{"!description":"Title text that appears in the dialog or tab header.","!category":"enum","!type":"String"},"groupConfig":{"!description":"Configuration for groups (collective search).","!category":"enum","!type":"Object"},"content":"sap.ui.mdc.valuehelp.content","!module":"sap/ui/mdc/ValueHelp","!helpDescription":"Modules for {@link sap.ui.mdc.ValueHelp ValueHelp}","Dialog":"sap.ui.mdc.valuehelp.Dialog_obj","ITypeaheadContent":"sap.ui.mdc.valuehelp.ITypeaheadContent","Popover":"sap.ui.mdc.valuehelp.Popover_obj","base":"sap.ui.mdc.valuehelp.base"},"sap.ui.mdc.p13n.UIManager_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.UIManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.p13n.UIManager"},"sap.ui.mdc.table.GridTableType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.GridTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.GridTableType"},"sap.ui.mdc.chart":{"ChartSelectionDetails":"sap.ui.mdc.chart.ChartSelectionDetails_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"role":{"!description":"Specifies the role of the item for the chart. This is specific for the used chart library. <b>NOTE: <\/b> This property must not be changed after initialization.","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"!category":"namespace","label":{"!description":"Label for the item, either as a string literal or by a pointer, using the binding to some property containing the label.","!category":"enum","!type":"String"},"type":{"!description":"type : String","!category":"enum","!type":"String"},"SelectionDetailsActions":"sap.ui.mdc.chart.SelectionDetailsActions_obj","Item":"sap.ui.mdc.chart.Item_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"name":{"!description":"The unique identifier of the chart item that reflects the name of the data property in the resulting data set.","!category":"enum","!type":"String"}},"sap.ui.mdc.filterbar.aligned.FilterContainer":{"!description":"The FilterContainer is a IFilterContainer implementation for <code>AlignedFlowLayout<\/code>","!constructorDescription":"Constructor for a new filterBar/aligned/FilterContainer.","!module":"sap/ui/mdc/filterbar/aligned/FilterContainer","!helpDescription":"The FilterContainer is a IFilterContainer implementation for <code>AlignedFlowLayout<\/code>","!proto":"sap.ui.mdc.filterbar.IFilterContainer","!category":"class"},"sap.ui.mdc.field.ConditionType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.mdc.field.ConditionType"},"sap.ui.mdc.field.FieldBase":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nIndicates that user input is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nDefines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMaxConditions":{"!description":"Gets current value of property {@link #getMaxConditions maxConditions}.\n\nSets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"_observeChanges":{"!description":"Observes changes.\n\nTo be enhanced by <code>Field<\/code>, <\/code>FilterField<\/code>, or other inherited controls.","!static":false,"!category":"function","!type":"fn(oChanges: Object)","parameters":{"oChanges":"type: object, description: Changes"}},"getDataType":{"!description":"Gets current value of property {@link #getDataType dataType}.\n\nThe type of data handled by the field. This type is used to parse, format, and validate the value.\n\nDefault value is <code>'sap.ui.model.type.String'<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueStateText":{"!description":"Sets a new value for property {@link #getValueStateText valueStateText}.\n\nDefines the text that appears in the value state message pop-up. If this has not specified, a default text from the resource bundle is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueStateText?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sValueStateText":"type: string, description: New value for property <code>valueStateText<\/code>"}},"getMultipleLines":{"!description":"Gets current value of property {@link #getMultipleLines multipleLines}.\n\nIf set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContentDisplay":{"!description":"Gets content of aggregation {@link #getContentDisplay contentDisplay}.\n\nOptional content to be rendered if the <code>editMode<\/code> property is set to <code>Display<\/code>.\n\n<b>Note:<\/b> If a control is assigned to the <code>content<\/code> aggregation, this one is ignored.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getEditMode":{"!description":"Gets current value of property {@link #getEditMode editMode}.\n\nDetermines whether the field is editable, read-only, or disabled.\n\nDefault value is <code>Editable<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enum.EditMode"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired if the inner control has a <\/code>press<\/code> event and this is fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"!description":"The <code>FieldBase<\/code> control is the basic control to be used within the {@link sap.ui.mdc.Field Field} and {@link sap.ui.mdc.FilterField FilterField} controls. It must not be used stand-alone.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFieldInfo":{"!description":"Sets the aggregated {@link #getFieldInfo fieldInfo}.","!static":false,"!category":"function","!type":"fn(oFieldInfo: sap.ui.mdc.field.FieldInfoBase) -> sap.ui.mdc.field.FieldBase","parameters":{"oFieldInfo":"type: sap.ui.mdc.field.FieldInfoBase, description: The fieldInfo to set"}},"setMaxConditions":{"!description":"Sets a new value for property {@link #getMaxConditions maxConditions}.\n\nSets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxConditions?: Number) -> sap.ui.mdc.field.FieldBase","parameters":{"iMaxConditions":"type: int, description: New value for property <code>maxConditions<\/code>"}},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, for example <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.mdc.field.FieldBase","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"_getFormatOptions":{"!description":"Provides some internals of the field to be used in the value help.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:liveChange liveChange} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setTextAlign":{"!description":"Sets a new value for property {@link #getTextAlign textAlign}.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign?: sap.ui.core.TextAlign) -> sap.ui.mdc.field.FieldBase","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property {@link #getTextDirection textDirection}.\n\nDefines the text directionality of the input field, for example <code>RTL<\/code>, <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection?: sap.ui.core.TextDirection) -> sap.ui.mdc.field.FieldBase","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"connectLabel":{"!description":"Assigns a <code>Label<\/code> control to the <code>Field<\/code> or <\/code>FilterField<\/code> controls.\n\nThe text of the label is taken from the <code>Field<\/code> or <\/code>FilterField<\/code> controls. The <code>labelFor<\/code> association is set to the <code>Field<\/code> or <\/code>FilterField<\/code> control.","!static":false,"!category":"function","!type":"fn(oLabel: sap.ui.core.Label) -> sap.ui.mdc.field.FieldBase","parameters":{"oLabel":"type: sap.ui.core.Label, description: Label control"}},"destroyFieldInfo":{"!description":"Destroys the fieldInfo in the aggregation {@link #getFieldInfo fieldInfo}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setDataType":{"!description":"Sets a new value for property {@link #getDataType dataType}.\n\nThe type of data handled by the field. This type is used to parse, format, and validate the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>'sap.ui.model.type.String'<\/code>.","!static":false,"!category":"function","!type":"fn(sDataType?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sDataType":"type: string, description: New value for property <code>dataType<\/code>"}},"!module":"sap/ui/mdc/field/FieldBase","!helpDescription":"The <code>FieldBase<\/code> control is the basic control to be used within the {@link sap.ui.mdc.Field Field} and {@link sap.ui.mdc.FilterField FilterField} controls. It must not be used stand-alone.","setDataTypeConstraints":{"!description":"Sets a new value for property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDataTypeConstraints":"type: object, description: New value for property <code>dataTypeConstraints<\/code>"}},"detachSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:submit submit} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getControlForSuggestion":{"!description":"Returns the control the value help is attached to.\n\nIn the case that number and unit are shown in different controls, this is the unit control, not the number control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setFieldHelp":{"!description":"Sets the associated {@link #getFieldHelp fieldHelp}.","!static":false,"!category":"function","!type":"fn(oFieldHelp: sap.ui.core.ID | sap.ui.mdc.ValueHelp) -> sap.ui.mdc.field.FieldBase","parameters":{"oFieldHelp":"type: sap.ui.core.ID|sap.ui.mdc.ValueHelp, description: ID of an element which becomes the new target of this fieldHelp association; alternatively, an element instance may be given"}},"attachSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:submit submit} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired when the user presses <kbd>Enter<\/kbd>. It allows the application to implement some submit logic.\n\n<b>Note<\/b> This event is only triggered if the field is editable.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireLiveChange":{"!description":"Fires event {@link #event:liveChange liveChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMaxConditionsForHelp":{"!description":"In the case that number and unit are shown in different controls, only one unit is supported. So the value help needs to be in single selection mode.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn() -> Object"},"getFieldInfo":{"!description":"Gets content of aggregation {@link #getFieldInfo fieldInfo}.\n\nOptional <code>FieldInfo<\/code> used for detail information. This is only active in display mode.\n\n<b>Note:<\/b> If a special data type is defined or a content control is set, this is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldInfoBase"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the control has no value. If the value is <code>null<\/code> no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditMode":{"!description":"Sets a new value for property {@link #getEditMode editMode}.\n\nDetermines whether the field is editable, read-only, or disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Editable<\/code>.","!static":false,"!category":"function","!type":"fn(sEditMode?: sap.ui.mdc.enum.EditMode) -> sap.ui.mdc.field.FieldBase","parameters":{"sEditMode":"type: sap.ui.mdc.enum.EditMode, description: New value for property <code>editMode<\/code>"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nOptional content that can be rendered.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.Control","getTextAlign":{"!description":"Gets current value of property {@link #getTextAlign textAlign}.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","_checkValueInitial":{"!description":"If the value is the initial value of the type (String types) and the field does not show tokens or operators, no condition must be set as the field is then empty.","!static":false,"!category":"function","!type":"fn(vValue: Object) -> Boolean","parameters":{"vValue":"type: any, description: Value to be checked"}},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to <code>FieldBaseDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:liveChange liveChange} event of this <code>sap.ui.mdc.field.FieldBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldBase<\/code> itself.\n\nThis event is fired when the value of the field is changed, for example, each time a key is pressed.\n\n<b>Note<\/b> This event is only triggered if the used content control has a <code>liveChange<\/code> event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowEmptyIndicator":{"!description":"Gets current value of property {@link #getShowEmptyIndicator showEmptyIndicator}.\n\nIf set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowEmptyIndicator":{"!description":"Sets a new value for property {@link #getShowEmptyIndicator showEmptyIndicator}.\n\nIf set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEmptyIndicator?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bShowEmptyIndicator":"type: boolean, description: New value for property <code>showEmptyIndicator<\/code>"}},"!constructorDescription":"Constructor for a new <code>FieldBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDataType dataType} : string (default: 'sap.ui.model.type.String')<\/li>\n<li>{@link #getDataTypeConstraints dataTypeConstraints} : object<\/li>\n<li>{@link #getDataTypeFormatOptions dataTypeFormatOptions} : object<\/li>\n<li>{@link #getEditMode editMode} : sap.ui.mdc.enum.EditMode (default: Editable)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getDisplay display} : sap.ui.mdc.enum.FieldDisplay (default: Value)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMultipleLines multipleLines} : boolean (default: false)<\/li>\n<li>{@link #getMaxConditions maxConditions} : int (default: -1)<\/li>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getShowEmptyIndicator showEmptyIndicator} : boolean (default: false)<\/li>\n<li>{@link #get_fieldHelpEnabled _fieldHelpEnabled} : boolean (default: false)<\/li>\n<li>{@link #get_ariaAttributes _ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getContentEdit contentEdit} : sap.ui.core.Control<\/li>\n<li>{@link #getContentDisplay contentDisplay} : sap.ui.core.Control<\/li>\n<li>{@link #getFieldInfo fieldInfo} : sap.ui.mdc.field.FieldInfoBase<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFieldHelp fieldHelp} : (sap.ui.core.ID | sap.ui.mdc.ValueHelp)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:submit submit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"destroyContentDisplay":{"!description":"Destroys the contentDisplay in the aggregation {@link #getContentDisplay contentDisplay}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the values of the field.\n\nThis should be bound to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} using the corresponding fieldPath.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property must be used to bind {@link sap.ui.mdc.FilterField FilterField} to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.<\/br> For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\nFor an Any (see {@link sap.ui.model.FilterOperator}) {@link sap.ui.mdc.FilterField FilterField} control, the binding looks like this:<\/br> <code>conditions='{$filters>/conditions/navPath&#42;/propertyPath}'<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>navPath#42;/<\/code> as the navigation property name<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul> Between <code>navPath<\/code> and <code>propertyPath<\/code>, <b>&#42;/<\/b> is required.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.FieldBase","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the control has no value. If the value is <code>null<\/code> no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getFieldPath":{"!description":"Gets <code>fieldPath<\/code>.\n\nIf the <code>conditions<\/code> are bound to a <code>ConditionModel<\/code>, the <code>FieldPath<\/code> is determined from this binding.","!static":false,"!category":"function","!type":"fn() -> String"},"getDataTypeFormatOptions":{"!description":"Gets current value of property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"fireSubmit":{"!description":"Fires event {@link #event:submit submit} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setContentEdit":{"!description":"Sets the aggregated {@link #getContentEdit contentEdit}.","!static":false,"!category":"function","!type":"fn(oContentEdit: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContentEdit":"type: sap.ui.core.Control, description: The contentEdit to set"}},"setDisplay":{"!description":"Sets a new value for property {@link #getDisplay display}.\n\nDefines whether the value and/or description of the field is shown and in what order.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Value<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplay?: sap.ui.mdc.enum.FieldDisplay) -> sap.ui.mdc.field.FieldBase","parameters":{"sDisplay":"type: sap.ui.mdc.enum.FieldDisplay, description: New value for property <code>display<\/code>"}},"getValueStateText":{"!description":"Gets current value of property {@link #getValueStateText valueStateText}.\n\nDefines the text that appears in the value state message pop-up. If this has not specified, a default text from the resource bundle is shown.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyContentEdit":{"!description":"Destroys the contentEdit in the aggregation {@link #getContentEdit contentEdit}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldBase"},"setDataTypeFormatOptions":{"!description":"Sets a new value for property {@link #getDataTypeFormatOptions dataTypeFormatOptions}.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDataTypeFormatOptions":"type: object, description: New value for property <code>dataTypeFormatOptions<\/code>"}},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the values of the field.\n\nThis should be bound to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} using the corresponding fieldPath.\n\n<b>Note:<\/b> For {@link sap.ui.mdc.FilterField FilterField} controls, the <code>conditions<\/code> property must be used to bind {@link sap.ui.mdc.FilterField FilterField} to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.<\/br> For example, for a {@link sap.ui.mdc.FilterField FilterField} control inside a {@link sap.ui.mdc.FilterBar FilterBar} control the binding looks like this:<\/br> <code>conditions=\"{$filters>/conditions/propertyPath}\"<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul>\n\nFor an Any (see {@link sap.ui.model.FilterOperator}) {@link sap.ui.mdc.FilterField FilterField} control, the binding looks like this:<\/br> <code>conditions='{$filters>/conditions/navPath&#42;/propertyPath}'<\/code> with the following data: <ul> <li><code>$filters<\/code> as the name of the condition model<\/li> <li><code>/conditions/<\/code> as a required static part of the binding<\/li> <li><code>navPath#42;/<\/code> as the navigation property name<\/li> <li><code>propertyPath<\/code> as the property name<\/li> <\/ul> Between <code>navPath<\/code> and <code>propertyPath<\/code>, <b>&#42;/<\/b> is required.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setContentDisplay":{"!description":"Sets the aggregated {@link #getContentDisplay contentDisplay}.","!static":false,"!category":"function","!type":"fn(oContentDisplay: sap.ui.core.Control) -> sap.ui.mdc.field.FieldBase","parameters":{"oContentDisplay":"type: sap.ui.core.Control, description: The contentDisplay to set"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.field.FieldBase","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setMultipleLines":{"!description":"Sets a new value for property {@link #getMultipleLines multipleLines}.\n\nIf set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMultipleLines?: Boolean) -> sap.ui.mdc.field.FieldBase","parameters":{"bMultipleLines":"type: boolean, description: New value for property <code>multipleLines<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to <code>FieldBaseDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.field.FieldBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getContentEdit":{"!description":"Gets content of aggregation {@link #getContentEdit contentEdit}.\n\nOptional content to be rendered if the <code>editMode<\/code> property is not set to <code>Display<\/code>.\n\n<b>Note:<\/b> If a control is assigned to the <code>content<\/code> aggregation, this one is ignored.\n\n<b>Note:<\/b> Bind the value-holding property of the control to <code>'$field>/conditions'<\/code> using {@link sap.ui.mdc.field.ConditionsType ConditionsType} as type.\n\nIf the control needs to show multiple conditions, bind its aggregation to <\/code>'$field>/conditions'<\/code>. Bind the item controls value-holding property using {@link sap.ui.mdc.field.ConditionType ConditionType} as type.\n\n<b>Warning:<\/b> Only controls allowed in a {@link sap.ui.layout.form.Form Form} are allowed to be used for this optional content. Other controls might break the layout. This means the {@link sap.ui.core.IFormContent IFormContent} interface needs to be implemented by these controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getFieldHelp":{"!description":"ID of the element which is the current target of the association {@link #getFieldHelp fieldHelp}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nVisualizes the validation state of the control, for example <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nDefines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.field.FieldBase","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"getDisplay":{"!description":"Gets current value of property {@link #getDisplay display}.\n\nDefines whether the value and/or description of the field is shown and in what order.\n\nDefault value is <code>Value<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enum.FieldDisplay"},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nIndicates that user input is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property {@link #getTextDirection textDirection}.\n\nDefines the text directionality of the input field, for example <code>RTL<\/code>, <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"getDataTypeConstraints":{"!description":"Gets current value of property {@link #getDataTypeConstraints dataTypeConstraints}.\n\nThe constraints of the type specified in <code>dataType<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.table.TableTypeBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.TableTypeBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.TableTypeBase"},"sap.ui.mdc.condition.ConditionModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.condition.ConditionModel"},"sap.ui.mdc.field.FieldValueHelpMTableWrapper_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpMTableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpMTableWrapper"},"sap.ui.mdc":{"filterConditions":{"!description":"Defines the filter conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!category":"enum","!type":"Object"},"showSelectionDetails":{"!description":"Enables the Details button in the chart toolbar.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"asyncMode":{"!description":"Defines whether the <code>OverflowToolbar<\/code> works in async mode.\n\n<b>Note:<\/b> When this property is set to <code>true<\/code>, the <code>OverflowToolbar<\/code> makes its layout recalculations asynchronously. This way it is not blocking the thread immediately after re-rendering or resizing. However, it may lead to flickering, when there is a change in the width of the content of the <code>OverflowToolbar<\/code>.","!category":"enum","!type":"Boolean"},"_ariaAttributes":{"!description":"Sets the ARIA attributes added to the inner control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"required":{"!description":"Indicates that user input is required.","!category":"enum","!type":"Boolean"},"minHeight":{"!description":"The minimal height","!category":"enum","!type":"sap.ui.core.CSSSize"},"p13nMode":{"!description":"Personalization options for the table.<br> <b>Note:<\/b> The order of the options does not influence the position on the UI.","!category":"enum","!type":"[sap.ui.mdc.TableP13nMode]"},"actiontoolbar":"sap.ui.mdc.actiontoolbar","validateInput":{"!description":"If this property is set, the user input of the corresponding field is validated against the value help. If no entry is found for the user input, an error is shown on the field.\n\nIf this property is not set, the user input is still checked against the value help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds after which the busy indicator is shown.","!category":"enum","!type":"Number"},"FilterBarDelegate":"sap.ui.mdc.FilterBarDelegate_obj","height":{"!description":"Height of the table.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","MultiValueField":"sap.ui.mdc.MultiValueField_obj","active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true. Note: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!category":"enum","!type":"Boolean"},"enablePaste":{"!description":"Determines whether the Paste button is enabled.","!category":"enum","!type":"Boolean"},"ActionToolbar":"sap.ui.mdc.ActionToolbar_obj","enum":"sap.ui.mdc.enum","p13n":"sap.ui.mdc.p13n","field":"sap.ui.mdc.field","util":"sap.ui.mdc.util","!module":"sap/ui/mdc/library","showRowCount":{"!description":"Determines whether the number of rows is shown along with the header text. If set to <code>false<\/code>, the number of rows is not shown on the user interface.<br> <b>Note:<\/b><br> For better performance dedicated OData requests should not be sent. The count mode must be configured either in the model or in the binding of the table.<br> This property can only be used if the back-end service supports row count.","!category":"enum","!type":"Boolean"},"_valid":{"!description":"Internal property to allow to bind the valid state to OK Button or make it available for all content controls","!category":"enum","!type":"Boolean"},"IFilter":"sap.ui.mdc.IFilter","style":{"!description":"Defines the visual style of the <code>Toolbar<\/code>.\n\n<b>Note:<\/b> The visual styles are theme-dependent.","!category":"enum","!type":"sap.m.ToolbarStyle"},"conditions":{"!description":"The conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.","!category":"enum","!type":"[Object]"},"Link":"sap.ui.mdc.Link_obj","defaultOperator":{"!description":"Default operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.","!category":"enum","!type":"String"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"FilterBarP13nMode":"sap.ui.mdc.FilterBarP13nMode","enabled":{"!description":"Sets the enabled property of all controls defined in the content aggregation. Note: This property does not apply to the toolbar itself, but rather to its items.","!category":"enum","!type":"Boolean"},"delegate":{"!description":"Path to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.","!category":"enum","!type":"Object"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"showPasteButton":{"!description":"Determines whether the Paste button is visible.","!category":"enum","!type":"Boolean"},"operators":{"!description":"Supported operator names for conditions.\n\nIf empty, default operators depending on used data type are used.","!category":"enum","!type":"[String]"},"valuehelp":"sap.ui.mdc.valuehelp","ignoreToolbarActions":{"!description":"Specifies which actions should not be available in the chart's toolbar.","!category":"enum","!type":"[sap.ui.mdc.ChartToolbarActionType]"},"Chart":"sap.ui.mdc.Chart_obj","table":"sap.ui.mdc.table","showChartTooltip":{"!description":"Controls the visibility of the chart tooltip. If set to <code>true<\/code>, an instance of {@link sap.viz.ui5.controls.VizTooltip} is created and shown when hovering over a data point.","!category":"enum","!type":"Boolean"},"Table":"sap.ui.mdc.Table_obj","dataTypeFormatOptions":{"!description":"The format options of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"dataTypeConstraints":{"!description":"The constraints of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"legendVisible":{"!description":"Enables the legend of the chart.","!category":"enum","!type":"Boolean"},"display":{"!description":"Defines whether the value and/or description of the field is shown and in what order.","!category":"enum","!type":"sap.ui.mdc.enum.FieldDisplay"},"minWidth":{"!description":"The minimal width","!category":"enum","!type":"sap.ui.core.CSSSize"},"noDataText":{"!description":"Determines the text shown if the table has no data.","!category":"enum","!type":"String"},"sortConditions":{"!description":"Defines the sort conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!category":"enum","!type":"Object"},"headerLevel":{"!description":"Semantic level of the header. For more information, see {@link sap.m.Title#setLevel}.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"width":{"!description":"Width of the table.","!category":"enum","!type":"sap.ui.core.CSSSize"},"chartType":{"!description":"Specifies the type of chart to be created by the <code>Chart<\/code> control.","!category":"enum","!type":"String"},"chart":"sap.ui.mdc.chart","_p13nModeItem":{"!description":"Specifies if the personalization mode for filter items is supported.","!category":"enum","!type":"Boolean"},"GrowingMode":"sap.ui.mdc.GrowingMode","autoBindOnInit":{"!description":"Determines whether to bind the table automatically after the initial creation or re-creation of the table.","!category":"enum","!type":"Boolean"},"valueState":{"!description":"Visualizes the validation state of the control, for example <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\n<b>Note:<\/b> The visualization of the <code>ValueState<\/code> property is handled by the inner rendered control. If a control is set (using <code>content<\/code>, <code>contentEdit<\/code>, or <code>contentDisplay<\/code>), this control needs to support the <code>valueState<\/code> behavior, otherwise <code>valueState<\/code> is not visualized.","!category":"enum","!type":"sap.ui.core.ValueState"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this has not specified, a default text from the resource bundle is shown.","!category":"enum","!type":"String"},"threshold":{"!description":"Number of records to be requested from the model. If the <code>type<\/code> property is set to <code>ResponsiveTable<\/code>, then it refers to the {@link sap.m.ListBase#getGrowingThreshold growingThreshold} property of <code>ResponsiveTable<\/code>. If the <code>type<\/code> property is set to <code>Table<\/code>, then it refers to the {@link sap.ui.table.Table#getThreshold threshold} property of <code>GridTable<\/code>.<br> <b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the table uses the default value of the corresponding table types.","!category":"enum","!type":"Number"},"RowCountMode":"sap.ui.mdc.RowCountMode","_fieldHelpEnabled":{"!description":"Internal property to bind the <code>showValueHelp<\/code> property of the internal <code>Input<\/code> control.","!category":"enum","!type":"Boolean"},"IFilterSource":"sap.ui.mdc.IFilterSource","maxConditions":{"!description":"Sets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"sap.ui.core.TextAlign"},"dataType":{"!description":"The type of data handled by the field. This type is used to parse, format, and validate the value.","!category":"enum","!type":"String"},"enablePersonalization":{"!description":"Enables/disables the personalization settings for users and key users.","!category":"enum","!type":"Boolean"},"multiSelectMode":{"!description":"Defines the multi-selection mode for the control. If this property is set to the <code>Default<\/code> value, the <code>ResponsiveTable<\/code> type control renders the Select All checkbox in the column header, otherwise the Deselect All icon is rendered.\n\nThis property is used with the <code>selectionMode=\"Multi\"<\/code>.","!category":"enum","!type":"sap.ui.mdc.MultiSelectMode"},"mixin":"sap.ui.mdc.mixin","useAsHeader":{"!description":"Determines whether the toolbar is used as header (e.g. for a table).","!category":"enum","!type":"Boolean"},"MultiSelectMode":"sap.ui.mdc.MultiSelectMode","enableColumnResize":{"!description":"Determines whether column resizing is enabled.","!category":"enum","!type":"Boolean"},"FilterBar":"sap.ui.mdc.FilterBar_obj","condition":"sap.ui.mdc.condition","filterValue":{"!description":"The value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>ValueHelp<\/code> elements content supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!category":"enum","!type":"String"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","RowAction":"sap.ui.mdc.RowAction","editMode":{"!description":"Determines whether the field is editable, read-only, or disabled.","!category":"enum","!type":"sap.ui.mdc.enum.EditMode"},"header":{"!description":"Header text that is shown in the table.","!category":"enum","!type":"String"},"FilterField":"sap.ui.mdc.FilterField_obj","showGoButton":{"!description":"Determines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"selectionMode":{"!description":"Selection mode of the table. Specifies whether single or multiple rows can be selected and how the selection can be extended. It may also influence the visual appearance.","!category":"enum","!type":"sap.ui.mdc.SelectionMode"},"SelectionMode":"sap.ui.mdc.SelectionMode","ChartP13nMode":"sap.ui.mdc.ChartP13nMode","showAdaptFiltersButton":{"!description":"Determines whether the Adapt Filters button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.","!category":"enum","!type":"Boolean"},"ariaHasPopup":{"!description":"Defines the aria-haspopup attribute of the <code>Toolbar<\/code>. if the active <code>design<\/code> is true.\n\n<b>Guidance for choosing appropriate value:<\/b> <ul> <li> We recommend that you use the {@link sap.ui.core.aria.HasPopup} enumeration.<\/li> <li> If you use controls based on <code>sap.m.Popover<\/code> or <code>sap.m.Dialog<\/code>, then you must use <code>AriaHasPopup.Dialog<\/code> (both <code>sap.m.Popover<\/code> and <code>sap.m.Dialog<\/code> have role \"dialog\" assigned internally).<\/li> <li> If you use other controls, or directly <code>sap.ui.core.Popup<\/code>, you need to check the container role/type and map the value of <code>ariaHasPopup<\/code> accordingly.<\/li> <\/ul>","!category":"enum","!type":"String"},"showMessages":{"!description":"Displays possible errors during the search in a message box.","!category":"enum","!type":"Boolean"},"Element":"sap.ui.mdc.Element_obj","aggregateConditions":{"!description":"Defines the aggregate conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is exclusively used for handling SAPUI5 flexibility changes.","!category":"enum","!type":"Object"},"!category":"namespace","_config":{"!description":"internal configuration","!category":"enum","!type":"Object"},"textDirection":{"!description":"Defines the text directionality of the input field, for example <code>RTL<\/code>, <code>LTR<\/code>.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"sap.ui.core.TextDirection"},"Field":"sap.ui.mdc.Field_obj","Control":"sap.ui.mdc.Control_obj","odata":"sap.ui.mdc.odata","TableP13nMode":"sap.ui.mdc.TableP13nMode","liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"enableExport":{"!description":"Determines whether the table data export is enabled.","!category":"enum","!type":"Boolean"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"design":{"!description":"Defines the toolbar design.\n\n<b>Note:<\/b> Design settings are theme-dependent. They also determine the default height of the toolbar.","!category":"enum","!type":"sap.m.ToolbarDesign"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value. If the value is <code>null<\/code> no placeholder is shown.\n\n<b>Note:<\/b> If the rendered control doesn't support this feature, this property is ignored.","!category":"enum","!type":"String"},"headerVisible":{"!description":"Determines whether the header text is shown in the table. Regardless of its value, the given header text is used to label the table correctly for accessibility purposes.","!category":"enum","!type":"Boolean"},"value":{"!description":"The value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.","!category":"enum","!type":"Object"},"multipleLines":{"!description":"If set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.","!category":"enum","!type":"Boolean"},"groupConditions":{"!description":"Defines the group conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!category":"enum","!type":"Object"},"label":{"!description":"Defines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.","!category":"enum","!type":"String"},"filterbar":"sap.ui.mdc.filterbar","_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"ChartToolbarActionType":"sap.ui.mdc.ChartToolbarActionType","enableAutoColumnWidth":{"!description":"Enables automatic column width calculation based on metadata information if set to <code>true<\/code>. The column width calculation takes the type, column label, referenced properties, and many other metadata parameters into account. Providing a more precise <code>maxLength<\/code> value for the <code>String<\/code> type or <code>precision<\/code> value for numeric types can help this algorithm to produce better results. The calculated column widths can have a minimum of 3rem and a maximum of 20rem.\n\n<b>Note:<\/b> To customize the automatic column width calculation, the <code>visualSettings.widthSettings<\/code> key of the <code>PropertyInfo<\/code> can be used. To avoid the heuristic column width calculation for a particular column, the <code>visualSettings.widthSettings<\/code> key of the <code>PropertyInfo<\/code> must be set to <code>null<\/code>. This feature has no effect if the <code>width<\/code> property of the column is bound or its value is set.","!category":"enum","!type":"Boolean"},"showEmptyIndicator":{"!description":"If set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.","!category":"enum","!type":"Boolean"},"ValueHelp":"sap.ui.mdc.ValueHelp_obj","additionalValue":{"!description":"The additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.","!category":"enum","!type":"Object"},"_p13nModeValue":{"!description":"Specifies if the personalization mode for filter conditions is supported.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.enum.ContentMode":{"!description":"Defines in which mode the content of a <code>Field<\/code>, <code>FilterField<\/code> or <code>MultiValueField<\/code> is rendered.","EditOperator":{"!description":"Edit mode for operator dependent controls This is used for single value and only one operator.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/ContentMode","DisplayMultiLine":{"!description":"Display mode for multiline single value","!category":"enum","!type":"String"},"EditMultiLine":{"!description":"Edit mode for multiple lines single value","!category":"enum","!type":"String"},"EditForHelp":{"!description":"Edit mode for single value field if a field help is assigned To support field help, in some cases a different control needs to be rendered.","!category":"enum","!type":"String"},"!category":"static class","DisplayMultiValue":{"!description":"Display mode for multiple values","!category":"enum","!type":"String"},"Edit":{"!description":"Edit mode for single value","!category":"enum","!type":"String"},"EditMultiValue":{"!description":"Edit mode for multiple values","!category":"enum","!type":"String"},"Display":{"!description":"Display mode for single value","!category":"enum","!type":"String"}},"sap.ui.mdc.condition.OperatorDynamicDateOption_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.OperatorDynamicDateOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DynamicDateOption.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.condition.OperatorDynamicDateOption"},"sap.ui.mdc.p13n.AdaptationProvider":{"!description":"Interface to implement basic adaptation functionality. Implementing this interface enables the usage of certain p13n modules such as the UIManager and the DefaultProviderRegistry.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.AdaptationProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.p13n.AdaptationProvider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!module":"sap/ui/mdc/p13n/AdaptationProvider","!helpDescription":"Interface to implement basic adaptation functionality. Implementing this interface enables the usage of certain p13n modules such as the UIManager and the DefaultProviderRegistry.","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.condition.FilterOperatorUtil":{"!category":"namespace","compareConditions":{"!description":"Compares two conditions.\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).","!static":"true","!category":"function","!type":"fn(oCondition1: sap.ui.mdc.condition.ConditionObject, oCondition2: sap.ui.mdc.condition.ConditionObject) -> Boolean"},"addOperators":{"!description":"Adds an array of operators to the list of known operators.","!static":"true","!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator])"},"checkConditionValidated":{"!description":"Checks if a condition is validated and sets the <code>validated<\/code> property.\n\nFor EQ set <code>validated<\/code> flag if a description is given.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)"},"updateConditionValues":{"!description":"Updates the value range to have the right number of entries for one condition.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)"},"getDynamicDateOptionForOperator":{"!description":"Determines the corresponding <code>DynamicDateOption<\/code> for an <code>Operator<\/code> from a map of known keys","!static":"true","!category":"function","!type":"fn(oOperator: sap.ui.mdc.condition.Operator, oDynamicDateRangeKeys: Object, sBaseType: sap.ui.mdc.enum.BaseType) -> String"},"removeOperators":{"!description":"Removes all given operators from the list of known operators.","!static":"true","!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator])"},"getOperator":{"!description":"Returns the operator object for the given operator name.","!static":"true","!category":"function","!type":"fn(sOperator: String) -> sap.ui.mdc.condition.Operator | undefined"},"updateConditionsValues":{"!description":"Updates the value range to have the correct number of entries for an array of conditions","!static":"true","!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject])"},"!description":"Utilities to handle {@link sap.ui.mdc.condition.Operator Operators} and {@link sap.ui.mdc.condition.ConditionObject conditions}.","getEQOperator":{"!description":"Returns the \"equal to\" (EQ) operator object.\n\nIf an array of operators is given, and an EQ-like operator exists there, this is returned. Otherwise the EQ operator is returned.\n\nThis is required for {@link sap.ui.mdc.Field Field}.","!static":"true","!category":"function","!type":"fn(aOperators?: [String]) -> sap.ui.mdc.condition.Operator"},"compareConditionsArray":{"!description":"Compares two arrays of conditions\n\nFor EQ conditions only the key part of the values is compared as the text part might be different (translation missing...)","!static":"true","!category":"function","!type":"fn(aConditions1: [sap.ui.mdc.condition.ConditionObject], aConditions2: [sap.ui.mdc.condition.ConditionObject]) -> Boolean"},"getCustomDynamicDateOptionForOperator":{"!description":"Determines the corresponding custom <code>DynamicDateOption<\/code> for an <code>Operator<\/code>","!static":"true","!category":"function","!type":"fn(oOperator: sap.ui.mdc.condition.Operator, sBaseType: sap.ui.mdc.enum.BaseType) -> String"},"getMatchingOperators":{"!description":"Returns the possible operators for the given value from the given array of operators.\n\n<b>Note<\/b> The value must be valid for the current type as this function only checks the operator against values. No type check is performed.","!static":"true","!category":"function","!type":"fn(aOperators: [String], sValue?: String) -> [sap.ui.mdc.condition.Operator]"},"removeOperator":{"!description":"Removes an operator from the list of known operators.","!static":"true","!category":"function","!type":"fn(vOperator: sap.ui.mdc.condition.Operator | String)"},"addOperatorForType":{"!description":"Adds an operator to the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType, vOperator: sap.ui.mdc.condition.Operator | String)"},"getDefaultOperator":{"!description":"Returns the default operator for the given basic type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType) -> sap.ui.mdc.condition.Operator"},"removeOperatorForType":{"!description":"Removes an operator from the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType, vOperator: sap.ui.mdc.condition.Operator | String)"},"getOperatorsForType":{"!description":"Returns all available default operators for the given type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType) -> [String]"},"addOperator":{"!description":"Adds an operator to the list of known operators.","!static":"true","!category":"function","!type":"fn(oOperator: sap.ui.mdc.condition.Operator)"},"checkConditionsEmpty":{"!description":"Checks if conditions are empty.\n\nModifies the <code>isEmpty<\/code> parameter of the conditions.","!static":"true","!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject])"},"onlyEQ":{"!description":"Checks if only EQ is supported. ({@link sap.ui.mdc.Field Field} case)","!static":"true","!category":"function","!type":"fn(aOperators: [String]) -> Boolean"},"insertOperatorForType":{"!description":"Inserts an operator into the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType, vOperator: sap.ui.mdc.condition.Operator | String, idx: Number)"},"!module":"sap/ui/mdc/condition/FilterOperatorUtil","setOperatorsForType":{"!description":"Adds operators to the list of valid operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType, aOperators: [sap.ui.mdc.condition.Operator], vDefaultOperator: sap.ui.mdc.condition.Operator | String)"},"!helpDescription":"Utilities to handle {@link sap.ui.mdc.condition.Operator Operators} and {@link sap.ui.mdc.condition.ConditionObject conditions}.","indexOfCondition":{"!description":"Returns the index of a condition in an array of conditions.\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).\n\n<b>Note:<\/b> If two or more identical conditions are in the array, the index is the first one is used.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, aConditions: [sap.ui.mdc.condition.ConditionObject]) -> Number"},"setDefaultOperatorForType":{"!description":"Sets the default operator for the list of operators for a type.","!static":"true","!category":"function","!type":"fn(sType: sap.ui.mdc.enum.BaseType, vDefaultOperator: sap.ui.mdc.condition.Operator | String)"},"getOperatorForDynamicDateOption":{"!description":"Returns the operator object for the given <code>DynamicDateOption<\/code> name.","!static":"true","!category":"function","!type":"fn(sOption: String, sBaseType?: sap.ui.mdc.enum.BaseType) -> sap.ui.mdc.condition.Operator | undefined"}},"sap.ui.mdc.condition.Operator":{"!description":"Creates an <code>sap.ui.mdc.condition.Operator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.Operator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"checkValidated":{"!description":"Checks if a condition is validated and sets the <code>validated<\/code> flag.\n\nFor EQ set <code>validated<\/code> flag if a description is given.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject)","parameters":{"oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check"}},"getModelFilter":{"!description":"Creates a filter object for a condition.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, sFieldPath: String, oType: sap.ui.model.Type, bCaseSensitive?: Boolean, sBaseType?: sap.ui.mdc.enum.BaseType) -> sap.ui.model.Filter","parameters":{"bCaseSensitive":"type: boolean, description: creates a caseSensitive filter","sBaseType":"type: sap.ui.mdc.enum.BaseType, description: Basic type","sFieldPath":"type: string, description: Path of filter","oType":"type: sap.ui.model.Type, description: Data type of the used filter field","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"getValues":{"!description":"Returns the real values without operator symbol.\n\nIn this function no type validation takes place.","!static":false,"!category":"function","!type":"fn(sText: String, sDisplayFormat: sap.ui.mdc.enum.FieldDisplay, bDefaultOperator: Boolean) -> [String]","parameters":{"sDisplayFormat":"type: sap.ui.mdc.enum.FieldDisplay, description: Display format","sText":"type: string, description: Text","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"test":{"!description":"Checks if a text is suitable for an operator.","!static":false,"!category":"function","!type":"fn(sText: String) -> Boolean","parameters":{"sText":"type: string, description: Text"}},"!proto":"sap.ui.base.Object","format":{"!description":"Formats a condition.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oType?: sap.ui.model.Type, sDisplay?: sap.ui.mdc.enum.FieldDisplay, bHideOperator?: Boolean, aCompositeTypes?: [sap.ui.model.Type]) -> String","parameters":{"aCompositeTypes":"type: sap.ui.model.Type[], description: additional Types used for parts of a <code>CompositeType<\/code>","bHideOperator":"type: boolean, description: If set, only the value output is returned without any visible operator","sDisplay":"type: sap.ui.mdc.enum.FieldDisplay, description: Display mode","oType":"type: sap.ui.model.Type, description: Data type","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"isEmpty":{"!description":"Checks if a condition is empty.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, oType: sap.ui.model.Type) -> Boolean","parameters":{"oType":"type: sap.ui.model.Type, description: Data type","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: Condition"}},"!category":"class","isSingleValue":{"!description":"Checks if an <code>Operator<\/code> contains only one value or not.\n\nFor example, an equal Operator has only one value, a between operator two.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"compareConditions":{"!description":"Compares two conditions\n\nFor EQ conditions, only the key part of the values is compared as the text part might be different (if the translation is missing, for example).","!static":false,"!category":"function","!type":"fn(oCondition1: sap.ui.mdc.condition.ConditionObject, oCondition2: sap.ui.mdc.condition.ConditionObject) -> Boolean","parameters":{"oCondition2":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check","oCondition1":"type: sap.ui.mdc.condition.ConditionObject, description: Condition to check"}},"parse":{"!description":"Parses a text.","!static":false,"!category":"function","!type":"fn(sText: String, oType: sap.ui.model.Type, sDisplayFormat: sap.ui.mdc.enum.FieldDisplay, bDefaultOperator: Boolean, aCompositeTypes?: [sap.ui.model.Type]) -> [Object]","parameters":{"aCompositeTypes":"type: sap.ui.model.Type[], description: additional Types used for parts of a <code>CompositeType<\/code>","sDisplayFormat":"type: sap.ui.mdc.enum.FieldDisplay, description: Display format","sText":"type: string, description: Text","oType":"type: sap.ui.model.Type, description: Data type","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"_formatValue":{"!description":"Formats a value using the data type.\n\nif a <code>CompositeType is used<\/code> and it needs internal values, the corresponding data types are used to provide these values.","!static":false,"!category":"function","!type":"fn(vValue: Object, oType?: sap.ui.model.Type, aCompositeTypes?: [sap.ui.model.Type]) -> String","parameters":{"aCompositeTypes":"type: sap.ui.model.Type[], description: additional Types used for parts of a <code>CompositeType<\/code>","oType":"type: sap.ui.model.Type, description: Data type","vValue":"type: any, description: value"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.Operator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getCondition":{"!description":"Creates a condition for a given text.","!static":false,"!category":"function","!type":"fn(sText: String, oType: sap.ui.model.Type, sDisplayFormat: sap.ui.mdc.enum.FieldDisplay, bDefaultOperator: Boolean, aCompositeTypes?: [sap.ui.model.Type]) -> sap.ui.mdc.condition.ConditionObject","parameters":{"aCompositeTypes":"type: sap.ui.model.Type[], description: additional Types used for parts of a <code>CompositeType<\/code>","sDisplayFormat":"type: sap.ui.mdc.enum.FieldDisplay, description: Display format","sText":"type: string, description: Text","oType":"type: sap.ui.model.Type, description: Data type","bDefaultOperator":"type: boolean, description: If true, operator is used as default. In this case parsing without operator also works"}},"!module":"sap/ui/mdc/condition/Operator","!helpDescription":"Creates an <code>sap.ui.mdc.condition.Operator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","getTypeText":{"!description":"Gets the text for an operator name.","!static":false,"!category":"function","!type":"fn(sKey: String, sType: String) -> String","parameters":{"sType":"type: string, description: Name of type","sKey":"type: string, description: Text key"}},"_createLocalType":{"!description":"Creates a local type.","!static":false,"!category":"function","!type":"fn(vType: String | Object, oType: sap.ui.model.Type) -> sap.ui.model.SimpleType","parameters":{"vType":"type: string|object, description: Type name or object with type information","oType":"type: sap.ui.model.Type, description: original data type"}},"_parseValue":{"!description":"Parses a text based on the data type.","!static":false,"!category":"function","!type":"fn(sValue: String, oType: sap.ui.model.Type, aCompositeTypes?: [sap.ui.model.Type]) -> String","parameters":{"aCompositeTypes":"type: sap.ui.model.Type[], description: additional Types used for parts of a <code>CompositeType<\/code>","sValue":"type: string, description: Text","oType":"type: sap.ui.model.Type, description: Data type"}},"validate":{"!description":"Validates a value.","!static":false,"!category":"function","!type":"fn(aValues: Object, oType: sap.ui.model.Type, aCompositeTypes?: [sap.ui.model.Type])","parameters":{"aValues":"type: any, description: Values","aCompositeTypes":"type: sap.ui.model.Type[], description: additional Types used for parts of a <code>CompositeType<\/code>","oType":"type: sap.ui.model.Type, description: Data type"}}},"sap.ui.mdc.field.BoolFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.BoolFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.BoolFieldHelp"},"sap.ui.mdc.RowAction":{"!description":"Defines the actions that can be used in the table.","Navigation":{"!description":"Navigation arrow (chevron) is shown in the table rows/items.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.condition.Operator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.Operator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oConfiguration: Object)","prototype":"sap.ui.mdc.condition.Operator"},"sap.ui.mdc.field.ListFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ListFieldHelp"},"sap.ui.mdc.valuehelp.Popover_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Popover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.Popover"},"sap.ui.mdc.p13n.subcontroller":{"BaseController":"sap.ui.mdc.p13n.subcontroller.BaseController_obj","!category":"namespace"},"sap.ui.mdc.mixin.PromiseMixin":{"!description":"Enhances a given control prototype with a management mechanism for lifecycle related promises. Calling any of the enhanced methods after control exit will result in a no-op.","!module":"sap/ui/mdc/mixin/PromiseMixin","!helpDescription":"Enhances a given control prototype with a management mechanism for lifecycle related promises. Calling any of the enhanced methods after control exit will result in a no-op.","!category":"namespace"},"sap.ui.mdc.valuehelp.Dialog":{"!description":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a dialog.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Dialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.Dialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>Dialog<\/code> container.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #get_selectedContentKey _selectedContentKey} : string<\/li>\n<li>{@link #get_quickSelectEnabled _quickSelectEnabled} : boolean (default: false)<\/li>\n<li>{@link #get_selectableContents _selectableContents} : object[] (default: [])<\/li>\n<li>{@link #getGroupConfig groupConfig} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.Container#constructor sap.ui.mdc.valuehelp.base.Container}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/Dialog","!helpDescription":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a dialog.","setGroupConfig":{"!description":"Sets a new value for property {@link #getGroupConfig groupConfig}.\n\nConfiguration for groups (collective search).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oGroupConfig?: Object) -> sap.ui.mdc.valuehelp.Dialog","parameters":{"oGroupConfig":"type: object, description: New value for property <code>groupConfig<\/code>"}},"!proto":"sap.ui.mdc.valuehelp.base.Container","getGroupConfig":{"!description":"Gets current value of property {@link #getGroupConfig groupConfig}.\n\nConfiguration for groups (collective search).\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.filterbar.aligned.FilterContainer_obj":{"!type":"fn(sId: String)","prototype":"sap.ui.mdc.filterbar.aligned.FilterContainer"},"sap.ui.mdc.field.DefineConditionPanel":{"!description":"A <code>DefineConditionPanel<\/code> control is used inside the <code>ValueHelpPanel<\/code> control to enter different types of conditions.","getInputOK":{"!description":"Gets current value of property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.DefineConditionPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nThe <code>label<\/code> for the <code>DefineConditionPanel<\/code> used as panel headerText.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setFormatOptions":{"!description":"Sets a new value for property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFormatOptions?: Object) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"oFormatOptions":"type: object, description: New value for property <code>formatOptions<\/code>"}},"setInputOK":{"!description":"Sets a new value for property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInputOK?: Boolean) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"bInputOK":"type: boolean, description: New value for property <code>inputOK<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"fireConditionProcessed":{"!description":"Fires event {@link #event:conditionProcessed conditionProcessed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DefineConditionPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>DefineConditionPanel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getFormatOptions formatOptions} : object (default: {})<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #getInputOK inputOK} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:conditionProcessed conditionProcessed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"!module":"sap/ui/mdc/field/DefineConditionPanel","!helpDescription":"A <code>DefineConditionPanel<\/code> control is used inside the <code>ValueHelpPanel<\/code> control to enter different types of conditions.","attachConditionProcessed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:conditionProcessed conditionProcessed} event of this <code>sap.ui.mdc.field.DefineConditionPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.DefineConditionPanel<\/code> itself.\n\nEvent is fired if the user processes a condition. (Not known if changed.)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.DefineConditionPanel<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nThe <code>label<\/code> for the <code>DefineConditionPanel<\/code> used as panel headerText.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"detachConditionProcessed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:conditionProcessed conditionProcessed} event of this <code>sap.ui.mdc.field.DefineConditionPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.DefineConditionPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getFormatOptions":{"!description":"Gets current value of property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.chart.ChartSelectionDetails":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.ChartSelectionDetails with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectionDetails.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"init":{"!description":"Initialises the MDC Chart Selection Details","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chart.ChartSelectionDetails.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"/**\nConstructor for a new ChartSelectionDetails.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.m.SelectionDetails#constructor sap.m.SelectionDetails} can be used.","!module":"sap/ui/mdc/chart/ChartSelectionDetails","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.m.SelectionDetails","!category":"class"},"sap.ui.mdc.p13n.modules":{"DefaultProviderRegistry":"sap.ui.mdc.p13n.modules.DefaultProviderRegistry_obj","!category":"namespace"},"sap.ui.mdc.valuehelp.content.FixedList":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a list with fix values.","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.field.ListFieldHelpItem) -> sap.ui.mdc.field.ListFieldHelpItem | null","parameters":{"vItem":"type: int|string|sap.ui.mdc.field.ListFieldHelpItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.FixedList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFilterList":{"!description":"Gets current value of property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.mdc.valuehelp.base.ListContent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.FixedList"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.ListFieldHelpItem]"},"getGroupable":{"!description":"Gets current value of property {@link #getGroupable groupable}.\n\nIf set, the items of the list can be grouped\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.FixedList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.ListFieldHelpItem) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"oItem":"type: sap.ui.mdc.field.ListFieldHelpItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems of the field help.\n\nThe <code>key<\/code> of the items is not shown in the list, but is used as a value of the connected field.\n\nIf the <code>additionalText<\/code> for all the items is not used, the column will not be displayed.\n\n<b>Note:<\/b> At the moment, icons are not supported.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.ListFieldHelpItem]"},"!constructorDescription":"Constructor for a new <code>FixedList<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupable groupable} : boolean (default: false)<\/li>\n<li>{@link #getFilterList filterList} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.mdc.field.ListFieldHelpItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.ListContent#constructor sap.ui.mdc.valuehelp.base.ListContent}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/FixedList","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.field.ListFieldHelpItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.ListFieldHelpItem) -> Number","parameters":{"oItem":"type: sap.ui.mdc.field.ListFieldHelpItem, description: The item whose index is looked for"}},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a list with fix values.","setGroupable":{"!description":"Sets a new value for property {@link #getGroupable groupable}.\n\nIf set, the items of the list can be grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bGroupable?: Boolean) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"bGroupable":"type: boolean, description: New value for property <code>groupable<\/code>"}},"setFilterList":{"!description":"Sets a new value for property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterList?: Boolean) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"bFilterList":"type: boolean, description: New value for property <code>filterList<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.ListFieldHelpItem, iIndex: Number) -> sap.ui.mdc.valuehelp.content.FixedList","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.field.ListFieldHelpItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.FilterBarP13nMode":{"!description":"Defines the personalization mode of the filter bar.","Item":{"!description":"FilterItem personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Value":{"!description":"Condition personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.field.FieldHelpBase":{"getKeyForText":{"!description":"Determines the key for a given description.\n\nAs the description might change (uppercase), an object with key and description can be returned.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> As this must not be unique, the result key may be just one for one of the matching texts.","!static":false,"!category":"function","!type":"fn(sText: String, oBindingContext: sap.ui.model.Context, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> Object | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. (Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.)","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","sText":"type: string, description: Description","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>"}},"_setContent":{"!description":"Sets the content of the <code>FieldHelp<\/code> element.\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn(oContent: String) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oContent":"type: string, description: Content control to be placed at the <code>Popover<\/code>"}},"openByClick":{"!description":"Determines if the field help should be opened when the user clicks into the connected field.\n\nOpening the field help must be triggered by the control the <code>FieldHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterClose afterClose} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired after the field help has been closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when a value is selected in the field help.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_getControlForSuggestion":{"!description":"Returns the control for which the suggestion is opened.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"fireSwitchToValueHelp":{"!description":"Fires event {@link #event:switchToValueHelp switchToValueHelp} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterClose afterClose} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"toggleOpen":{"!description":"Toggles the open state of the field help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag that determines whether field help is opened for suggestion or for complex help"}},"openByTyping":{"!description":"Determines if the field help should be opened when something is typed into the field.\n\nOpening the field help must be triggered by the control the <code>FieldHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Boolean | Promise"},"fireDisconnect":{"!description":"Fires event {@link #event:disconnect disconnect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getContentId":{"!description":"Returns the ID of the content that displays the values (list or table).\n\nThis is used to enrich the field with the corresponding ARIA attributes.","!static":false,"!category":"function","!type":"fn() -> String"},"_handleAfterOpen":{"!description":"Executed after the <code>Popover<\/code> control has been opened.\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: Event object"}},"onFieldChange":{"!description":"Triggers some logic that must be executed in <code>FieldHelp<\/code> element if a <code>Change<\/code> event on the connected field is fired.\n\nThis is done if the corresponding field value is changed (not during navigation).\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"!description":"Base type for the <code>FieldHelp<\/code> association in the <code>FieldBase<\/code> controls.","navigate":{"!description":"Triggers navigation in the field help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"attachDisconnect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when the <code>FieldHelp<\/code> element is disconnected from a control.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldHelpBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"_getPopover":{"!description":"Returns the internal <code>Popover<\/code> control. If the <code>Popover<\/code> control doesn't exist, it will be created.\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"skipOpening":{"!description":"Skips the opening of the field help if it is pending because of loading content.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"_getTextOrKey":{"!description":"Determines the description for a given key or the key for a given description.\n\nAs the key might also change (uppercase), an object with key and description can be returned.\n\nWhen using <code>getKeyForText<\/code>, <code>oInParamer<\/code> and <\/code>oOutParameter<\/code> are not supported.","!static":false,"!category":"function","!type":"fn(vValue: Object, bKey: Boolean, oBindingContext: sap.ui.model.Context, oInParameters: Object, oOutParameters: Object, bNoRequest: Boolean, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String, vParsedValue: Object, bKeyAndDescription: Boolean, bCaseSensitive: Boolean) -> String | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"bKey":"type: boolean, description: If <code>true<\/code> <code>vValue<\/code> is handled as key, otherwise as description","oBindingContext":"type: sap.ui.model.Context, description: BindingContext of the checked field. (Inside a table FieldHelp might be connected to a different row.)","bCaseSensitive":"type: boolean, description: If <code>true<\/code>, the filtering is case-sensitive","oInParameters":"type: object, description: In parameters for the key (as a key must not be unique.)","vParsedValue":"type: any, description: Parsed value to be used as key","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","oOutParameters":"type: object, description: Out parameters for the key (as a key must not be unique.)","bNoRequest":"type: boolean, description: If <code>true<\/code> the check must be only done on existing content (table items). Otherwise a backend request could be triggered if needed","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","bKeyAndDescription":"type: boolean, description: If <code>true<\/code>, key and description are determined with one call","vValue":"type: any, description: Key or description"}},"removeFocus":{"!description":"The focus visualization of the field help needs to be removed as the user starts typing into the field.","!static":false,"!category":"function","!type":"fn()"},"_getOperator":{"!description":"Returns the currently used operator for chosen values.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.condition.Operator"},"_callContentRequest":{"!description":"Calls the <code>contentRequest<\/code> function of the delegate.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean, fnCallback: fn()) -> Boolean","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened for a suggestion or for ValueHelp","fnCallback":"type: function, description: Callback function executed after asynchronous execution"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldHelpBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValueHelpEnabled":{"!description":"Checks if a \"valueHelp enabled\" text should be rendered for screenreader.\n\nIf a complex value help exists on a field a corresponding text needs to be read out by screen readers. For simple \"combobox\" cases this is not needed. So this depends on the specific value help.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachDataUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when the data of the <code>FieldHelp<\/code> element has been changed.\n\nThis might be needed to trigger an update for formatting a key with it's description.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"isOpen":{"!description":"Determines if the field help is open.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bCheckClosing: Boolean) -> Boolean","parameters":{"bCheckClosing":"type: boolean, description: If set a closing field help is handled as closed"}},"!module":"sap/ui/mdc/field/FieldHelpBase","detachDisconnect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe field help checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(vValue: Object, vParsedValue: Object, oInParameters: Object, oOutParameters: Object, oBindingContext: sap.ui.model.Context, bCheckKeyFirst: Boolean, bCheckKey: Boolean, bCheckDescription: Boolean, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.","bCheckDescription":"type: boolean, description: If set, the field help checks only if there is an item with the given description. This is set to <code>false<\/code> if only the key is used in the field.","vParsedValue":"type: any, description: Value parsed by type to fit the data type of the key","oInParameters":"type: object, description: In parameters for the key (as a key must not be unique.)","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","bCheckKeyFirst":"type: boolean, description: If set, the field help checks first if the value fits a key","oOutParameters":"type: object, description: Out parameters for the key (as a key must not be unique.)","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","vValue":"type: any, description: Value as entered by user","bCheckKey":"type: boolean, description: If set, the field help checks only if there is an item with the given key. This is set to <code>false<\/code> if the value cannot be a valid key because of type validation."}},"!helpDescription":"Base type for the <code>FieldHelp<\/code> association in the <code>FieldBase<\/code> controls.","_createCondition":{"!description":"Creates a condition based on the used operator.","!static":false,"!category":"function","!type":"fn(sKey: String, sDescription: String, oInParameters: Object, oOutParameters: Object) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDescription":"type: string, description: Description of the operator","oInParameters":"type: object, description: In parameters of the condition","sKey":"type: string, description: Operator for the condition","oOutParameters":"type: object, description: Out parameters of the condition"}},"_fireOpen":{"!description":"Fires the <code>open<\/code> event and calls <code>contentRequest<\/code> function of the delegate.\n\nIf the delegate returns a promise, the callback function is called (for example, to open the field help) after the Promise has been resolved.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean, fnCallback: fn()) -> Boolean","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened for a suggestion or for ValueHelp","fnCallback":"type: function, description: Callback function executed after asynchronous execution"}},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when a value help entry is navigated using arrow keys.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isUsableForValidation":{"!description":"Defines if the field help is used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSwitchToValueHelp":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:switchToValueHelp switchToValueHelp} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"_createPopover":{"!description":"Creates the internal <code>Popover<\/code> control.\n\nTo be used by an inherited FieldHelp, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"_isTextOrKeyRequestSupported":{"!description":"Defines if the field help supports backend requests to determine key or description","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:open open} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getValidateInput":{"!description":"Gets current value of property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input is validated against the field help. If no entry is found for the user input, an error occurs.\n\nIf this property is not set, the user input is still checked against the field help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFilterValue":{"!description":"Sets a new value for property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>FieldHelp<\/code> element supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterValue?: String) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"sFilterValue":"type: string, description: New value for property <code>filterValue<\/code>"}},"getAriaHasPopup":{"!description":"Returns the value for aria attribute <code>haspopup<\/code>\n\nThe screenreader needs to know what content the popup has.","!static":false,"!category":"function","!type":"fn() -> String | null"},"fireOpen":{"!description":"Fires event {@link #event:open open} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:open open} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired when the field help is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.mdc.Element","!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"isValidationSupported":{"!description":"Defines if the field help supports input validation to determine key or description","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getRoleDescription":{"!description":"Returns the description of the ARIA role added to the assigned field.\n\nNormally the role is set to <code>combobox<\/code>. This works for most cases, so per default no description is needed. But in some cases, such as the multi-select mode, an additional description is needed.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> String | null","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as FieldHelp might not be connected to a field)"}},"_getContenRequestProperties":{"!description":"Gets the field help specific properties for <code>contentRequest<\/code> function of the delegate.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean) -> null | Object","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened for a suggestion or for ValueHelp"}},"!constructorDescription":"Constructor for a new <code>FieldHelpBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getFilterValue filterValue} : string (default: \"\") (default)<\/li>\n<li>{@link #getValidateInput validateInput} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataUpdate dataUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:disconnect disconnect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:open open} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:switchToValueHelp switchToValueHelp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Element#constructor sap.ui.mdc.Element}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"close":{"!description":"closes the field help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"getFieldPath":{"!description":"Returns the currently used FieldPath.\n\nThis is taken from the connected field.","!static":false,"!category":"function","!type":"fn() -> String"},"connect":{"!description":"Connects the <code>FieldHelp<\/code> element to a control.\n\nIf the <code>FieldHelp<\/code> element is used as an association to multiple controls, it has to know the currently active control to open and interact.\n\nIf the <code>FieldHelp<\/code> element is connected to a control, the <code>disconnected<\/code> event is fired to inform the previously connected control.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oField: sap.ui.core.Control) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oField":"type: sap.ui.core.Control, description: Control to which the <code>FieldHelp<\/code> element is connected to"}},"detachDataUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getFilterValue":{"!description":"Gets current value of property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>FieldHelp<\/code> element supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"initBeforeOpen":{"!description":"Calls initialization of the FieldHelp before the FieldHelp is really opened. This is called in Typeahead on first letter before the FieldHelp is opened with a delay. So the content can be determined in the delegate coding early.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag that determines whether field help is opened for suggestion or for complex help"}},"fireDataUpdate":{"!description":"Fires event {@link #event:dataUpdate dataUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setValidateInput":{"!description":"Sets a new value for property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input is validated against the field help. If no entry is found for the user input, an error occurs.\n\nIf this property is not set, the user input is still checked against the field help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValidateInput?: Boolean) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"bValidateInput":"type: boolean, description: New value for property <code>validateInput<\/code>"}},"_handleAfterClose":{"!description":"Executed after the <code>Popover<\/code> control has been closed,\n\nTo be used by an inherited <code>FieldHelp<\/code> element, not from outside.","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: Event object"}},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getIcon":{"!description":"Determines the icon for the value help.","!static":false,"!category":"function","!type":"fn() -> String"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"attachSwitchToValueHelp":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:switchToValueHelp switchToValueHelp} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself.\n\nThis event is fired if suggestion should be closed and value help should be opened.\n\nThe opening must be handled by the field as focus and accessibility handling is needed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldHelpBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_getField":{"!description":"Returns the currently active control to which the <code>FieldHelp<\/code> element is assigned.\n\nThis is the control set by the <code>connect<\/code> function or the parent.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getTextForKey":{"!description":"Determines the description for a given key.\n\nAs the key might change (uppercase), an object with key and description can be returned.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(vKey: Object, oInParameters: Object, oOutParameters: Object, oBindingContext: sap.ui.model.Context, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String) -> String | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"oBindingContext":"type: sap.ui.model.Context, description: <code>BindingContext<\/code> of the checked field. (Inside a table the <code>FieldHelp<\/code> element might be connected to a different row.)","oInParameters":"type: object, description: In parameters for the key (as a key must not be unique.)","sConditionModelName":"type: string, description: Name of the <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","oOutParameters":"type: object, description: Out parameters for the key (as a key must not be unique.)","oConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: <code>ConditionModel<\/code>, in case of <code>FilterField<\/code>","vKey":"type: any, description: Key"}},"fireAfterClose":{"!description":"Fires event {@link #event:afterClose afterClose} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldHelpBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldHelpBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"open":{"!description":"Opens the field help for the <code>Field<\/code> control to which the <code>FieldHelp<\/code> element is connected.\n\n<b>Note:<\/b> This function must only be called by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag that determines whether field help is opened for suggestion or for complex help"}}},"sap.ui.mdc.field.InParameter":{"!description":"The <code>InParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.InParameter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getDataType":{"!description":"Returns the used data type.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.Type"},"!proto":"sap.ui.core.Element","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.InParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value of the in parameter.\n\nHere the data of the model can be bound. In the {@link sap.ui.mdc.FilterField FilterField} case this is the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.\n\n<b>Note:<\/b> Here we recommend one-way-binding.","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"Constructor for a new <code>InParameter<\/code>.\n\nThe {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element supports in parameters. The binding to the data is defined in this element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any (default)<\/li>\n<li>{@link #getHelpPath helpPath} : string<\/li>\n<li>{@link #getInitialValueFilterEmpty initialValueFilterEmpty} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/field/InParameter","!helpDescription":"The <code>InParameter<\/code> element is used in the {@link sap.ui.mdc.field.FieldValueHelp FieldValueHelp} element.","setHelpPath":{"!description":"Sets a new value for property {@link #getHelpPath helpPath}.\n\nName of the field in the <code>ListBinding<\/code> used in the value help.\n\nThis is needed to define the filter for the corresponding field in the help.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHelpPath: String) -> sap.ui.mdc.field.InParameter","parameters":{"sHelpPath":"type: string, description: New value for property <code>helpPath<\/code>"}},"getUseConditions":{"!description":"Returns an indicator if conditions are used as values.\n\nIf the <code>value<\/code> property is bound to a {@link sap.ui.mdc.condition.ConditionModel ConditionModel} model it must handle conditions. Only in this case multiple values are supported. Otherwise the value is just updated.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value of the in parameter.\n\nHere the data of the model can be bound. In the {@link sap.ui.mdc.FilterField FilterField} case this is the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.\n\n<b>Note:<\/b> Here we recommend one-way-binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValue?: Object) -> sap.ui.mdc.field.InParameter","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"}},"getHelpPath":{"!description":"Gets current value of property {@link #getHelpPath helpPath}.\n\nName of the field in the <code>ListBinding<\/code> used in the value help.\n\nThis is needed to define the filter for the corresponding field in the help.","!static":false,"!category":"function","!type":"fn() -> String"},"setInitialValueFilterEmpty":{"!description":"Sets a new value for property {@link #getInitialValueFilterEmpty initialValueFilterEmpty}.\n\nIf set, an initial value of <code>InParameter<\/code> starts a filtering for the <code>empty<\/code> operator.\n\n<b>Note:<\/b> This property must not be used for {@link sap.ui.mdc.FilterField FilterField} and if bound to {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. In this case, a filtering for the empty operator must be defined by the assigned conditions.\n\n<b>Note:<\/b> This property must only be set if the data type used supports a filtering for the empty operator.\n\n<b>Note:<\/b> Do not set this property if an empty string is a valid key for the <code>InParameter<\/code> used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInitialValueFilterEmpty?: Boolean) -> sap.ui.mdc.field.InParameter","parameters":{"bInitialValueFilterEmpty":"type: boolean, description: New value for property <code>initialValueFilterEmpty<\/code>"}},"getFieldPath":{"!description":"Returns the path of the <code>InParameter<\/code> element.\n\nIf the <code>value<\/code> property is bound to a model, the binding path is used. If no binding path is found, the value of the <code>helpPath<\/code> property is used.","!static":false,"!category":"function","!type":"fn() -> String"},"getInitialValueFilterEmpty":{"!description":"Gets current value of property {@link #getInitialValueFilterEmpty initialValueFilterEmpty}.\n\nIf set, an initial value of <code>InParameter<\/code> starts a filtering for the <code>empty<\/code> operator.\n\n<b>Note:<\/b> This property must not be used for {@link sap.ui.mdc.FilterField FilterField} and if bound to {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. In this case, a filtering for the empty operator must be defined by the assigned conditions.\n\n<b>Note:<\/b> This property must only be set if the data type used supports a filtering for the empty operator.\n\n<b>Note:<\/b> Do not set this property if an empty string is a valid key for the <code>InParameter<\/code> used.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.field.FieldInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldInput"},"sap.ui.mdc.p13n.modules.DefaultProviderRegistry_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.modules.DefaultProviderRegistry with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.p13n.modules.DefaultProviderRegistry"},"sap.ui.mdc.valuehelp.IDialogContainer":{"!description":"Interface for valuehelp containers","!module":"sap/ui/mdc/library","!category":"static class"},"module:sap/ui/mdc/odata/v4/FieldBaseDelegate":{"!description":"Delegate for {@link sap.ui.mdc.field.FieldBase FieldBase}.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/odata/v4/FieldBaseDelegate","!helpDescription":"Delegate for {@link sap.ui.mdc.field.FieldBase FieldBase}.<br> <h3><b>Note:<\/b><\/h3> The class is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!category":"namespace","module:sap/ui/mdc/odata/v4/FieldBaseDelegate":"module:sap/ui/mdc/odata/v4/FieldBaseDelegate"},"sap.ui.mdc.condition.ConditionConverter":{"!description":"Utilities for condition conversion","toType":{"!description":"converts a stringified condition into a type based condition\n\nThe condition is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, vType: sap.ui.model.SimpleType | sap.ui.mdc.TypeConfig, oTypeUtil: sap.ui.mdc.util.TypeUtil) -> sap.ui.mdc.condition.ConditionObject"},"!module":"sap/ui/mdc/condition/ConditionConverter","!helpDescription":"Utilities for condition conversion","!category":"namespace","toString":{"!description":"Converts a condition into a unified String\n\nThe condition is not checked for validity. The used values must fit to the used basic type.\n\n<b>Note:<\/b> Number types are not converted, the number conversion is done by the Flex handling.","!static":"true","!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, vType: sap.ui.model.SimpleType | sap.ui.mdc.TypeConfig, oTypeUtil: sap.ui.mdc.util.TypeUtil) -> sap.ui.mdc.condition.ConditionObject"}},"sap.ui.mdc.condition.ConditionModelPropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModelPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONPropertyBinding.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oModel: sap.ui.mdc.condition.ConditionModel, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.mdc.condition.ConditionModelPropertyBinding"},"sap.ui.mdc.odata":{"!category":"namespace","v4":"sap.ui.mdc.odata.v4"},"sap.ui.mdc.field.CustomFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.CustomFieldHelp"},"sap.ui.mdc.field.TokenDisplay":{"!description":"The <code>TokenDisplay<\/code> control is used to render a field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Token.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.TokenDisplay.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TokenDisplay<\/code>.\n\nThe <code>TokenDisplay<\/code> control enhances the {@link sap.m.Token Token} control to add ARIA attributes\nand other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #get_delimiter _delimiter} : string (default: \"·\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Token#constructor sap.m.Token}\ncan be used as well.","!module":"sap/ui/mdc/field/TokenDisplay","!helpDescription":"The <code>TokenDisplay<\/code> control is used to render a field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","!proto":"sap.m.Token","!category":"class"},"sap.ui.mdc.Field_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Field"},"sap.ui.mdc.Field":{"!description":"The <code>Field<\/code> control is used to bind its value to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>Field<\/code>. For example, if a date type is used, a {@link sap.m.DatePicker DatePicker} is rendered.","setAdditionalValue":{"!description":"Sets a new value for property {@link #getAdditionalValue additionalValue}.\n\nThe additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAdditionalValue?: Object) -> sap.ui.mdc.Field","parameters":{"oAdditionalValue":"type: any, description: New value for property <code>additionalValue<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Field.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMaxConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, this property is not supported for the <code>Field<\/code>.<br>This property must not be set for the <code>Field<\/code>","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> sap.ui.mdc.Field","parameters":{"iMaxConditions":"type: int, description: Only 1 condition allowed in <code>Field<\/code>"}},"getAdditionalValue":{"!description":"Gets current value of property {@link #getAdditionalValue additionalValue}.\n\nThe additional value of the field.\n\nTo display the key and the description in one field, the description must be set on the <code>additionalValue<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Object"},"getDataType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the type in the binding to the <code>value<\/code> property is used.<br>Gets a new value for property <code>dataType<\/code>.\n\nThe type of data handled by the field. The type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the value of the <code>dataType<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn(sDataType: String) -> sap.ui.mdc.Field","parameters":{"sDataType":"type: string, description: DataType to be set"}},"setDataTypeFormatOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the <code>FormatOptions<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Sets a new value for property <code>dataTypeFormatOptions<\/code>.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeFormatOptions<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions: String) -> sap.ui.mdc.Field","parameters":{"oDataTypeFormatOptions":"type: string, description: Format options to be set"}},"!proto":"sap.ui.mdc.field.FieldBase","!category":"class","getConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, use the <code>value<\/code> property and <code>additionalValue<\/code> property to bind the control.<br>Gets conditions of the property <code>conditions<\/code>.\n\nDo not use the <code>conditions<\/code> property, use the <code>value<\/code> and <code>additionalValue<\/code> properties instead.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.Field<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Field<\/code> itself.\n\nThis event is fired when the <code>value<\/code> property of the field is changed by user interaction.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Field","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Field<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Field","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.Field<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Field","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Field with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"Constructor for a new <code>Field<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : any (default)<\/li>\n<li>{@link #getAdditionalValue additionalValue} : any<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","setConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, use the <code>value<\/code> property and <code>additionalValue<\/code> property to bind the control.<br>Sets conditions to the property <code>conditions<\/code>.\n\nDo not use the <code>conditions<\/code> property, use the <code>value<\/code> and <code>additionalValue<\/code> properties instead.","!static":false,"!category":"function","!type":"fn(aConditions: [Object]) -> sap.ui.mdc.Field","parameters":{"aConditions":"type: object[], description: Conditions to be set"}},"setDataType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the type in the binding to the <code>value<\/code> property is used.<br>Sets a new value for property <code>dataType<\/code>.\n\nThe type of data handled by the field. The type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the value of the <code>dataType<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn(sDataType: String) -> sap.ui.mdc.Field","parameters":{"sDataType":"type: string, description: DataType to be set"}},"!module":"sap/ui/mdc/Field","!helpDescription":"The <code>Field<\/code> control is used to bind its value to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>Field<\/code>. For example, if a date type is used, a {@link sap.m.DatePicker DatePicker} is rendered.","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value of the field.\n\nTo display the key and the description in one field, the key must be set on the <code>value<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValue?: Object) -> sap.ui.mdc.Field","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"}},"setDataTypeConstraints":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the <code>Constraints<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Sets a new value for property <code>dataTypeConstraints<\/code>.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeConstraints<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints: String) -> sap.ui.mdc.Field","parameters":{"oDataTypeConstraints":"type: string, description: Constraints to be set"}},"getDataTypeFormatOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the <code>FormatOptions<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Gets a new value for property <code>dataTypeFormatOptions<\/code>.\n\nThe format options of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeFormatOptions<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions: String) -> sap.ui.mdc.Field","parameters":{"oDataTypeFormatOptions":"type: string, description: Format options to be set"}},"getDataTypeConstraints":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the <code>Constraints<\/code> of the type in the binding to the <code>value<\/code> property is used.<br>Gets a new value for property <code>dataTypeConstraints<\/code>.\n\nThe constraints of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>value<\/code> property is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeConstraints<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints: String) -> sap.ui.mdc.Field","parameters":{"oDataTypeConstraints":"type: string, description: Constraints to be set"}}},"sap.ui.mdc.field.FieldValueHelpContentWrapperBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpContentWrapperBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"sap.ui.mdc.p13n.modification.ModificationHandler_obj":{"!type":"fn()","prototype":"sap.ui.mdc.p13n.modification.ModificationHandler"},"sap.ui.mdc.field.FieldValueHelpUITableWrapper":{"!description":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpUITableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpUITableWrapper.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpUITableWrapper<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. This is a wrapper to use a\n<code>sap.ui.table.Table<\/code> control as content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.ui.table.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase#constructor sap.ui.mdc.field.FieldValueHelpTableWrapperBase}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldValueHelpUITableWrapper","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpUITableWrapper"},"!helpDescription":"Wrapper to use a <code>sap.m.Table<\/code> control as content of a <code>FieldValueHelp<\/code> element","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.table.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.ui.table.Table) -> sap.ui.mdc.field.FieldValueHelpUITableWrapper","parameters":{"oTable":"type: sap.ui.table.Table, description: The table to set"}},"!proto":"sap.ui.mdc.field.FieldValueHelpTableWrapperBase","!category":"class"},"sap.ui.mdc.condition.OperatorDynamicDateOption":{"!description":"Maps an {@link sap.ui.mdc.condition.Operator Operator} to a {@link sap.m.DynamicDateOption DynamicDateOption}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.OperatorDynamicDateOption.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.DynamicDateOption","!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nData type of the corresponding filter field.\n\n<b>Note:<\/b> A type must be an instance of {@link sap.ui.model.Type Type}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oType: Object) -> sap.ui.mdc.condition.OperatorDynamicDateOption","parameters":{"oType":"type: object, description: New value for property <code>type<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.OperatorDynamicDateOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DynamicDateOption.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new OperatorDynamicDateOption.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperator operator} : object<\/li>\n<li>{@link #getType type} : object<\/li>\n<li>{@link #getBaseType baseType} : sap.ui.mdc.enum.BaseType<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DynamicDateOption#constructor sap.m.DynamicDateOption}\ncan be used as well.","!module":"sap/ui/mdc/condition/OperatorDynamicDateOption","!helpDescription":"Maps an {@link sap.ui.mdc.condition.Operator Operator} to a {@link sap.m.DynamicDateOption DynamicDateOption}.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nData type of the corresponding filter field.\n\n<b>Note:<\/b> A type must be an instance of {@link sap.ui.model.Type Type}.","!static":false,"!category":"function","!type":"fn() -> Object"},"setOperator":{"!description":"Sets a new value for property {@link #getOperator operator}.\n\nOperator used in the corresponding filter field.\n\n<b>Note:<\/b> An operator must be an instance of {@link sap.ui.mdc.condition.Operator Operator}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oOperator: Object) -> sap.ui.mdc.condition.OperatorDynamicDateOption","parameters":{"oOperator":"type: object, description: New value for property <code>operator<\/code>"}},"setBaseType":{"!description":"Sets a new value for property {@link #getBaseType baseType}.\n\nBasic type of the corresponding filter field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBaseType: sap.ui.mdc.enum.BaseType) -> sap.ui.mdc.condition.OperatorDynamicDateOption","parameters":{"sBaseType":"type: sap.ui.mdc.enum.BaseType, description: New value for property <code>baseType<\/code>"}},"getOperator":{"!description":"Gets current value of property {@link #getOperator operator}.\n\nOperator used in the corresponding filter field.\n\n<b>Note:<\/b> An operator must be an instance of {@link sap.ui.mdc.condition.Operator Operator}.","!static":false,"!category":"function","!type":"fn() -> Object"},"getBaseType":{"!description":"Gets current value of property {@link #getBaseType baseType}.\n\nBasic type of the corresponding filter field.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.enum.BaseType"}},"sap.ui.mdc.ValueHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.ValueHelp"},"sap.ui.mdc.enum.BaseType":{"!description":"Enumeration of the possible basic data types\n\nIn <code>Field<\/code> and <code>FilterField<\/code> different data types can be used. This data types might be model dependent. To handle them model independent internally basic types are used.","Numeric":{"!description":"Data type represents a number. (This can be integer, float or any other numeric type.)","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/BaseType","!category":"static class","Time":{"!description":"Data type represents a time","!category":"enum","!type":"String"},"String":{"!description":"Data type represents a string","!category":"enum","!type":"String"},"Boolean":{"!description":"Data type represents a boolean","!category":"enum","!type":"String"},"Unit":{"!description":"Data type represents a unit. This means a composite type with a number and a unit part is used.","!category":"enum","!type":"String"},"Date":{"!description":"Data type represents a date","!category":"enum","!type":"String"},"DateTime":{"!description":"Data type represents a date with time","!category":"enum","!type":"String"}},"sap.ui.mdc.mixin.FilterIntegrationMixin":{"!description":"Enhances a given control prototype with consolidated handling for external IFilter integration\n\nThe following methods are available:\n\n<ul> <li><code>setFilter<\/code> - The setter for the <code>filter<\/code> association<\/li> <li><code>_validateFilter<\/code> - Validates the provided <code>IFilter<\/code> control instance and may return an error<\/li> <li><code>rebind<\/code> - Executes a the <code>rebind<\/code> method for the given control instance.<\/li> <\/ul>\n\nTo use the FilterIntegrationMixin, the implementing Control requires the <code>filter<\/code> associaton.\n\nAdditionally, the following methods are necessary to be implemented:\n\n<ul> <li><code>_rebind<\/code><\/li> <li><code>isFilteringEnabled<\/code><\/li> <\/ul>\n\nHooks that are called by the FilterIntegrationMixin if implemented in the control.\n\n<ul> <li><code>_onFilterProvided(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that a valid <code>filter<\/code> association has been provided. The provided filter instance is passed.<\/li> <li><code>_onFilterRemoved(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that the <code>filter<\/code> association has been removed. The removed filter instance is passed.<\/li> <li><code>_onFiltersChanged(oEvent)<\/code> - Called when the <code>search<\/code> event of the filter is fired. The event object is passed.<\/li> <li><code>_onFilterSearch(oEvent)<\/code> - Called when the <code>filtersChanged<\/code> event of the filter is fired. The event object is passed.<\/li> <\/ul>","!module":"sap/ui/mdc/mixin/FilterIntegrationMixin","!helpDescription":"Enhances a given control prototype with consolidated handling for external IFilter integration\n\nThe following methods are available:\n\n<ul> <li><code>setFilter<\/code> - The setter for the <code>filter<\/code> association<\/li> <li><code>_validateFilter<\/code> - Validates the provided <code>IFilter<\/code> control instance and may return an error<\/li> <li><code>rebind<\/code> - Executes a the <code>rebind<\/code> method for the given control instance.<\/li> <\/ul>\n\nTo use the FilterIntegrationMixin, the implementing Control requires the <code>filter<\/code> associaton.\n\nAdditionally, the following methods are necessary to be implemented:\n\n<ul> <li><code>_rebind<\/code><\/li> <li><code>isFilteringEnabled<\/code><\/li> <\/ul>\n\nHooks that are called by the FilterIntegrationMixin if implemented in the control.\n\n<ul> <li><code>_onFilterProvided(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that a valid <code>filter<\/code> association has been provided. The provided filter instance is passed.<\/li> <li><code>_onFilterRemoved(oFilter: sap.ui.mdc.IFilter)<\/code> - Notifies the control that the <code>filter<\/code> association has been removed. The removed filter instance is passed.<\/li> <li><code>_onFiltersChanged(oEvent)<\/code> - Called when the <code>search<\/code> event of the filter is fired. The event object is passed.<\/li> <li><code>_onFilterSearch(oEvent)<\/code> - Called when the <code>filtersChanged<\/code> event of the filter is fired. The event object is passed.<\/li> <\/ul>","rebind":{"!description":"Executes a rebind considering the provided external and inbuilt filtering.","!static":"true","!category":"function","!type":"fn()"},"!category":"namespace"},"sap.ui.mdc.p13n.Engine":{"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.p13n.Engine.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getModificationHandler":{"!description":"This method can be used to get the modification handling for a control instance","!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control) -> Object","parameters":{"vControl":"type: sap.ui.mdc.Control, description: undefined"}},"!proto":"sap.ui.mdc.p13n.AdaptationProvider","enhanceXConfig":{"!description":"Enhances the xConfig object by using the <code>ModificationHandler<\/code>","!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control, mEnhanceConfig: Object) -> Promise","parameters":{"mEnhanceConfig":"type: object, description: An object providing the information about the xConfig enhancement","vControl":"type: sap.ui.mdc.Control, description: The registered control instance."}},"!category":"class","getRTASettingsActionHandler":{"!description":"This method can be used in the control's according designtime metadata for keyuser personalization.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, mPropertyBag: Object, aKeys: String) -> Promise","parameters":{"mPropertyBag":"type: object, description: The propertybag provided in the settings action.","oControl":"type: sap.ui.mdc.Control, description: The registered control instance.","aKeys":"type: string, description: The keys to be used to display in the corresponding Controller"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.Engine with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.p13n.AdaptationProvider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"registerAdaptation":{"!description":"This method should only be called once per instance to register provided classes of <code>sap.ui.mdc.p13n.Controller<\/code> for the control instance","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oConfig: Object)","parameters":{"oConfig":"type: Object, description: The config object providing key value pairs of keys and <code>sap.ui.mdc.p13n.Controller<\/code> classes.","oControl":"type: sap.ui.mdc.Control, description: The control insance to be registered for adaptation"}},"!constructorDescription":"Constructor for a new Engine.\n\nThe Engine should always be accessed via 'getInstance' and not by creating a new instance of it.\nThe class should only be used to create derivations.","!module":"sap/ui/mdc/p13n/Engine","createChanges":{"!description":"<code>Engine#createChanges<\/code> can be used to programmatically trigger the creation of a set of changes based on the current control state and the provided state.","!static":false,"!category":"function","!type":"fn(mDiffParameters: Object) -> Promise","parameters":{"mDiffParameters":"type: object, description: A map defining the configuration to create the changes."}},"retrieveState":{"!description":"Retrieves the externalized state for a given control instance. The retrieved state is equivalent to the \"getCurrentState\" API for the given Control, after all necessary changes have been applied (e.g. variant appliance and P13n/StateUtil changes). After the returned Promise has been resolved, the returned State is in sync with the according state object of the MDC control (for example \"filterConditions\" for the FilterBar).","!static":false,"!category":"function","!type":"fn(oControl: Object) -> Promise","parameters":{"oControl":"type: object, description: The control instance implementing IxState to retrieve the externalized state"}},"reset":{"!description":"This method can be used to trigger a reset on the provided control instance.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, aKeys: String) -> Promise","parameters":{"oControl":"type: sap.ui.mdc.Control, description: The according control instance.","aKeys":"type: string, description: The key for the affected config."}},"getInstance":{"!static":true,"!category":"function","!type":"fn()"}},"sap.ui.mdc.valuehelp.content.MDCTable":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.ui.mdc.Table}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MDCTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.MDCTable.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>MDCTable<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.ui.mdc.Table (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.FilterableListContent#constructor sap.ui.mdc.valuehelp.base.FilterableListContent}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/MDCTable","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.MDCTable"},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.ui.mdc.Table}.","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.\n\nTable to be used in value help\n\n<b>Note:<\/b> Set the right selection mode (multiple selection or single selection) as it cannot be determined automatically for every case. (Maybe for multi-value {@link sap.ui.mdc.FilterField FilterField} controls only single selection from table might be wanted.)","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> sap.ui.mdc.valuehelp.content.MDCTable","parameters":{"oTable":"type: sap.ui.mdc.Table, description: The table to set"}},"!proto":"sap.ui.mdc.valuehelp.base.FilterableListContent","!category":"class"},"sap.ui.mdc.valuehelp.content.FixedList_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.FixedList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.FixedList"},"sap.ui.mdc.condition.RangeOperator":{"!description":"Creates a <code>sap.ui.mdc.condition.RangeOperator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.RangeOperator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.condition.Operator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.RangeOperator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!module":"sap/ui/mdc/condition/RangeOperator","!helpDescription":"Creates a <code>sap.ui.mdc.condition.RangeOperator<\/code> object. This is used in the {@link sap.ui.mdc.FilterField FilterField} control to define which filter operators are supported.\n\nIf a function or property is initial, the default implementation is used.","!proto":"sap.ui.mdc.condition.Operator","!category":"class","getStaticText":{"!description":"Creates the static text of the operator","!static":false,"!category":"function","!type":"fn(oType: sap.ui.model.Type) -> String","parameters":{"oType":"type: sap.ui.model.Type, description: data type of the used {@link sap.ui.mdc.FilterField FilterField}"}}},"sap.ui.mdc.filterbar":{"!description":"Modules for different filterbars","filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"showMessages":{"!description":"Displays possible errors during the search in a message box.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"!category":"namespace","FilterBarBase":"sap.ui.mdc.filterbar.FilterBarBase_obj","_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"delegate":{"!description":"Defines the path to the metadata retrieval class for the <code>FilterBarBase<\/code> control. It basically identifies the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} file that provides the required APIs to create the filter bar content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> <b>Note:<\/b> This property must not be bound.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.","!category":"enum","!type":"Object"},"vh":"sap.ui.mdc.filterbar.vh","liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"!module":"sap/ui/mdc/filterbar/vh/FilterBar","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"!helpDescription":"Modules for different filterbars","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"aligned":"sap.ui.mdc.filterbar.aligned","showGoButton":{"!description":"Determines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.chart.Item":{"!description":"The <code>Item<\/code> control for the field/property metadata used within MDC controls. An instance can be created to override the default/metadata. behavior.","setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nThe unique identifier of the chart item that reflects the name of the data property in the resulting data set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.ui.mdc.chart.Item","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chart.Item.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel for the item, either as a string literal or by a pointer, using the binding to some property containing the label.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nThe unique identifier of the chart item that reflects the name of the data property in the resulting data set.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","getRole":{"!description":"Gets current value of property {@link #getRole role}.\n\nSpecifies the role of the item for the chart. This is specific for the used chart library. <b>NOTE: <\/b> This property must not be changed after initialization.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: String) -> sap.ui.mdc.chart.Item","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.Item with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Item.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getType type} : string (default: \"\")<\/li>\n<li>{@link #getRole role} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/chart/Item","!helpDescription":"The <code>Item<\/code> control for the field/property metadata used within MDC controls. An instance can be created to override the default/metadata. behavior.","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setRole":{"!description":"Sets a new value for property {@link #getRole role}.\n\nSpecifies the role of the item for the chart. This is specific for the used chart library. <b>NOTE: <\/b> This property must not be changed after initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.ui.mdc.chart.Item","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel for the item, either as a string literal or by a pointer, using the binding to some property containing the label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.mdc.chart.Item","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}}},"sap.ui.mdc.util.DateUtil":{"!description":"Utility class with functions for Date conversion","showTimezone":{"!description":"Checks if a DateTimeWithTimezone is used and the Timezone should be shown beside Date an time","!static":"true","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType) -> Boolean"},"typeToUniversalDate":{"!description":"Converts a data type specific date to a UniversalDate.","!static":"true","!category":"function","!type":"fn(vDate: Object, oType: sap.ui.model.SimpleType, sBaseType?: sap.ui.mdc.enum.BaseType) -> sap.ui.core.date.UniversalDate"},"!module":"sap/ui/mdc/util/DateUtil","createInternalType":{"!description":"\"Clones\" a given data type to use a given pattern.","!static":"true","!category":"function","!type":"fn(oType: sap.ui.model.SimpleType, sPattern: String) -> sap.ui.model.SimpleType"},"stringToType":{"!description":"Converts a string based date to a Type using a given pattern.","!static":"true","!category":"function","!type":"fn(sDate: String, oType: sap.ui.model.SimpleType, sPattern: String) -> Object"},"universalDateToType":{"!description":"Converts a UniversalDate to data type specific date.","!static":"true","!category":"function","!type":"fn(oDate: sap.ui.core.date.UniversalDate, oType: sap.ui.model.SimpleType, sBaseType?: sap.ui.mdc.enum.BaseType) -> Object"},"!helpDescription":"Utility class with functions for Date conversion","!category":"namespace","typeToString":{"!description":"Converts a data type specific date to a string using a given pattern.","!static":"true","!category":"function","!type":"fn(vDate: Object, oType: sap.ui.model.SimpleType, sPattern: String) -> String"}},"sap.ui.mdc.MultiValueField":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.mdc.field.MultiValueFieldItem) -> sap.ui.mdc.field.MultiValueFieldItem | null","parameters":{"vItem":"type: int|string|sap.ui.mdc.field.MultiValueFieldItem, description: The item to remove or its index or id"}},"!proto":"sap.ui.mdc.field.FieldBase","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.MultiValueField"},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to the <code>MultiValueFieldDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.MultiValueField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.MultiValueFieldItem) -> sap.ui.mdc.MultiValueField","parameters":{"oItem":"type: sap.ui.mdc.field.MultiValueFieldItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems of the <code>MultiValueField<\/code> control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.MultiValueFieldItem]"},"!constructorDescription":"Constructor for a new <code>MultiValueField<\/code> control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.mdc.field.MultiValueFieldItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","setConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, use the <code>items<\/code> aggregation to bind the control.<br>Sets conditions to the property <code>conditions<\/code>.\n\nDo not use the <code>conditions<\/code> property, use the <code>items<\/code> aggregation instead.","!static":false,"!category":"function","!type":"fn(aConditions: [Object]) -> sap.ui.mdc.MultiValueField","parameters":{"aConditions":"type: object[], description: Conditions to be set"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.mdc.field.MultiValueFieldItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.MultiValueFieldItem) -> Number","parameters":{"oItem":"type: sap.ui.mdc.field.MultiValueFieldItem, description: The item whose index is looked for"}},"!description":"A <code>MultiValueField<\/code> control can hold multiple values. The values are stored as items. A <code>MultiValueField<\/code> control can be used to bind its items to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>MultiValueField<\/code> control.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.MultiValueField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMaxConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, this property is not supported for the <code>MultiValueField<\/code> control.<br>This property must not be set for the <code>MultiValueField<\/code> control.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> sap.ui.mdc.MultiValueField","parameters":{"iMaxConditions":"type: int, description: More than 1 condition must be allowed in <code>MultiValueField<\/code>"}},"setDataTypeFormatOptions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the type in the binding to the <code>items<\/code> aggregation is used.<br>The format options of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeFormatOptions<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeFormatOptions: String) -> sap.ui.mdc.MultiValueField","parameters":{"oDataTypeFormatOptions":"type: string, description: Format options to be set"}},"getConditions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, use the <code>items<\/code> aggregation to bind the control.<br>Gets conditions of the property <code>conditions<\/code>.\n\nDo not use the <code>conditions<\/code> property, use the <code>items<\/code> aggregation instead.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.MultiValueField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.MultiValueField<\/code> itself.\n\nThis event is fired when the <code>items<\/code> aggregation of the field is changed by user interaction.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.MultiValueField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.MultiValueFieldItem]"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMultipleLines":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined This property is not supported for multi-value fields.<br>Sets a new value for property <code>multipleLines<\/code>.","!static":false,"!category":"function","!type":"fn(bMultipleLines?: Boolean) -> sap.ui.mdc.MultiValueField","parameters":{"bMultipleLines":"type: boolean, description: New value for property <code>multipleLines<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to the <code>MultiValueFieldDelegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.MultiValueField","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.MultiValueField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setDataType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the type in the binding to the <code>items<\/code> aggregation is used.<br>The type of data handled by the field. The type is used to parse, format, and validate the value.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the value of the <code>dataType<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn(sDataType: String) -> sap.ui.mdc.MultiValueField","parameters":{"sDataType":"type: string, description: DataType to be set"}},"!module":"sap/ui/mdc/MultiValueField","!helpDescription":"A <code>MultiValueField<\/code> control can hold multiple values. The values are stored as items. A <code>MultiValueField<\/code> control can be used to bind its items to data of a certain data type. Based on the data type settings, a default control is rendered by the <code>MultiValueField<\/code> control.","setDataTypeConstraints":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not supported, the type in the binding to the <code>items<\/code> aggregation is used.<br>The constraints of the type specified in <code>dataType<\/code>.\n\n<b>Note:<\/b> If the <code>items<\/code> aggregation is bound to a model using a type, this type is used. In this case the values of the <code>dataType<\/code> property and the <code>dataTypeConstraints<\/code> property are ignored.","!static":false,"!category":"function","!type":"fn(oDataTypeConstraints: String) -> sap.ui.mdc.MultiValueField","parameters":{"oDataTypeConstraints":"type: string, description: Constraints to be set"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.mdc.field.MultiValueFieldItem, iIndex: Number) -> sap.ui.mdc.MultiValueField","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.mdc.field.MultiValueFieldItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.field.TokenizerDisplay":{"!description":"The <code>TokenizerDisplay<\/code> control is used to render a Tokenizer inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenizerDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tokenizer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.TokenizerDisplay.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TokenizerDisplay<\/code>.\n\nThe <code>TokenizerDisplay<\/code> control enhances the {@link sap.m.Tokenizer Tokenizer} control to support diaply only tokens.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEmptyIndicatorMode emptyIndicatorMode} : sap.m.EmptyIndicatorMode (default: Off)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tokenizer#constructor sap.m.Tokenizer}\ncan be used as well.","!module":"sap/ui/mdc/field/TokenizerDisplay","setEmptyIndicatorMode":{"!description":"Sets a new value for property {@link #getEmptyIndicatorMode emptyIndicatorMode}.\n\nSpecifies if an empty indicator should be displayed when there is no token.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Off<\/code>.","!static":false,"!category":"function","!type":"fn(sEmptyIndicatorMode?: sap.m.EmptyIndicatorMode) -> sap.ui.mdc.field.TokenizerDisplay","parameters":{"sEmptyIndicatorMode":"type: sap.m.EmptyIndicatorMode, description: New value for property <code>emptyIndicatorMode<\/code>"}},"!helpDescription":"The <code>TokenizerDisplay<\/code> control is used to render a Tokenizer inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","!proto":"sap.m.Tokenizer","!category":"class","getEmptyIndicatorMode":{"!description":"Gets current value of property {@link #getEmptyIndicatorMode emptyIndicatorMode}.\n\nSpecifies if an empty indicator should be displayed when there is no token.\n\nDefault value is <code>Off<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.EmptyIndicatorMode"}},"sap.ui.mdc.p13n.modification":{"!category":"namespace","ModificationHandler":"sap.ui.mdc.p13n.modification.ModificationHandler_obj"},"sap.ui.mdc.enum.PropagationReason":{"!description":"Enumeration of the propagation reason in the condition propagation callback of the {@link sap.ui.mdc.ValueHelp ValueHelp}","!module":"sap/ui/mdc/enum/PropagationReason","Select":{"!description":"Triggered by valuehelp itself on selection","!category":"enum","!type":"String"},"!category":"static class","ControlChange":{"!description":"Triggered by connected control after processing valuehelp output","!category":"enum","!type":"String"},"Info":{"!description":"Triggered by valuehelp itself on <code>getItemForValue<\/code>","!category":"enum","!type":"String"}},"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.CollectiveSearchSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect"},"sap.ui.mdc.mixin.PropertyHelperMixin":{"!description":"Enhances a given control prototype with consolidated asynchronous handling for providing a PropertyHelper\n\nThe following methods are available:\n\n<ul> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>finalizePropertyHelper<\/code> - Finalizes the propertyHelper fetching all available propertyInfo via a given control delegate.<\/li> <li><code>isPropertyHelperFinal<\/code> - Indicates if the propertyHelper for this control allready contains all available propertyInfo.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <\/ul>","updatePropertyHelper":{"!description":"Provide a new set of properties for the propertyHelper.","!static":"true","!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>"},"finalizePropertyHelper":{"!description":"Finalize the propertyHelper using the control's delegate.","!static":"true","!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>"},"getPropertyHelper":{"!description":"Returns the property helper instance, if available.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.util.PropertyHelper"},"!module":"sap/ui/mdc/mixin/PropertyHelperMixin","!helpDescription":"Enhances a given control prototype with consolidated asynchronous handling for providing a PropertyHelper\n\nThe following methods are available:\n\n<ul> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>finalizePropertyHelper<\/code> - Finalizes the propertyHelper fetching all available propertyInfo via a given control delegate.<\/li> <li><code>isPropertyHelperFinal<\/code> - Indicates if the propertyHelper for this control allready contains all available propertyInfo.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <\/ul>","isPropertyHelperFinal":{"!description":"Indicates if the control's propertyHelper already contains all available properties","!static":"true","!category":"function","!type":"fn() -> Boolean"},"!category":"namespace","awaitPropertyHelper":{"!description":"Provides access to the property helper initialization <code>Promise<\/code>.","!static":"true","!category":"function","!type":"fn() -> Promise<sap.ui.mdc.util.PropertyHelper>"},"initPropertyHelper":{"!description":"Loads and initializes the property helper related to the enhanced control.","!static":"true","!category":"function","!type":"fn(PropertyHelperClass?: sap.ui.mdc.util.PropertyHelper, aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>"}},"sap.ui.mdc.field.MultiValueFieldItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.MultiValueFieldItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.MultiValueFieldItem"},"sap.ui.mdc.table.ResponsiveTableType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.ResponsiveTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.ResponsiveTableType"},"sap.ui.mdc.FilterField_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.FilterField"},"sap.ui.mdc.filterbar.vh.FilterBar":{"!description":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Show Filters button shows the additional filter field.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","setCollectiveSearch":{"!description":"Sets the <code>CollectiveSearch<\/code> control\n\n<b>Note:<\/b> This must only be done by the corresponding value help, not from outside.","!static":false,"!category":"function","!type":"fn(oCollectiveSearch: sap.ui.mdc.filterbar.vh.CollectiveSearchSelect) -> sap.ui.mdc.filterbar.vh.FilterBar","parameters":{"oCollectiveSearch":"type: sap.ui.mdc.filterbar.vh.CollectiveSearchSelect, description: <code>CollectiveSearch<\/code> control"}},"getExpandFilterFields":{"!description":"Gets current value of property {@link #getExpandFilterFields expandFilterFields}.\n\nDetermines whether the Show/Hide Filters button is in the state show or hide.<br>\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.vh.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setExpandFilterFields":{"!description":"Sets a new value for property {@link #getExpandFilterFields expandFilterFields}.\n\nDetermines whether the Show/Hide Filters button is in the state show or hide.<br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandFilterFields?: Boolean) -> sap.ui.mdc.filterbar.vh.FilterBar","parameters":{"bExpandFilterFields":"type: boolean, description: New value for property <code>expandFilterFields<\/code>"}},"!proto":"sap.ui.mdc.filterbar.FilterBarBase","!category":"class","destroyCollectiveSearch":{"!description":"Destroyes the <code>CollectiveSearch<\/code> control\n\n<b>Note:<\/b> This must only be used by the corresponding value help, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.vh.FilterBar"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setFilterFieldThreshold":{"!description":"Sets a new value for property {@link #getFilterFieldThreshold filterFieldThreshold}.\n\nNumber of FilterItems which will be shown via Show Filters.<br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn(iFilterFieldThreshold?: Number) -> sap.ui.mdc.filterbar.vh.FilterBar","parameters":{"iFilterFieldThreshold":"type: int, description: New value for property <code>filterFieldThreshold<\/code>"}},"!constructorDescription":"Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExpandFilterFields expandFilterFields} : boolean (default: true)<\/li>\n<li>{@link #getFilterFieldThreshold filterFieldThreshold} : int (default: 8)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.filterbar.FilterBarBase#constructor sap.ui.mdc.filterbar.FilterBarBase}\ncan be used as well.","!module":"sap/ui/mdc/filterbar/vh/FilterBar","!helpDescription":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Show Filters button shows the additional filter field.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","getCollectiveSearch":{"!description":"Gets the <code>CollectiveSearch<\/code> control\n\n<b>Note:<\/b> This must only be used by the corresponding value help, not from outside.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.vh.CollectiveSearchSelect"},"getFilterFieldThreshold":{"!description":"Gets current value of property {@link #getFilterFieldThreshold filterFieldThreshold}.\n\nNumber of FilterItems which will be shown via Show Filters.<br>\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.ui.mdc.valuehelp.base.FilterableListContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.FilterableListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.FilterableListContent"},"sap.ui.mdc.IFilterSource":{"!description":"Interface for controls or entities which are able to return a set of present conditions. The controls or entities have to implement the following APIs: <code>getConditions<\/code>.","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.field.ConditionsType":{"!description":"This class represents a type that is used to map an array of conditions to a single-value control (such as <code>Input<\/code> or <code>Text<\/code> control).","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionsType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionsType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a Conditions type.","formatValue":{"!description":"Formats the given conditions to an output value of the given target type. This values are formatted using the given data type. Depending of the operator and the configuration (set in <code>FormatOptions<\/code>) a description will be determined via given value help or delegate.","!static":false,"!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject], sTargetType: String) -> Object | Promise","parameters":{"sTargetType":"type: string, description: The target type; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard target types <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not formatted and just forwarded to the target. If the value is an array representing data for a <code>CompositeType<\/code> the index of the needed raw value can be added to the name (For example if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","aConditions":"type: sap.ui.mdc.condition.ConditionObject[], description: The conditions to be formatted"}},"!module":"sap/ui/mdc/field/ConditionsType","!helpDescription":"This class represents a type that is used to map an array of conditions to a single-value control (such as <code>Input<\/code> or <code>Text<\/code> control).","!proto":"sap.ui.model.SimpleType","validateValue":{"!description":"Validates a given array of conditions. The values of the conditions are validated using the given data type.","!static":false,"!category":"function","!type":"fn(aConditions: [sap.ui.mdc.condition.ConditionObject]) -> undefined | Promise","parameters":{"aConditions":"type: sap.ui.mdc.condition.ConditionObject[], description: The conditions to be validated"}},"!category":"class","parseValue":{"!description":"Parses an external value of the given source type to an array of conditions that holds the value in model representation. These values are parsed using the given data type. Depending of the operator and the configuration (set in <code>FormatOptions<\/code>) a value will be determined via given value help or delegate.","!static":false,"!category":"function","!type":"fn(vValue: Object, sSourceType: String) -> [null | sap.ui.mdc.condition.ConditionObject[] | Promise<(null | sap.ui.mdc.condition.ConditionObject]","parameters":{"sSourceType":"type: string, description: The type of the given value; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard source types <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not parsed and just used in the condition. If the value of the condition is an array representing data for a <code>CompositeType<\/code> the index of the needed raw value can be added to the name (For example if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","vValue":"type: any, description: The value to be parsed"}}},"sap.ui.mdc.condition.Condition":{"!description":"Utilities to create conditions to be used in {@link sap.ui.mdc.FilterField FilterField}, {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.mdc.condition.ConditionModel ConditionModel}","!module":"sap/ui/mdc/condition/Condition","!helpDescription":"Utilities to create conditions to be used in {@link sap.ui.mdc.FilterField FilterField}, {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.mdc.condition.ConditionModel ConditionModel}","!category":"namespace","createCondition":{"!description":"Creates a condition object.","!static":"true","!category":"function","!type":"fn(sOperator: String, aValues: [Object], oInParameters?: Object, oOutParameters?: Object, sValidated: sap.ui.mdc.enum.ConditionValidated, oPayload?: Object) -> sap.ui.mdc.condition.ConditionObject"},"createItemCondition":{"!description":"Creates a condition instance for a condition representing a item chosen from the field help.\n\nThis is a \"equal to\" (EQ) condition with key and description. It is used for entries selected in the field help and for everything entered in the {@link sap.ui.mdc.Field Field} control.","!static":"true","!category":"function","!type":"fn(sKey: String, sDescription: String, oInParameters?: Object, oOutParameters?: Object, oPayload?: Object) -> sap.ui.mdc.condition.ConditionObject"}},"sap.ui.mdc.field.BoolFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that shows a list for Boolean values.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.BoolFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.BoolFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new BoolFieldHelp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase} can be used.","!module":"sap/ui/mdc/field/BoolFieldHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that shows a list for Boolean values.","!proto":"sap.ui.mdc.field.FieldHelpBase","!category":"class"},"sap.ui.mdc.GrowingMode":{"!description":"Defines the growing options of the responsive table.","Basic":{"!description":"Basic growing takes place (<code>growing<\/code> is set in the responsive table)","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Scroll":{"!description":"Growing with <code>scroll<\/code> takes place (<code>growing<\/code> and <code>growingScrollToLoad<\/code> are set in the responsive table)","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"Growing does not take place (<code>growing<\/code> is not set in the responsive table)","!category":"enum","!type":"String"}},"module:sap/ui/mdc/field/FieldBaseDelegate":{"!description":"Delegate for {@link sap.ui.mdc.field.FieldBase FieldBase}.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","getDefaultValueHelpDelegate":{"!description":"This function returns which <code>ValueHelpDelegate<\/code> is used if a default field help (for example, for defining conditions in <\/code>FilterField<\/code>) is created.","!category":"function","!type":"fn(oPayload: Object) -> Object"},"enhanceValueForUnit":{"!description":"This function enhances the value with unit or currency information if needed by the data type.","!category":"function","!type":"fn(oPayload: Object, aValues: [Object], oTypeInitialization: Object) -> [Object]"},"initializeInternalUnitType":{"!description":"This function initializes the unit type. If the <code>Field<\/code> control is used, the used data type might come from the binding. If the type is a V4 unit or currency, it might need to be formatted once.","!category":"function","!type":"fn(oPayload: Object, oType: sap.ui.model.SimpleType, oTypeInitialization: Object)"},"isInputValidationEnabled":{"!description":"Defines if the input of the <code>Field<\/code> or <code>FilterField<\/code> control is checked to determine the key and description.","!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase) -> Boolean"},"!category":"namespace","isInvalidInputAllowed":{"!description":"Defines if the input of the <code>Field<\/code> or <code>FilterField<\/code> control that is not found in the field help or custom logic is accepted.","!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase) -> Boolean"},"getDefaultFieldHelpBaseDelegate":{"!description":"This function returns which <code>FieldHelpBaseDelegate<\/code> is used if a default field help (for example, for Boolean values) is created.","!category":"function","!type":"fn(oPayload: Object) -> Object"},"getDescription":{"!description":"Determines the description for a given key.\n\nThis function is called while formatting the output of a <code>Field<\/code> or <code>FilterField<\/code> control in case a description is to be displayed but only a key is given.\n\nIf this needs to be determined asynchronously, a <code>Promise<\/code> is returned.\n\nAs the key might change (uppercase), an object with key and description can be returned.\n\nIf the description cannot be determined, a corresponding <code>FormatException<code> is thrown.","!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase, vKey: Object, oInParameters: Object, oOutParameters: Object, oBindingContext: sap.ui.model.Context, oConditionModel?: sap.ui.mdc.condition.ConditionModel, sConditionModelName?: String, oConditionPayload: Object, oControl?: sap.ui.core.Control, oType: sap.ui.model.Type) -> String | Object | Promise"},"initializeTypeFromBinding":{"!description":"If the <code>Field<\/code> control is used, the used data type might come from the binding. In V4-unit or currency case it might need to be formatted once. To initialize the internal type later on, the currencies must be returned.","!category":"function","!type":"fn(oPayload: Object, oType: sap.ui.model.SimpleType, vValue: Object) -> Object"},"!module":"sap/ui/mdc/field/FieldBaseDelegate","getItemForValue":{"!description":"Determines the key, description, and the in and out parameters of a user input.\n\nIf this needs to be determined asynchronously, a <code>Promise<\/code> is returned.\n\nThe result needs to be an object containing the following properties: description, key, and in and out parameters. <ul> <li><code>key<\/code>: Key of the item <\/li> <li><code>description<\/code>: Description of the item <\/li> <li><code>inParameters<\/code>: Object with in parameters and the corresponding value <\/li> <li><code>outParameters<\/code>: Object with out parameters and the corresponding value <\/li> <\/ul>\n\nIf the item cannot be determined, a corresponding <code>ParseException<code> is thrown.","!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldHelpBase, oConfig?: Object) -> Object | Promise"},"!helpDescription":"Delegate for {@link sap.ui.mdc.field.FieldBase FieldBase}.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","getDefaultFieldValueHelpDelegate":{"!description":"This function returns which <code>FieldValueHelpDelegate<\/code> is used if a default field help (for example, for defining conditions in <\/code>FilterField<\/code>) is created.","!category":"function","!type":"fn(oPayload: Object) -> Object"},"module:sap/ui/mdc/field/FieldBaseDelegate":"module:sap/ui/mdc/field/FieldBaseDelegate"},"sap.ui.mdc.field.FieldValueHelp":{"setFilterBar":{"!description":"Sets the aggregated {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.filterbar.FilterBarBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oFilterBar":"type: sap.ui.mdc.filterbar.FilterBarBase, description: The filterBar to set"}},"_getKeyPath":{"!description":"Returns the path of the key field inside the content control (for example, table).","!static":false,"!category":"function","!type":"fn() -> String"},"getSuggestContent":{"!description":"Gets content of aggregation {@link #getSuggestContent suggestContent}.\n\nContent for suggestion.\n\nTo support different types of content (for example <code>sap.m.Table<\/code>), a specific wrapper is used to map the functionality of the content control to the field help. The content control is assigned to the wrapper.\n\nThe filter logic must be implemented in the wrapper control. The filtering is triggered by user interaction (type-ahead, search request, or search from <code>FilterBar<\/code>). (If <code>FilterBar<\/code> is in <code>LiveMode<\/code> and in parameters are used, this also triggers filtering.)\n\n<b>Note:<\/b> If no special content for suggestion is provided, the content of the <code>content<\/code> aggregation is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"setDescriptionPath":{"!description":"Sets a new value for property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDescriptionPath?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sDescriptionPath":"type: string, description: New value for property <code>descriptionPath<\/code>"}},"getOutParameters":{"!description":"Gets content of aggregation {@link #getOutParameters outParameters}.\n\nSets the out parameters of a field help.\n\nIf set, the fields sets the data of these entities in the model based to the selected values.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.OutParameter]"},"getFilterFields":{"!description":"Gets current value of property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setCaseSensitive":{"!description":"Sets a new value for property {@link #getCaseSensitive caseSensitive}.\n\nIf this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bCaseSensitive?: Boolean) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"bCaseSensitive":"type: boolean, description: New value for property <code>caseSensitive<\/code>"}},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears in the dialog header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getDialogContent":{"!description":"Gets content of aggregation {@link #getDialogContent dialogContent}.\n\nContent for dialog.\n\nTo support different types of content (for example <code>sap.m.Table<\/code>), a specific wrapper is used to map the functionality of the content control to the field help. The content control is assigned to the wrapper.\n\nThe filter logic must be implemented in the wrapper control. The filtering is triggered by user interaction (type-ahead, search request, or search from <code>FilterBar<\/code>). (If <code>FilterBar<\/code> is in <code>LiveMode<\/code> and in parameters are used, this also triggers filtering.)\n\n<b>Note:<\/b> If no special content for the dialog is provided, the content of the <code>content<\/code> aggregation is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"removeInParameter":{"!description":"Removes a inParameter from the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(vInParameter: Number | String | sap.ui.mdc.field.InParameter) -> sap.ui.mdc.field.InParameter | null","parameters":{"vInParameter":"type: int|string|sap.ui.mdc.field.InParameter, description: The inParameter to remove or its index or id"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"!description":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a value help dialog.","destroySuggestContent":{"!description":"Destroys the suggestContent in the aggregation {@link #getSuggestContent suggestContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"getFilterBar":{"!description":"Gets content of aggregation {@link #getFilterBar filterBar}.\n\n<code>FilterBar<\/code> control of the field help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.FilterBarBase"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachDataRequested":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.mdc.field.FieldValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelp<\/code> itself.\n\nThis event is fired when a description for a key or a key for a description is requested, and no data table with list binding is assigned.\n\nThis is the case if a <code>Field<\/code> or <code>FilterField<\/code> shows the description of the value. and the value is formatted or a new input is parsed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"_getFormatOptions":{"!description":"Return field-internal information stored in <code>FormatOptions<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"_getFilterBar":{"!description":"Returns the relevant filterbar of this valuehelp.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.FilterBar"},"getDescriptionPath":{"!description":"Gets current value of property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllCollectiveSearchItems":{"!description":"Removes all the controls from the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"removeOutParameter":{"!description":"Removes a outParameter from the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(vOutParameter: Number | String | sap.ui.mdc.field.OutParameter) -> sap.ui.mdc.field.OutParameter | null","parameters":{"vOutParameter":"type: int|string|sap.ui.mdc.field.OutParameter, description: The outParameter to remove or its index or id"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears in the dialog header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeCollectiveSearchItem":{"!description":"Removes a collectiveSearchItem from the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn(vCollectiveSearchItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vCollectiveSearchItem":"type: int|string|sap.ui.core.Item, description: The collectiveSearchItem to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getNoDialog":{"!description":"Gets current value of property {@link #getNoDialog noDialog}.\n\nIf set, the field help doesn't open a value help dialog, but just displays the content. It behaves like in the case of a suggestion but without any search.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"_getTypesForConditions":{"!description":"Returns a condition type map for the valuehelp filterbar","!static":false,"!category":"function","!type":"fn() -> Object"},"getCollectiveSearchItems":{"!description":"Gets content of aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.\n\nItems for collective searches.\n\nIf used, a field to switch value helps will be shown. If the value help is switched, the <code>contentRequest<\/code> function of the delegate is called and the chosen key is provided.\n\n<b>Note:<\/b> Icons are not supported.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!module":"sap/ui/mdc/field/FieldValueHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a value help dialog.","addOutParameter":{"!description":"Adds some outParameter to the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter to add; if empty, nothing is inserted"}},"destroyOutParameters":{"!description":"Destroys all the outParameters in the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"indexOfInParameter":{"!description":"Checks for the provided <code>sap.ui.mdc.field.InParameter<\/code> in the aggregation {@link #getInParameters inParameters}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter) -> Number","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter whose index is looked for"}},"getShowConditionPanel":{"!description":"Gets current value of property {@link #getShowConditionPanel showConditionPanel}.\n\nDetermines if a condition panel is shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachDataRequested":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataRequested dataRequested} event of this <code>sap.ui.mdc.field.FieldValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.mdc.field.FieldValueHelpContentWrapperBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oContent":"type: sap.ui.mdc.field.FieldValueHelpContentWrapperBase, description: The content to set"}},"setKeyPath":{"!description":"Sets a new value for property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sKeyPath?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sKeyPath":"type: string, description: New value for property <code>keyPath<\/code>"}},"setFilterFields":{"!description":"Sets a new value for property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterFields?: String) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"sFilterFields":"type: string, description: New value for property <code>filterFields<\/code>"}},"addCollectiveSearchItem":{"!description":"Adds some collectiveSearchItem to the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn(oCollectiveSearchItem: sap.ui.core.Item) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oCollectiveSearchItem":"type: sap.ui.core.Item, description: The collectiveSearchItem to add; if empty, nothing is inserted"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the field help.\n\nTo support different types of content (for example <code>sap.m.Table<\/code>), a specific wrapper is used to map the functionality of the content control to the field help. The content control is assigned to the wrapper.\n\nThe filter logic must be implemented in the wrapper control. The filtering is triggered by user interaction (type-ahead, search request, or search from <code>FilterBar<\/code>). (If <code>FilterBar<\/code> is in <code>LiveMode<\/code> and in parameters are used, this also triggers filtering.)","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"!proto":"sap.ui.mdc.field.FieldHelpBase","insertOutParameter":{"!description":"Inserts a outParameter into the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter, iIndex: Number) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the outParameter should be inserted at; for a negative value of <code>iIndex<\/code>, the outParameter is inserted at position 0; for a value greater than the current size of the aggregation, the outParameter is inserted at the last position"}},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeAllInParameters":{"!description":"Removes all the controls from the aggregation {@link #getInParameters inParameters}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.InParameter]"},"setNoDialog":{"!description":"Sets a new value for property {@link #getNoDialog noDialog}.\n\nIf set, the field help doesn't open a value help dialog, but just displays the content. It behaves like in the case of a suggestion but without any search.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bNoDialog?: Boolean) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"bNoDialog":"type: boolean, description: New value for property <code>noDialog<\/code>"}},"getCaseSensitive":{"!description":"Gets current value of property {@link #getCaseSensitive caseSensitive}.\n\nIf this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyFilterBar":{"!description":"Destroys the filterBar in the aggregation {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"!constructorDescription":"Constructor for a new <code>FieldValueHelp<\/code>.\n\nIf a more complex value help is needed, the application can add a table to this field help.\nAs the behavior depends on the used table control in this case,\na wrapper is used between the used control and the <code>FieldValueHelp<\/code> element.\n\n<b>Note:<\/b> If a <code>FieldValueHelp<\/code> element is connected to a field, it gets the <code>BindingContext<\/code> of this field.\nSo the in and out parameters are done in this context. Therefore bind the content table in such a way that that it finds\nits data also in the <code>BindingContext<\/code> of the field.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getFilterFields filterFields} : string (default: \"\")<\/li>\n<li>{@link #getKeyPath keyPath} : string (default: \"\")<\/li>\n<li>{@link #getDescriptionPath descriptionPath} : string (default: \"\")<\/li>\n<li>{@link #getShowConditionPanel showConditionPanel} : boolean (default: false)<\/li>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<li>{@link #getNoDialog noDialog} : boolean (default: false)<\/li>\n<li>{@link #getCaseSensitive caseSensitive} : boolean (default: true)<\/li>\n<li>{@link #get_enableOK _enableOK} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.mdc.field.FieldValueHelpContentWrapperBase (default)<\/li>\n<li>{@link #getSuggestContent suggestContent} : sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/li>\n<li>{@link #getDialogContent dialogContent} : sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/li>\n<li>{@link #getFilterBar filterBar} : sap.ui.mdc.filterbar.FilterBarBase<\/li>\n<li>{@link #getInParameters inParameters} : sap.ui.mdc.field.InParameter[]<\/li>\n<li>{@link #getOutParameters outParameters} : sap.ui.mdc.field.OutParameter[]<\/li>\n<li>{@link #getCollectiveSearchItems collectiveSearchItems} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dataRequested dataRequested} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","setDialogContent":{"!description":"Sets the aggregated {@link #getDialogContent dialogContent}.","!static":false,"!category":"function","!type":"fn(oDialogContent: sap.ui.mdc.field.FieldValueHelpContentWrapperBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oDialogContent":"type: sap.ui.mdc.field.FieldValueHelpContentWrapperBase, description: The dialogContent to set"}},"destroyDialogContent":{"!description":"Destroys the dialogContent in the aggregation {@link #getDialogContent dialogContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"fireDataRequested":{"!description":"Fires event {@link #event:dataRequested dataRequested} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getInParameters":{"!description":"Gets content of aggregation {@link #getInParameters inParameters}.\n\nSets the in parameters of a field help.\n\nIf set, the field help reads the data of these entities in the model and uses it to filter in the value help.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.InParameter]"},"destroyCollectiveSearchItems":{"!description":"Destroys all the collectiveSearchItems in the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"removeAllOutParameters":{"!description":"Removes all the controls from the aggregation {@link #getOutParameters outParameters}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.OutParameter]"},"getKeyPath":{"!description":"Gets current value of property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyInParameters":{"!description":"Destroys all the inParameters in the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelp"},"indexOfOutParameter":{"!description":"Checks for the provided <code>sap.ui.mdc.field.OutParameter<\/code> in the aggregation {@link #getOutParameters outParameters}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter) -> Number","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter whose index is looked for"}},"insertCollectiveSearchItem":{"!description":"Inserts a collectiveSearchItem into the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}.","!static":false,"!category":"function","!type":"fn(oCollectiveSearchItem: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the collectiveSearchItem should be inserted at; for a negative value of <code>iIndex<\/code>, the collectiveSearchItem is inserted at position 0; for a value greater than the current size of the aggregation, the collectiveSearchItem is inserted at the last position","oCollectiveSearchItem":"type: sap.ui.core.Item, description: The collectiveSearchItem to insert; if empty, nothing is inserted"}},"setSuggestContent":{"!description":"Sets the aggregated {@link #getSuggestContent suggestContent}.","!static":false,"!category":"function","!type":"fn(oSuggestContent: sap.ui.mdc.field.FieldValueHelpContentWrapperBase) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oSuggestContent":"type: sap.ui.mdc.field.FieldValueHelpContentWrapperBase, description: The suggestContent to set"}},"indexOfCollectiveSearchItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getCollectiveSearchItems collectiveSearchItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCollectiveSearchItem: sap.ui.core.Item) -> Number","parameters":{"oCollectiveSearchItem":"type: sap.ui.core.Item, description: The collectiveSearchItem whose index is looked for"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the module path of the metadata delegate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"addInParameter":{"!description":"Adds some inParameter to the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter to add; if empty, nothing is inserted"}},"insertInParameter":{"!description":"Inserts a inParameter into the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter, iIndex: Number) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the inParameter should be inserted at; for a negative value of <code>iIndex<\/code>, the inParameter is inserted at position 0; for a value greater than the current size of the aggregation, the inParameter is inserted at the last position"}},"setShowConditionPanel":{"!description":"Sets a new value for property {@link #getShowConditionPanel showConditionPanel}.\n\nDetermines if a condition panel is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowConditionPanel?: Boolean) -> sap.ui.mdc.field.FieldValueHelp","parameters":{"bShowConditionPanel":"type: boolean, description: New value for property <code>showConditionPanel<\/code>"}}},"sap.ui.mdc.valuehelp.IDialogContent":{"!description":"Interface for valuehelp containers / contents supporting typeahead functionality","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.field.DefineConditionPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.DefineConditionPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.DefineConditionPanel"},"module:sap/ui/mdc/odata/v4/TableDelegate":{"!description":"Delegate for {@link sap.ui.mdc.Table} and <code>ODataV4<\/code>. Enables additional analytical capabilities.","!module":"sap/ui/mdc/odata/v4/TableDelegate","!helpDescription":"Delegate for {@link sap.ui.mdc.Table} and <code>ODataV4<\/code>. Enables additional analytical capabilities.","fetchPropertyExtensions":{"!description":"Fetches the property extensions.\n\n<b>Note:<\/b> Property extensions add model-specific information. To ensure a clear separation from the standard property information, the extensions need to be passed separately to the constructor, together with their attribute metadata. An extension has to be provided as a key-value pair, where the key is the name of the property and the value is the extension of this property. It is not allowed to provide extensions without the corresponding attribute metadata.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, aProperties: [Object]) -> Promise<(Object<(Object<string,object> | null)>"},"!category":"namespace","fetchPropertiesForBinding":{"!description":"Retrieves the relevant metadata that will be used for the table binding, and returns the <code>PropertyInfo<\/code> array. If it is not overridden, this method returns the same as <code>fetchProperties<\/code>. When overriding the method make sure the returned result is consistent with what is returned by <code>fetchProperties<\/code>.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> Promise"},"fetchPropertyExtensionsForBinding":{"!description":"Fetches the property extensions that will be used for the table binding. If it is not overridden, this method returns the same as <code>fetchPropertyExtensions<\/code>. When overriding the method make sure the returned result is consistent with what is returned by <code>fetchPropertyExtensions<\/code>.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, aProperties: [Object]) -> Promise<(Object<(Object<string,object> | null)>"},"getPropertyHelperClass":{"!description":"Gets the model-specific <code>PropertyHelper<\/code> class to create an instance of.","!category":"function","!type":"fn() -> sap.ui.mdc.table.V4AnalyticsPropertyHelper"},"updateBinding":{"!description":"Updates the row binding of the table if possible, rebinds otherwise.\n\nCompares the current and previous state of the table to detect whether rebinding is necessary or not. The diffing happens for the sorters, filters, aggregation, parameters, and the path of the binding. Other {@link sap.ui.base.ManagedObject.AggregationBindingInfo binding info} keys like <code>events<\/code>, <code>model<\/code>... must be provided in the {@link #updateBindingInfo updateBindingInfo} method always, and those keys must not be changed conditionally.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo, oBinding?: sap.ui.model.ListBinding)"},"module:sap/ui/mdc/odata/v4/TableDelegate":"module:sap/ui/mdc/odata/v4/TableDelegate"},"sap.ui.mdc.table":{"hAlign":{"!description":"Horizontal alignment of the content.","!category":"enum","!type":"sap.ui.core.HorizontalAlign"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"importance":{"!description":"Importance of the column. It is used to show or hide the column based on the <code>Table<\/code> configuration.","!category":"enum","!type":"sap.ui.core.Priority"},"icon":{"!description":"Icon for the row action item.\n\nA custom icon cannot be set when using <code>sap.m.Table<\/code>","!category":"enum","!type":"sap.ui.core.URI"},"!category":"namespace","type":{"!description":"Type of the row action item.\n\nAs of version 1.98, only sap.ui.mdc.RowAction.Navigation is available. Setting the type ensures default values for the properties <code>icon<\/code> and <code>text<\/code>. If an icon or text is set explicitly this setting is used.","!category":"enum","!type":"sap.ui.mdc.RowAction"},"navigated":{"!description":"The navigated state of a row.\n\nIf set to <code>true<\/code>, a navigation indicator is displayed at the end of the row.","!category":"enum","!type":"Boolean"},"ResponsiveTableType":"sap.ui.mdc.table.ResponsiveTableType_obj","highlightText":{"!description":"Defines the semantics of the {@link sap.ui.mdc.table.RowSettings#setHighlight highlight} property for accessibility purposes.","!category":"enum","!type":"String"},"detailsButtonSetting":{"!description":"Defines which columns are hidden instead of moved into the pop-in area depending on their importance. See {@link sap.m.Column#getImportance} and {@link sap.m.Table#getHiddenInPopin} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton=\"true\"<\/code>.<br> If no priority is given, the default configuration of {@link sap.ui.mdc.table.ResponsiveTableType#getShowDetailsButton} is used.<br> If this property is changed after the <code>Table<\/code> has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.","!category":"enum","!type":"[sap.ui.core.Priority]"},"highlight":{"!description":"The highlight state of the rows.\n\nIf the highlight is set to {@link sap.ui.core.MessageType sap.ui.core.MessageType.None} (default), no highlights are visible. Valid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor}.\n\nAccessibility support is provided through the associated {@link sap.ui.mdc.table.RowSettings#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.","!category":"enum","!type":"String"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"Column":"sap.ui.mdc.table.Column_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Determines whether the <code>sap.ui.mdc.table.CreationRow<\/code> and its inner control are in a busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"rowCount":{"!description":"Row count of the inner table.<br> This property specifies the minimum row count if <code>sap.ui.mdc.RowCountMode.Auto<\/code> is used.<br> This property specifies the row count if <code>sap.ui.mdc.RowCountMode.Fixed<\/code> is used.","!category":"enum","!type":"Number"},"text":{"!description":"Text for the row action item.\n\nCustom text cannot be set when using <code>sap.m.Table<\/code>.","!category":"enum","!type":"String"},"headerVisible":{"!description":"Defines whether the column header is visible.","!category":"enum","!type":"Boolean"},"popinLayout":{"!description":"Defines the layout in which the table pop-in rows are rendered.","!category":"enum","!type":"sap.m.PopinLayout"},"selectionLimit":{"!description":"Number of indices which can be selected in a range. Accepts positive integer values. If set to 0, the selection limit is disabled, and the Select All checkbox appears instead of the Deselect All button.","!category":"enum","!type":"Number"},"visible":{"!description":"Whether the item should be visible on the screen.","!category":"enum","!type":"Boolean"},"applyEnabled":{"!description":"If set to <code>false<\/code>, the {@link #event:apply apply} event is not fired. The corresponding keyboard shortcut and the apply button of the toolbar are disabled.","!category":"enum","!type":"Boolean"},"minWidth":{"!description":"Minimum width of the column.","!category":"enum","!type":"Number"},"CreationRow":"sap.ui.mdc.table.CreationRow_obj","TableTypeBase":"sap.ui.mdc.table.TableTypeBase_obj","initialIndex":{"!description":"initialIndex : Number","!category":"enum","!type":"Number"},"rowCountMode":{"!description":"Defines how the table handles the row count.","!category":"enum","!type":"sap.ui.mdc.RowCountMode"},"growingMode":{"!description":"Specifies the growing mode.","!category":"enum","!type":"sap.ui.mdc.GrowingMode"},"dataProperty":{"!description":"The data property related to the column.","!category":"enum","!type":"String"},"width":{"!description":"Width of the column.","!category":"enum","!type":"sap.ui.core.CSSSize"},"GridTableType":"sap.ui.mdc.table.GridTableType_obj","header":{"!description":"The column header text.","!category":"enum","!type":"String"},"showHeaderSelector":{"!description":"Determines whether the header selector is shown.","!category":"enum","!type":"Boolean"},"RowSettings":"sap.ui.mdc.table.RowSettings_obj","showDetailsButton":{"!description":"Specifies whether the Show / Hide Details button for the <code>ResponsiveTable<\/code> scenario is shown.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area, while the columns with <code>Low<\/code> importance are hidden.<br> On mobile phones, the columns with <code>Medium<\/code> importance are also hidden.<br> As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.","!category":"enum","!type":"Boolean"},"RowActionItem":"sap.ui.mdc.table.RowActionItem_obj"},"sap.ui.mdc.p13n.subcontroller.BaseController":{"!description":"The <code>BaseController<\/code> serves as base class to create control specific personalization implementations.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.subcontroller.BaseController with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.p13n.subcontroller.BaseController.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>BaseController<\/code>.","!module":"sap/ui/mdc/p13n/subcontroller/BaseController","!helpDescription":"The <code>BaseController<\/code> serves as base class to create control specific personalization implementations.","!proto":"sap.ui.base.Object","!category":"class","getArrayDeltaChanges":{"!description":"Generates a set of changes based on the given arrays for a specified control","!static":false,"!category":"function","!type":"fn(mDeltaInfo: Object) -> Array","parameters":{"mDeltaInfo":"type: object, description: Map containing the necessary information to calculate the diff as change objects"}}},"sap.ui.mdc.valuehelp.Popover":{"!description":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a popover.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Popover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.Popover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>Popover<\/code> container.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.mdc.valuehelp.base.Container#constructor sap.ui.mdc.valuehelp.base.Container} can be used.","!module":"sap/ui/mdc/valuehelp/Popover","!helpDescription":"Container for the {@link sap.ui.mdc.ValueHelp ValueHelp} element showing a popover.","!proto":"sap.ui.mdc.valuehelp.base.Container","!category":"class"},"sap.ui.mdc.enum.ConditionValidated":{"!description":"Enumeration of the validated state of conditions\n\nIf a <code>Condition<\/code> is chosen from a field help or validated against a field help it is set to be validated. In this case the corresponding item in the field help is shown as selected.\n\nIf the validated state of the <code>Condition<\/code> is undefined this means it is not defined if it is validated or not.","Validated":{"!description":"Condition is validated","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/ConditionValidated","NotValidated":{"!description":"Condition is not validated","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.table.CreationRow":{"!description":"Row that allows the user to enter data in a row-shaped form if the {@link sap.ui.mdc.TableType TableType} is \"<code>Table<\/code>\". The form elements are aligned with the columns of the table and are created automatically based on the {@link sap.ui.mdc.table.Column#getCreationTemplate creationTemplate} aggregation of the {@link sap.ui.mdc.table.Column}.","setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nVisibility of the <code>CreationRow<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.mdc.table.CreationRow","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.CreationRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nVisibility of the <code>CreationRow<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:apply apply} event of this <code>sap.ui.mdc.table.CreationRow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.table.CreationRow<\/code> itself.\n\nThe event is fired when the corresponding keyboard shortcut or the apply button of the toolbar are pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.CreationRow","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.table.CreationRow<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setApplyEnabled":{"!description":"Sets a new value for property {@link #getApplyEnabled applyEnabled}.\n\nIf set to <code>false<\/code>, the {@link #event:apply apply} event is not fired. The corresponding keyboard shortcut and the apply button of the toolbar are disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bApplyEnabled?: Boolean) -> sap.ui.mdc.table.CreationRow","parameters":{"bApplyEnabled":"type: boolean, description: New value for property <code>applyEnabled<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","getApplyEnabled":{"!description":"Gets current value of property {@link #getApplyEnabled applyEnabled}.\n\nIf set to <code>false<\/code>, the {@link #event:apply apply} event is not fired. The corresponding keyboard shortcut and the apply button of the toolbar are disabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.CreationRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireApply":{"!description":"Fires event {@link #event:apply apply} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getBusy":{"!description":"Gets current value of property {@link #getBusy busy}.\n\nDetermines whether the <code>sap.ui.mdc.table.CreationRow<\/code> and its inner control are in a busy state.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>CreationRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getApplyEnabled applyEnabled} : boolean (default: true)<\/li>\n<li>{@link #getBusy busy} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:apply apply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/table/CreationRow","!helpDescription":"Row that allows the user to enter data in a row-shaped form if the {@link sap.ui.mdc.TableType TableType} is \"<code>Table<\/code>\". The form elements are aligned with the columns of the table and are created automatically based on the {@link sap.ui.mdc.table.Column#getCreationTemplate creationTemplate} aggregation of the {@link sap.ui.mdc.table.Column}.","detachApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:apply apply} event of this <code>sap.ui.mdc.table.CreationRow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.table.CreationRow","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}}},"sap.ui.mdc.FilterBarDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.FilterBarDelegate"},"sap.ui.mdc.field.FieldMultiInput":{"!description":"The <code>FieldMultiInput<\/code> control is used to render a multi-input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldMultiInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FieldMultiInput<\/code>.\n\nThe <code>FieldMultiInput<\/code> control enhances the {@link sap.m.MultiInput MultiInput} control to add ARIA attributes\nand other {@link sap.ui.mdc.field.FieldBase FieldBase}-specific logic.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAriaAttributes ariaAttributes} : object (default: {})<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.MultiInput#constructor sap.m.MultiInput}\ncan be used as well.","!module":"sap/ui/mdc/field/FieldMultiInput","!helpDescription":"The <code>FieldMultiInput<\/code> control is used to render a multi-input field inside a control based on {@link sap.ui.mdc.field.FieldBase FieldBase}.","setAriaAttributes":{"!description":"Sets a new value for property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAriaAttributes?: Object) -> sap.ui.mdc.field.FieldMultiInput","parameters":{"oAriaAttributes":"type: object, description: New value for property <code>ariaAttributes<\/code>"}},"!proto":"sap.m.MultiInput","getAriaAttributes":{"!description":"Gets current value of property {@link #getAriaAttributes ariaAttributes}.\n\nSets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!category":"class"},"sap.ui.mdc.field.FieldValueHelpContentWrapperBase":{"getKeyForText":{"!description":"Determines the key for an given description.\n\nAs the description might change (uppercase), an object with key and description can be returned.","!static":false,"!category":"function","!type":"fn(sText: String, oInParameters: sap.ui.model.Filter, bNoRequest: Boolean, bCaseSensitive: Boolean) -> Object | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"bCaseSensitive":"type: boolean, description: If <code>true<\/code>, the filtering is case-sensitive","oInParameters":"type: sap.ui.model.Filter, description: In parameters for the key (as a key must not be unique.)","sText":"type: string, description: Description","bNoRequest":"type: boolean, description: If <code>true<\/code>, the check must be only done on existing content (table items). Otherwise a backend request could be triggered if needed"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.core.Element","getAsyncKeyText":{"!description":"Checks if the field help supports asynchronous loading for <code>getKeyForText<\/code> and <code>getTextForKey<\/code>.\n\nIf skey or description can be loaded asynchronously, it doesn't depend on the content of the table or filtering. So in this case no <code>dataUpdate<\/code> event for the field is needed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","fieldHelpClose":{"!description":"This function is called if the field help is closed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"fieldHelpOpen":{"!description":"This function is called if the field help is opened. Here the wrapper can focus on the selected item or do similar things.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened as suggestion or dialog"}},"getKeyAndText":{"!description":"Determines the key for a given description.\n\nAs the description might change (uppercase), an object with key and description can be returned.","!static":false,"!category":"function","!type":"fn(vKey: Object, sText: String, oInParameters: Object, oOutParameters: Object, bCaseSensitive: Boolean) -> sap.ui.mdc.field.FieldHelpItem | Promise<sap.ui.mdc.field.FieldHelpItem>","parameters":{"bCaseSensitive":"type: boolean, description: If <code>true<\/code>, the filtering is case-sensitive","oInParameters":"type: object, description: In parameters for the key (as a key does not have to be unique.)","sText":"type: string, description: Description","oOutParameters":"type: object, description: Out parameters for the key (as a key does not have to be unique.)","vKey":"type: any, description: Parsed value used for key determination"}},"enableShowAllItems":{"!description":"Checks if a ShoWAllItems-Footer should be created in the suggestion popover which will be shown if further selectable items are available.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSuggestionContent":{"!description":"Returns the content shown in the value help suggestion popup.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!constructorDescription":"Constructor for a new <code>FieldValueHelpContentWrapperBase<\/code>.\n\nThe <code>FieldValueHelp<\/code> element supports different types of content. To map the content control\nAPI to the <code>FieldValueHelp<\/code> element, a wrapper is needed. This base class just defines the API.\n\n<b>Note:<\/b> All events and functions must only be used by the corresponding field help.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedItems selectedItems} : object[] (default: []) (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dataUpdate dataUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getSelectedItems":{"!description":"Gets current value of property {@link #getSelectedItems selectedItems}.\n\nThe selected items.\n\nAn item is an object with the properties <code>key<\/code>, <code>description<\/code>, <code>inParameters<\/code> and <code>outParameters<\/code>.\n\n<b>Note:<\/b> This property must only be set by the <code>FieldValueHelp<\/code> element, not by the application.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getDialogContent":{"!description":"Returns the content shown in the value help dialog.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself.\n\nThis event is fired after a selection has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Base type for <code>FieldValueHelp<\/code> content control wrapper.","detachDataUpdate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"navigate":{"!description":"Triggers navigation of the content.","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (for example, 1 means next item, -1 means previous item)"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.FieldValueHelpContentWrapperBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"isSuspended":{"!description":"Checks if the <code>ListBinding<\/code> of the wrapper has been suspended.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireDataUpdate":{"!description":"Fires event {@link #event:dataUpdate dataUpdate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeFocus":{"!description":"The focus visualization of the table needs to be removed as the user starts typing into the field.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase"},"getListBinding":{"!description":"Returns the <code>ListBinding<\/code> used for the field help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.ListBinding"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpContentWrapperBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getFilterEnabled":{"!description":"Returns <code>true<\/code> if filtering of the content is supported.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSelectedItems":{"!description":"Sets a new value for property {@link #getSelectedItems selectedItems}.\n\nThe selected items.\n\nAn item is an object with the properties <code>key<\/code>, <code>description<\/code>, <code>inParameters<\/code> and <code>outParameters<\/code>.\n\n<b>Note:<\/b> This property must only be set by the <code>FieldValueHelp<\/code> element, not by the application.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectedItems?: [Object]) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"sSelectedItems":"type: object[], description: New value for property <code>selectedItems<\/code>"}},"attachDataUpdate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dataUpdate dataUpdate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself.\n\nThis event is fired when the data of the field help is changed.\n\nThis is needed for the <code>FieldValueHelp<\/code> element to update the popup or dialog. This might be needed to trigger an update for formatting a key with its description in the connected field.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/mdc/field/FieldValueHelpContentWrapperBase","!helpDescription":"Base type for <code>FieldValueHelp<\/code> content control wrapper.","getTextForKey":{"!description":"Determines the description for n given key.\n\nAs the key might change (uppercase), an object with key and description can be returned.","!static":false,"!category":"function","!type":"fn(vKey: Object, oInParameters: sap.ui.model.Filter, oOutParameters: sap.ui.model.Filter, bNoRequest: Boolean, bCaseSensitive: Boolean) -> String | sap.ui.mdc.field.FieldHelpItem | Promise","parameters":{"bCaseSensitive":"type: boolean, description: If <code>true<\/code>, the filtering is case-sensitive","oInParameters":"type: sap.ui.model.Filter, description: In parameters for the key (as a key must not be unique.)","oOutParameters":"type: sap.ui.model.Filter, description: Out parameters for the key (as a key must not be unique.)","bNoRequest":"type: boolean, description: If <code>true<\/code>, the check must be only done on existing content (table items). Otherwise a backend request could be triggered if needed","vKey":"type: any, description: Key"}},"applyFilters":{"!description":"Applies the entered filters and search string to the content control (table).\n\nAs the way how filters and search are applied depends on the <code>ListBinding<\/code> and the used content control, this needs to be done in the wrapper.\n\nIf the <code>ListBinding<\/code> in the wrapper is suspended, it must be resumed in this function after setting the filters. It will not be resumed in the <code>FieldValueHelp<\/code> element. There <code>applyFilters<\/code> is only called if the filters should really be set.","!static":false,"!category":"function","!type":"fn(aFilters: [sap.ui.model.Filter], sSearch: String)","parameters":{"sSearch":"type: string, description: Search string (for $search request)","aFilters":"type: sap.ui.model.Filter[], description: Filter objects"}},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself.\n\nThis event is fired when content is navigated.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"dispose":{"!description":"Disposes the wrapper. This method should clean up entities created during initialize","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean)","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened as suggestion or dialog"}},"initialize":{"!description":"Initializes the wrapper. This is called if the <code>FieldValueHelp<\/code> element is opened. Here modules should be loaded that are only needed if the help is open.","!static":false,"!category":"function","!type":"fn(bSuggestion: Boolean) -> this | Promise","parameters":{"bSuggestion":"type: boolean, description: Flag if field help is opened as suggestion or dialog"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.mdc.field.FieldValueHelpContentWrapperBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.FieldValueHelpContentWrapperBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getAllItemsShown":{"!description":"Checks if the shown content currently displays all relevant values","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.IFilter":{"!description":"Interface for controls or entities which can serve as filters in the <code>sap.ui.mdc.Table<\/code> & <code>sap.ui.mdc.Chart<\/code>.\n\nThe following methods need to be implemented:\n\n<ul> <li><code>getConditions<\/code> - Part of the {@link sap.ui.mdc.IFilterSource} interface.<\/li> <li><code>validate<\/code> - The <code>validate<\/code> method should return a promise which resolves after the IFilter interface has handled its inner validation. The <code>getConditions<\/code> method will be called subsequently by the filtered control.<\/li> <li><code>getSearch<\/code> - <b>Note:<\/b> The <code>getSearch<\/code> method can optionally be implemented and should return a string for approximate string matching implemented in the backend.<\/li> <\/ul>\n\nThe following events need to be implemented:\n\n<ul> <li><code>search<\/code> - This event should be fired once a filtering should be executed on the IFilter using control.<\/li> <li><code>filtersChanged<\/code> - <b>Note:<\/b> The <code>filtersChanged<\/code> event can optionally be implemented and should be fired whenever a filter value has changed. This event will be used to display an overlay on the IFilter consuming control.<\/li> <\/ul>","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.field.FieldValueHelpDelegate":{"!description":"Delegate class for sap.ui.mdc.field.FieldValueHelp.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","executeSearch":{"!description":"Executes a search in a <code>ListBinding<\/code>.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding, sSearch: String)","parameters":{"sSearch":"type: string, description: Search string","oPayload":"type: object, description: Payload for delegate","oListBinding":"type: sap.ui.model.ListBinding, description: ListBinding"}},"checkBindingsPending":{"!description":"Checks if at least one <code>PropertyBinding<\/code> is waiting for an update. As long as the value has not been set for <code>PropertyBinding<\/code>, <code>FieldValueHelp<\/code> needs to wait.\n\nThis check is used when selecting the description for a key if in parameters are used. The description can only be determined if the values of the in parameters are known.","!static":true,"!category":"function","!type":"fn(oPayload: Object, aBindings: [sap.ui.model.PropertyBinding]) -> null | Promise","parameters":{"oPayload":"type: object, description: Payload for delegate","aBindings":"type: sap.ui.model.PropertyBinding[], description: <code>PropertyBinding<\/code> array to check"}},"!module":"sap/ui/mdc/field/FieldValueHelpDelegate","!helpDescription":"Delegate class for sap.ui.mdc.field.FieldValueHelp.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","executeFilter":{"!description":"Executes a filter in a <code>ListBinding<\/code>.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding, oFilter: sap.ui.model.Filter, fnCallback: fn(), iRequestedItems: Number)","parameters":{"iRequestedItems":"type: int, description: Number of requested items","oFilter":"type: sap.ui.model.Filter, description: Filter","oPayload":"type: object, description: Payload for delegate","fnCallback":"type: function, description: Callback function after result has been received","oListBinding":"type: sap.ui.model.ListBinding, description: List binding"}},"!proto":"sap.ui.base.Object","determineSearchSupported":{"!description":"Requests to set the <code>filterFields<\/code> property of the <code>FieldValueHelp<\/code> element.\n\nThis function is called when the field help is opened for suggestion. If no search is supported, content controls are not needed right now as the field help is not opened in this case.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.field.FieldValueHelp) -> Promise","parameters":{"oFieldHelp":"type: sap.ui.mdc.field.FieldValueHelp, description: Field help instance","oPayload":"type: object, description: Payload for delegate"}},"adjustSearch":{"!description":"Changes the search string.\n\nIf <code>$search<\/code> is used, depending on which back-end service is used, the search string might need to be escaped.","!static":true,"!category":"function","!type":"fn(oPayload: Object, bTypeahead: Boolean, sSearch: String) -> String","parameters":{"sSearch":"type: string, description: Search string","oPayload":"type: object, description: Payload for delegate","bTypeahead":"type: boolean, description: <code>true<\/code> if the search is called for a type-ahead"}},"!category":"class","checkListBindingPending":{"!description":"Checks if the <code>ListBinding<\/code> is waiting for an update. As long as the context has not been set for <code>ListBinding<\/code>, <code>FieldValueHelp<\/code> needs to wait.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding) -> Boolean | Promise<boolean>","parameters":{"oPayload":"type: object, description: Payload for delegate","oListBinding":"type: sap.ui.model.ListBinding, description: <code>ListBinding<\/code> to check"}},"isSearchSupported":{"!description":"Checks if a <code>ListBinding<\/code> supports $Search.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oListBinding: sap.ui.model.ListBinding) -> Boolean","parameters":{"oPayload":"type: object, description: Payload for delegate","oListBinding":"type: sap.ui.model.ListBinding, description: ListBinding"}}},"sap.ui.mdc.field.FieldHelpBaseDelegate":{"!description":"Delegate class for sap.ui.mdc.field.FieldHelpBase.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/field/FieldHelpBaseDelegate","!helpDescription":"Delegate class for sap.ui.mdc.field.FieldHelpBase.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!proto":"sap.ui.base.Object","!category":"class","contentRequest":{"!description":"Requests the content of the field help.\n\nThis function is called when the field help is opened or a key or description is requested.\n\nSo, depending on the field help control used, all content controls and data need to be assigned. Once they are assigned and the data is set, the returned <code>Promise<\/code> needs to be resolved. Only then does the field help continue opening or reading data.","!static":true,"!category":"function","!type":"fn(oPayload: Object, oFieldHelp: sap.ui.mdc.base.FieldHelpBase, bSuggestion: Boolean, oProperties: Object) -> Promise","parameters":{"oFieldHelp":"type: sap.ui.mdc.base.FieldHelpBase, description: Field help instance","bSuggestion":"type: boolean, description: Field help is called for suggestion","oPayload":"type: object, description: Payload for delegate","oProperties":"type: object, description: Properties depending on the used FieldHelp (e.g. FieldValueHelp)"}}},"sap.ui.mdc.filterbar.vh.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.vh.FilterBar"},"sap.ui.mdc.field":{"fieldWidth":{"!description":"This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.","!category":"enum","!type":"sap.ui.core.CSSSize"},"DefineConditionPanel":"sap.ui.mdc.field.DefineConditionPanel_obj","dateFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> should be used for date/time inputs and formating.<br>Only used if type=date and no datepicker is available. The data is displayed and the user input is parsed according to this format. <b>Note:<\/b> The value property is always of the form RFC 3339 (YYYY-MM-dd).","!category":"enum","!type":"String"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"enableMultiLineMode":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.58 Replaced with N-more/N-items labels, which work in all cases.<br>If set to true, the MultiInput will be displayed in multi-line display mode. In multi-line display mode, all tokens can be fully viewed and easily edited in the MultiInput. The default value is false. <b>Note:<\/b> This property does not take effect on smartphones or when the editable property is set to false. <b>Caution:<\/b> Do not enable multi-line mode in tables and forms.","!category":"enum","!type":"Boolean"},"additionalText":{"!description":"Some additional text of type string, optionally to be displayed along with this item.","!category":"enum","!type":"String"},"FieldValueHelpMdcTableWrapper":"sap.ui.mdc.field.FieldValueHelpMdcTableWrapper_obj","filterFields":{"!description":"The fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.","!category":"enum","!type":"String"},"type":{"!description":"HTML type of the internal <code>input<\/code> tag (e.g. Text, Number, Email, Phone). The particular effect of this property differs depending on the browser and the current language settings, especially for the type Number.<br> This parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br> Only the default value <code>sap.m.InputType.Text<\/code> may be used in combination with data model formats. <code>sap.ui.model<\/code> defines extended formats that are mostly incompatible with normal HTML representations for numbers and dates.","!category":"enum","!type":"sap.m.InputType"},"_ariaAttributes":{"!description":"Sets the ARIA attributes added to the inner control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between the field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established (e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"emptyIndicatorMode":{"!description":"Specifies if an empty indicator should be displayed when there is no token.","!category":"enum","!type":"sap.m.EmptyIndicatorMode"},"hiddenTokensCount":{"!description":"Defines the count of hidden tokens if any. If this property is set to 0, the n-More indicator will not be shown.","!category":"enum","!type":"Number"},"validateInput":{"!description":"If this property is set, the user input is validated against the field help. If no entry is found for the user input, an error occurs.\n\nIf this property is not set, the user input is still checked against the field help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)","!category":"enum","!type":"Boolean"},"enableSuggestionsHighlighting":{"!description":"Specifies whether the suggestions highlighting is enabled.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"FieldBase":"sap.ui.mdc.field.FieldBase_obj","maxTokens":{"!description":"The max number of tokens that is allowed in MultiInput.","!category":"enum","!type":"Number"},"fixedValue":{"!description":"Fixed value which is set on the <code>OutParameter<\/code> element.\n\n<b>Note:<\/b> This property is only used if <code>helpPath<\/code> is not set.","!category":"enum","!type":"Object"},"text":{"!description":"Displayed text of the token.","!category":"enum","!type":"String"},"maxWidth":{"!description":"Defines the maximum width of the Tokenizer.","!category":"enum","!type":"sap.ui.core.CSSSize"},"height":{"!description":"The height","!category":"enum","!type":"sap.ui.core.CSSSize"},"showFilterbar":{"!description":"If set to <code>true<\/code>, the <code>FilterBar<\/code> area is shown. The <code>FilterBar<\/code> must be assigned using <code>setFilterBar<\/code>.","!category":"enum","!type":"Boolean"},"suggestionRowValidator":{"!description":"Defines the validation callback function called when a suggestion row gets selected.","!category":"enum","!type":"Object"},"MultiValueFieldItem":"sap.ui.mdc.field.MultiValueFieldItem_obj","editableParent":{"!description":"Indicates the editable status of the token's parent (Tokenizer). If it is set to <code>true<\/code>, the ARIA attributes of the token are updated accordingly.","!category":"enum","!type":"Boolean"},"ConditionsType":"sap.ui.mdc.field.ConditionsType_obj","DynamicDateRangeConditionsType":"sap.ui.mdc.field.DynamicDateRangeConditionsType_obj","conditions":{"!description":"Sets the conditions that represent the selected values of the help.","!category":"enum","!type":"[Object]"},"setsize":{"!description":"Indicates the count of the token. Used for aria attributes.","!category":"enum","!type":"Number"},"FieldValueHelpContentWrapperBase":"sap.ui.mdc.field.FieldValueHelpContentWrapperBase_obj","textFormatter":{"!description":"Defines the display text formatter function.","!category":"enum","!type":"Object"},"displayBlock":{"!description":"Whether the CSS display should be set to \"block\".","!category":"enum","!type":"Boolean"},"ListFieldHelpItem":"sap.ui.mdc.field.ListFieldHelpItem_obj","keyPath":{"!description":"The path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.","!category":"enum","!type":"String"},"icon":{"!description":"The icon belonging to this list item instance. This can be a URI to an image or an icon font URI.","!category":"enum","!type":"String"},"enabled":{"!description":"Enabled items can be selected.","!category":"enum","!type":"Boolean"},"groupKey":{"!description":"Key of the group for what the items are grouped","!category":"enum","!type":"Object"},"delegate":{"!description":"Defines the module path of the metadata delegate.","!category":"enum","!type":"Object"},"InParameter":"sap.ui.mdc.field.InParameter_obj","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"_semanticFormValue":{"!description":"Changed when tokens are changed. The value for sap.ui.core.ISemanticFormContent interface.","!category":"enum","!type":"String"},"ConditionFieldHelp":"sap.ui.mdc.field.ConditionFieldHelp_obj","showTableSuggestionValueHelp":{"!description":"For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\n<b>Note:<\/b> If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.","!category":"enum","!type":"Boolean"},"filterList":{"!description":"If set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.","!category":"enum","!type":"Boolean"},"CustomFieldInfo":"sap.ui.mdc.field.CustomFieldInfo_obj","key":{"!description":"Key of the token.","!category":"enum","!type":"String"},"FieldValueHelpMTableWrapper":"sap.ui.mdc.field.FieldValueHelpMTableWrapper_obj","effectiveShowClearIcon":{"!description":"Specifies whether the clear icon should be shown/hidden on user interaction.","!category":"enum","!type":"Boolean"},"TokenizerDisplay":"sap.ui.mdc.field.TokenizerDisplay_obj","dataTypeFormatOptions":{"!description":"The format options of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"dataTypeConstraints":{"!description":"The constraints of the type specified in <code>dataType<\/code>.","!category":"enum","!type":"Object"},"display":{"!description":"Defines whether the value and/or description of the field is shown and in what order.","!category":"enum","!type":"sap.ui.mdc.enum.FieldDisplay"},"enableTableAutoPopinMode":{"!description":"Enables the <code>autoPopinMode<\/code> of <code>sap.m.Table<\/code>, when the input has tabular suggestions. <b>Note:<\/b> The <code>autoPopinMode<\/code> overwrites the <code>demandPopin<\/code> and the <code>minScreenWidth<\/code> properties of the <code>sap.m.Column<\/code>. When setting, <code>enableTableAutoPopinMode<\/code>, from true to false, the application must reconfigure the <code>demandPopin<\/code> and <code>minScreenWidth<\/code> properties of the <code>sap.m.Column<\/code> control by itself.","!category":"enum","!type":"Boolean"},"truncated":{"!description":"Indicates if the token's text should be truncated.","!category":"enum","!type":"Boolean"},"MultiValueFieldDelegate":"sap.ui.mdc.field.MultiValueFieldDelegate_obj","TokenDisplay":"sap.ui.mdc.field.TokenDisplay_obj","renderMode":{"!description":"Defines the mode that the Tokenizer will use: <ul> <li><code>sap.m.TokenizerRenderMode.Loose<\/code> mode shows all tokens, no matter the width of the Tokenizer<\/li> <li><code>sap.m.TokenizerRenderMode.Narrow<\/code> mode forces the Tokenizer to show only as much tokens as possible in its width and add an n-More indicator<\/li> <\/ul>","!category":"enum","!type":"String"},"ValueHelpPanel":"sap.ui.mdc.field.ValueHelpPanel_obj","textFormatMode":{"!description":"Defines the display text format mode.","!category":"enum","!type":"sap.m.InputTextFormatMode"},"width":{"!description":"The width","!category":"enum","!type":"sap.ui.core.CSSSize"},"selectedItems":{"!description":"The selected items.\n\nAn item is an object with the properties <code>key<\/code>, <code>description<\/code>, <code>inParameters<\/code> and <code>outParameters<\/code>.\n\n<b>Note:<\/b> This property must only be set by the <code>FieldValueHelp<\/code> element, not by the application.","!category":"enum","!type":"[Object]"},"valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"descriptionPath":{"!description":"The path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.","!category":"enum","!type":"String"},"valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!category":"enum","!type":"String"},"valueHelpIconSrc":{"!description":"Set custom value help icon.","!category":"enum","!type":"sap.ui.core.URI"},"showSuggestion":{"!description":"If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.","!category":"enum","!type":"Boolean"},"_fieldHelpEnabled":{"!description":"Internal property to bind the <code>showValueHelp<\/code> property of the internal <code>Input<\/code> control.","!category":"enum","!type":"Boolean"},"FieldMultiInput":"sap.ui.mdc.field.FieldMultiInput_obj","mode":{"!description":"Update mode of the <code>OutParameter<\/code> element.","!category":"enum","!type":"sap.ui.mdc.enum.OutParameterMode"},"OutParameter":"sap.ui.mdc.field.OutParameter_obj","FieldInfoBase":"sap.ui.mdc.field.FieldInfoBase_obj","valueHelpOnly":{"!description":"If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect. In this scenario, the <code>showItems<\/code> API will not work.","!category":"enum","!type":"Boolean"},"selected":{"!description":"Indicates the current selection status of the token.","!category":"enum","!type":"Boolean"},"maxConditions":{"!description":"Sets the maximum amount of conditions that are allowed for this field.\n\nThe default value of -1 indicates that an unlimited amount of conditions can be defined.\n\n<b>Note<\/b> If the data type used doesn't support multiple conditions, an error is thrown.","!category":"enum","!type":"Number"},"FieldHelpBaseDelegate":"sap.ui.mdc.field.FieldHelpBaseDelegate_obj","ListFieldHelp":"sap.ui.mdc.field.ListFieldHelp_obj","startSuggestion":{"!description":"Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input.\n\n<b>Note:<\/b> When it's set to 0, suggest event is fired when input with no text gets focus. In this case no suggestion popup will open.","!category":"enum","!type":"Number"},"inputOK":{"!description":"If set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.","!category":"enum","!type":"Boolean"},"CustomFieldHelp":"sap.ui.mdc.field.CustomFieldHelp_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"initialValueFilterEmpty":{"!description":"If set, an initial value of <code>InParameter<\/code> starts a filtering for the <code>empty<\/code> operator.\n\n<b>Note:<\/b> This property must not be used for {@link sap.ui.mdc.FilterField FilterField} and if bound to {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. In this case, a filtering for the empty operator must be defined by the assigned conditions.\n\n<b>Note:<\/b> This property must only be set if the data type used supports a filtering for the empty operator.\n\n<b>Note:<\/b> Do not set this property if an empty string is a valid key for the <code>InParameter<\/code> used.","!category":"enum","!type":"Boolean"},"showTokenizer":{"!description":"If set to <code>true<\/code>, a tokenizer is shown.","!category":"enum","!type":"Boolean"},"textAlign":{"!description":"Defines the horizontal alignment of the text that is shown inside the input field.","!category":"enum","!type":"sap.ui.core.TextAlign"},"ariaAttributes":{"!description":"Sets the ARIA attributes added to the <code>MultiInput<\/code> control.\n\nThe object contains ARIA attributes in an <code>aria<\/code> node. Additional attributes, such as <code>role<\/code>, <code>autocomplete<\/code> or <code>valueHelpEnabled<\/code>, are added on root level.","!category":"enum","!type":"Object"},"caseSensitive":{"!description":"If this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"dataType":{"!description":"The type of data handled by the field. This type is used to parse, format, and validate the value.","!category":"enum","!type":"String"},"formatOptions":{"!description":"The <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.","!category":"enum","!type":"Object"},"separateSuggestions":{"!description":"Specifies whether to display separators in tabular suggestions.","!category":"enum","!type":"Boolean"},"filterValue":{"!description":"The value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>FieldHelp<\/code> element supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>FieldHelp<\/code> element belongs to, not by the application.","!category":"enum","!type":"String"},"editMode":{"!description":"Determines whether the field is editable, read-only, or disabled.","!category":"enum","!type":"sap.ui.mdc.enum.EditMode"},"BoolFieldHelp":"sap.ui.mdc.field.BoolFieldHelp_obj","name":{"!description":"The name to be used in the HTML code (for example, for HTML forms that send data to the server via submission).","!category":"enum","!type":"String"},"maxSuggestionWidth":{"!description":"If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field. <b>Note:<\/b> The value will be ignored if the actual width of the input field is larger than the specified parameter value.","!category":"enum","!type":"sap.ui.core.CSSSize"},"_enableOK":{"!description":"Internal property to bind the OK button to enable or disable it.","!category":"enum","!type":"Boolean"},"ConditionType":"sap.ui.mdc.field.ConditionType_obj","maxLength":{"!description":"Maximum number of characters. Value '0' means the feature is switched off. This parameter is not compatible with the input type <code>sap.m.InputType.Number<\/code>. If the input type is set to <code>Number<\/code>, the <code>maxLength<\/code> value is ignored.","!category":"enum","!type":"Number"},"useFirstMatch":{"!description":"If set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.","!category":"enum","!type":"Boolean"},"showValueHelp":{"!description":"If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.","!category":"enum","!type":"Boolean"},"description":{"!description":"Description of the item.","!category":"enum","!type":"String"},"!category":"namespace","title":{"!description":"Title text that appears in the dialog header.","!category":"enum","!type":"String"},"FieldHelpBase":"sap.ui.mdc.field.FieldHelpBase_obj","textDirection":{"!description":"This property specifies the text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"groupText":{"!description":"Text of the group for what the items are grouped","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"posinset":{"!description":"Indicates the position of a token. Used for aria attributes.","!category":"enum","!type":"Number"},"_delimiter":{"!description":"_delimiter : String","!category":"enum","!type":"String"},"placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value.","!category":"enum","!type":"String"},"value":{"!description":"The value of the in parameter.\n\nHere the data of the model can be bound. In the {@link sap.ui.mdc.FilterField FilterField} case this is the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}.\n\n<b>Note:<\/b> Here we recommend one-way-binding.","!category":"enum","!type":"Object"},"selectedKey":{"!description":"Defines the key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!category":"enum","!type":"String"},"multipleLines":{"!description":"If set, the <code>Field<\/code> is rendered using a multi-line control.\n\nThis property only affects types that support multiple lines.\n\nThis property is only used for single-value fields.\n\n<b>Note<\/b> If the data type used doesn't support multiple lines an error is thrown.","!category":"enum","!type":"Boolean"},"valueLiveUpdate":{"!description":"Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).\n\n<b>Note:<\/b> When set to true and the value of the Input control is bound to a model, the change event becomes obsolete and will not be fired, as the value in the model will be updated each time the user provides input. In such cases, subscription to the liveChange event is more appropriate, as it corresponds to the way the underlying model gets updated.","!category":"enum","!type":"Boolean"},"autocomplete":{"!description":"Specifies whether autocomplete is enabled. Works only if \"showSuggestion\" property is set to true. <b>Note:<\/b> The autocomplete feature is disabled on Android devices due to a OS specific issue.","!category":"enum","!type":"Boolean"},"editable":{"!description":"true if tokens shall be editable otherwise false","!category":"enum","!type":"Boolean"},"_filterBarVisible":{"!description":"Internal property to bind corresponding controls to the visibility of the <code>FilterBar<\/code> section","!category":"enum","!type":"Boolean"},"showClearIcon":{"!description":"Specifies whether clear icon is shown. Pressing the icon will clear input's value and fire the change and liveChange events.","!category":"enum","!type":"Boolean"},"FieldInput":"sap.ui.mdc.field.FieldInput_obj","FieldValueHelpUITableWrapper":"sap.ui.mdc.field.FieldValueHelpUITableWrapper_obj","label":{"!description":"Defines the label text for the field.\n\nThis can be used by {@link sap.ui.mdc.FilterBar FilterBar} or {@link sap.ui.layout.form.Form Form} controls to create a {@link sap.m.Label Label} control for the field.","!category":"enum","!type":"String"},"helpPath":{"!description":"Name of the field in the <code>ListBinding<\/code> used in the value help.\n\nThis is needed to define the filter for the corresponding field in the help.","!category":"enum","!type":"String"},"showValueStateMessage":{"!description":"Indicates whether the value state message should be shown or not.","!category":"enum","!type":"Boolean"},"showConditionPanel":{"!description":"Determines if a condition panel is shown.","!category":"enum","!type":"Boolean"},"showEmptyIndicator":{"!description":"If set, an empty <code>Field<\/code> renders an empty-indicator in display mode.\n\nThis property only takes effect if <code>editMode<\/code> is set to <code>Display<\/code>.\n\n<b>Note<\/b> Empty means the <code>Field<\/code> holds no value. If an empty string is a valid value, the <code>Field<\/code> might show nothing, depending on the <code>display<\/code> settings and assigned description or <code>FieldHelp<\/code>.","!category":"enum","!type":"Boolean"},"FieldValueHelp":"sap.ui.mdc.field.FieldValueHelp_obj","FieldValueHelpDelegate":"sap.ui.mdc.field.FieldValueHelpDelegate_obj","noDialog":{"!description":"If set, the field help doesn't open a value help dialog, but just displays the content. It behaves like in the case of a suggestion but without any search.","!category":"enum","!type":"Boolean"},"filterSuggests":{"!description":"Defines whether to filter the provided suggestions before showing them to the user.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.Control_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Control with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Control"},"sap.ui.mdc.filterbar.aligned.FilterItemLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.aligned.FilterItemLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.layout.VerticalLayout.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.filterbar.aligned.FilterItemLayout"},"sap.ui.mdc.field.CustomFieldInfo":{"!description":"A field help used in the <code>FieldInfo<\/code> aggregation in <code>FieldBase<\/code> controls that allows you to add custom content.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.CustomFieldInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.CustomFieldInfo","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"!constructorDescription":"Constructor for a new CustomFieldInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldInfoBase#constructor sap.ui.mdc.field.FieldInfoBase}\ncan be used as well.","!module":"sap/ui/mdc/field/CustomFieldInfo","!helpDescription":"A field help used in the <code>FieldInfo<\/code> aggregation in <code>FieldBase<\/code> controls that allows you to add custom content.","getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the field information.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.field.FieldInfoBase","!category":"class","destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.CustomFieldInfo"}},"sap.ui.mdc.mixin.DelegateMixin":{"!description":"Enhances a given control prototype with consolidated asynchronous handling for delegate modules and their initialization.\n\nThe following methods are available:\n\n<ul> <li><code>awaitControlDelegate<\/code> - Provides access to the delegate initialization <code>Promise<\/code>.<\/li> <li><code>getControlDelegate<\/code> - Returns the delegate instance, if available.<\/li> <li><code>getPayload<\/code> - Returns the payload object set for the delegate property.<\/li> <li><code>getTypeUtil<\/code> - Returns the <code>typeUtil<\/code> made available by the delegate module<\/li> <li><code>initControlDelegate<\/code> - Loads and initializes the delegate module related to the enhanced control.<\/li> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <li><code>setDelegate<\/code><\/li> <\/ul>\n\nThe <code>prototype.init<\/code> wrapper creates the following instance fields:\n\n<ul> <li><code>bDelegateInitialized<\/code> - Indicator for the availability of delegates<\/li> <li><code>bDelegateLoading<\/code> - Indicates whether the initialization of delegate modules is triggered but not yet completed (loading necessary)<\/li> <\/ul>","getPayload":{"!description":"Returns the payload object set for the delegate property.","!static":"true","!category":"function","!type":"fn() -> Object"},"!module":"sap/ui/mdc/mixin/DelegateMixin","!helpDescription":"Enhances a given control prototype with consolidated asynchronous handling for delegate modules and their initialization.\n\nThe following methods are available:\n\n<ul> <li><code>awaitControlDelegate<\/code> - Provides access to the delegate initialization <code>Promise<\/code>.<\/li> <li><code>getControlDelegate<\/code> - Returns the delegate instance, if available.<\/li> <li><code>getPayload<\/code> - Returns the payload object set for the delegate property.<\/li> <li><code>getTypeUtil<\/code> - Returns the <code>typeUtil<\/code> made available by the delegate module<\/li> <li><code>initControlDelegate<\/code> - Loads and initializes the delegate module related to the enhanced control.<\/li> <li><code>initPropertyHelper<\/code> - Loads and initializes the property helper related to the enhanced control.<\/li> <li><code>awaitPropertyHelper<\/code> - Provides access to the property helper initialization <code>Promise<\/code>.<\/li> <li><code>getPropertyHelper<\/code> - Returns the property helper instance, if available.<\/li> <\/ul>\n\nAdditionally, the following methods are wrapped:\n\n<ul> <li><code>applySettings<\/code><\/li> <li><code>exit<\/code><\/li> <li><code>init<\/code><\/li> <li><code>setDelegate<\/code><\/li> <\/ul>\n\nThe <code>prototype.init<\/code> wrapper creates the following instance fields:\n\n<ul> <li><code>bDelegateInitialized<\/code> - Indicator for the availability of delegates<\/li> <li><code>bDelegateLoading<\/code> - Indicates whether the initialization of delegate modules is triggered but not yet completed (loading necessary)<\/li> <\/ul>","initControlDelegate":{"!description":"Loads and initializes the delegate module related to the enhanced control.","!static":"true","!category":"function","!type":"fn(oPreloadedModule?: Object) -> Promise<sap.ui.mdc.BaseDelegate>"},"getTypeUtil":{"!description":"Returns the <code>typeUtil<\/code> made available by a delegate module.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.util.TypeUtil"},"!category":"namespace","getControlDelegate":{"!description":"Returns the delegate instance, if available.","!static":"true","!category":"function","!type":"fn() -> sap.ui.mdc.BaseDelegate"},"awaitControlDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code>. <b>Note:<\/b> <code>initControlDelegate<\/code> must be called to start the delegate initialization","!static":"true","!category":"function","!type":"fn() -> Promise"}},"sap.ui.mdc.actiontoolbar.ActionToolbarAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.actiontoolbar.ActionToolbarAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.actiontoolbar.ActionToolbarAction"},"sap.ui.mdc.Chart_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Chart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Chart"},"sap.ui.mdc.Element_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Element with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Element"},"sap.ui.mdc.Table":{"setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nPersonalization options for the table.<br> <b>Note:<\/b> The order of the options does not influence the position on the UI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sP13nMode?: [sap.ui.mdc.TableP13nMode]) -> sap.ui.mdc.Table","parameters":{"sP13nMode":"type: sap.ui.mdc.TableP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.Table","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted"}},"destroyRowSettings":{"!description":"Destroys the rowSettings in the aggregation {@link #getRowSettings rowSettings}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nHeader text that is shown in the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader?: String) -> sap.ui.mdc.Table","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"destroyCreationRow":{"!description":"Destroys the creationRow in the aggregation {@link #getCreationRow creationRow}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"attachPaste":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:paste paste} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired when the user pastes content from the clipboard to the table.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"clearSelection":{"!description":"Clears the selection.","!static":false,"!category":"function","!type":"fn()"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired when the selection in the table is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEnableColumnResize":{"!description":"Gets current value of property {@link #getEnableColumnResize enableColumnResize}.\n\nDetermines whether column resizing is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A metadata-driven table to simplify the usage of existing tables, such as the <code>ResponsiveTable<\/code> and <code>GridTable<\/code> controls. The metadata needs to be provided via the {@link module:sap/ui/mdc/TableDelegate TableDelegate} implementation as {@link sap.ui.mdc.table.PropertyInfo}.","addColumn":{"!description":"Adds some column to the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.mdc.table.Column) -> sap.ui.mdc.Table","parameters":{"oColumn":"type: sap.ui.mdc.table.Column, description: The column to add; if empty, nothing is inserted"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"setSelectionMode":{"!description":"Sets a new value for property {@link #getSelectionMode selectionMode}.\n\nSelection mode of the table. Specifies whether single or multiple rows can be selected and how the selection can be extended. It may also influence the visual appearance.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode?: sap.ui.mdc.SelectionMode) -> sap.ui.mdc.Table","parameters":{"sSelectionMode":"type: sap.ui.mdc.SelectionMode, description: New value for property <code>selectionMode<\/code>"}},"setFilter":{"!description":"Sets the associated {@link #getFilter filter}.","!static":false,"!category":"function","!type":"fn(oFilter: sap.ui.core.ID | sap.ui.mdc.IFilter) -> sap.ui.mdc.Table","parameters":{"oFilter":"type: sap.ui.core.ID|sap.ui.mdc.IFilter, description: ID of an element which becomes the new target of this filter association; alternatively, an element instance may be given"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Table with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/mdc/Table","insertColumn":{"!description":"Inserts a column into the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.mdc.table.Column, iIndex: Number) -> sap.ui.mdc.Table","parameters":{"oColumn":"type: sap.ui.mdc.table.Column, description: The column to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the column should be inserted at; for a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value greater than the current size of the aggregation, the column is inserted at the last position"}},"fireRowPress":{"!description":"Fires event {@link #event:rowPress rowPress} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getType":{"!description":"Gets content of aggregation {@link #getType type}.\n\nType of the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.TableTypeBase | sap.ui.mdc.TableType"},"getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDetermines the text shown if the table has no data.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeaderVisible":{"!description":"Gets current value of property {@link #getHeaderVisible headerVisible}.\n\nDetermines whether the header text is shown in the table. Regardless of its value, the given header text is used to label the table correctly for accessibility purposes.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnableExport":{"!description":"Gets current value of property {@link #getEnableExport enableExport}.\n\nDetermines whether the table data export is enabled.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCreationRow":{"!description":"Sets the aggregated {@link #getCreationRow creationRow}.","!static":false,"!category":"function","!type":"fn(oCreationRow: sap.ui.mdc.table.CreationRow) -> sap.ui.mdc.Table","parameters":{"oCreationRow":"type: sap.ui.mdc.table.CreationRow, description: The creationRow to set"}},"setEnablePaste":{"!description":"Sets a new value for property {@link #getEnablePaste enablePaste}.\n\nDetermines whether the Paste button is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnablePaste?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnablePaste":"type: boolean, description: New value for property <code>enablePaste<\/code>"}},"isTableBound":{"!description":"Checks whether the table is bound.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRowSettings":{"!description":"Sets the aggregated {@link #getRowSettings rowSettings}.","!static":false,"!category":"function","!type":"fn(oRowSettings: sap.ui.mdc.table.RowSettings) -> sap.ui.mdc.Table","parameters":{"oRowSettings":"type: sap.ui.mdc.table.RowSettings, description: The rowSettings to set"}},"getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nAdditional/external actions available for the table.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getEnablePaste":{"!description":"Gets current value of property {@link #getEnablePaste enablePaste}.\n\nDetermines whether the Paste button is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to <code>TableDelegate<\/code> module that provides the required APIs to create table content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.ui.mdc.Table","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"}},"destroyQuickFilter":{"!description":"Destroys the quickFilter in the aggregation {@link #getQuickFilter quickFilter}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getRowBinding":{"!description":"Returns the row/items binding of the internal table.<br> <i>Note<\/i>: <li>Do not use this API to keep the reference of the binding.<\/li> <li>Also, do not use it to trigger sort/filter on the binding.<\/li>","!static":false,"!category":"function","!type":"fn() -> sap.ui.model.Binding"},"getRowSettings":{"!description":"Gets content of aggregation {@link #getRowSettings rowSettings}.\n\nSettings for the table rows.\n\n<b>Note:<\/b> Each time the properties of the settings are changed, they have to be applied again via <code>setRowSettings<\/code> for the changes to take effect.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.RowSettings"},"getCreationRow":{"!description":"Gets content of aggregation {@link #getCreationRow creationRow}.\n\nThis row can be used for user input to create new data if {@link sap.ui.mdc.TableType TableType} is \"<code>Table<\/code>\". <b>Note:<\/b> Once the binding supports creating transient records, this aggregation will be removed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.CreationRow"},"initialized":{"!description":"Returns a <code>Promise<\/code> that resolves once the table has been initialized after the creation and changing of its type.","!static":false,"!category":"function","!type":"fn() -> Promise"},"fireBeforeExport":{"!description":"Fires event {@link #event:beforeExport beforeExport} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnableExport":{"!description":"Sets a new value for property {@link #getEnableExport enableExport}.\n\nDetermines whether the table data export is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableExport?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnableExport":"type: boolean, description: New value for property <code>enableExport<\/code>"}},"getConditions":{"!description":"Returns the current filter conditions present on the table.","!static":false,"!category":"function","!type":"fn()"},"detachRowPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:rowPress rowPress} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.Table","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to <code>TableDelegate<\/code> module that provides the required APIs to create table content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. Once the required module is associated, this property might not be needed any longer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.Table","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getFilter":{"!description":"ID of the element which is the current target of the association {@link #getFilter filter}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"removeColumn":{"!description":"Removes a column from the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(vColumn: Number | String | sap.ui.mdc.table.Column) -> sap.ui.mdc.table.Column | null","parameters":{"vColumn":"type: int|string|sap.ui.mdc.table.Column, description: The column to remove or its index or id"}},"isGroupingEnabled":{"!description":"Checks whether group personalization is enabled.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getBusyIndicatorDelay":{"!description":"Gets current value of property {@link #getBusyIndicatorDelay busyIndicatorDelay}.\n\nThe delay in milliseconds after which the busy indicator is shown.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnableAutoColumnWidth":{"!description":"Sets a new value for property {@link #getEnableAutoColumnWidth enableAutoColumnWidth}.\n\nEnables automatic column width calculation based on metadata information if set to <code>true<\/code>. The column width calculation takes the type, column label, referenced properties, and many other metadata parameters into account. Providing a more precise <code>maxLength<\/code> value for the <code>String<\/code> type or <code>precision<\/code> value for numeric types can help this algorithm to produce better results. The calculated column widths can have a minimum of 3rem and a maximum of 20rem.\n\n<b>Note:<\/b> To customize the automatic column width calculation, the <code>visualSettings.widthSettings<\/code> key of the <code>PropertyInfo<\/code> can be used. To avoid the heuristic column width calculation for a particular column, the <code>visualSettings.widthSettings<\/code> key of the <code>PropertyInfo<\/code> must be set to <code>null<\/code>. This feature has no effect if the <code>width<\/code> property of the column is bound or its value is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableAutoColumnWidth?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnableAutoColumnWidth":"type: boolean, description: New value for property <code>enableAutoColumnWidth<\/code>"}},"setShowRowCount":{"!description":"Sets a new value for property {@link #getShowRowCount showRowCount}.\n\nDetermines whether the number of rows is shown along with the header text. If set to <code>false<\/code>, the number of rows is not shown on the user interface.<br> <b>Note:<\/b><br> For better performance dedicated OData requests should not be sent. The count mode must be configured either in the model or in the binding of the table.<br> This property can only be used if the back-end service supports row count.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRowCount?: Boolean) -> sap.ui.mdc.Table","parameters":{"bShowRowCount":"type: boolean, description: New value for property <code>showRowCount<\/code>"}},"detachPaste":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:paste paste} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"isAggregationEnabled":{"!description":"Checks whether aggregation personalization is enabled.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMultiSelectMode":{"!description":"Gets current value of property {@link #getMultiSelectMode multiSelectMode}.\n\nDefines the multi-selection mode for the control. If this property is set to the <code>Default<\/code> value, the <code>ResponsiveTable<\/code> type control renders the Select All checkbox in the column header, otherwise the Deselect All icon is rendered.\n\nThis property is used with the <code>selectionMode=\"Multi\"<\/code>.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.MultiSelectMode"},"setGroupConditions":{"!description":"Sets a new value for property {@link #getGroupConditions groupConditions}.\n\nDefines the group conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oGroupConditions: Object) -> sap.ui.mdc.Table","parameters":{"oGroupConditions":"type: object, description: New value for property <code>groupConditions<\/code>"}},"destroyType":{"!description":"Destroys the type in the aggregation {@link #getType type}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"attachRowPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:rowPress rowPress} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired when a row in the table is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"isFilteringEnabled":{"!description":"Checks whether filter personalization is enabled.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setThreshold":{"!description":"Sets a new value for property {@link #getThreshold threshold}.\n\nNumber of records to be requested from the model. If the <code>type<\/code> property is set to <code>ResponsiveTable<\/code>, then it refers to the {@link sap.m.ListBase#getGrowingThreshold growingThreshold} property of <code>ResponsiveTable<\/code>. If the <code>type<\/code> property is set to <code>Table<\/code>, then it refers to the {@link sap.ui.table.Table#getThreshold threshold} property of <code>GridTable<\/code>.<br> <b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the table uses the default value of the corresponding table types.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iThreshold?: Number) -> sap.ui.mdc.Table","parameters":{"iThreshold":"type: int, description: New value for property <code>threshold<\/code>"}},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.core.TitleLevel) -> sap.ui.mdc.Table","parameters":{"sHeaderLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"setQuickFilter":{"!description":"Sets the aggregated {@link #getQuickFilter quickFilter}.","!static":false,"!category":"function","!type":"fn(oQuickFilter: sap.ui.core.Control) -> sap.ui.mdc.Table","parameters":{"oQuickFilter":"type: sap.ui.core.Control, description: The quickFilter to set"}},"getSelectedContexts":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> [sap.ui.model.Context]"},"setAggregateConditions":{"!description":"Sets a new value for property {@link #getAggregateConditions aggregateConditions}.\n\nDefines the aggregate conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is exclusively used for handling SAPUI5 flexibility changes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAggregateConditions: Object) -> sap.ui.mdc.Table","parameters":{"oAggregateConditions":"type: object, description: New value for property <code>aggregateConditions<\/code>"}},"removeAllColumns":{"!description":"Removes all the controls from the aggregation {@link #getColumns columns}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.table.Column]"},"setVariant":{"!description":"Sets the aggregated {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn(oVariant: sap.ui.fl.variants.VariantManagement) -> sap.ui.mdc.Table","parameters":{"oVariant":"type: sap.ui.fl.variants.VariantManagement, description: The variant to set"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nSemantic level of the header. For more information, see {@link sap.m.Title#setLevel}.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"detachBeforeExport":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setDataStateIndicator":{"!description":"Sets the aggregated {@link #getDataStateIndicator dataStateIndicator}.","!static":false,"!category":"function","!type":"fn(oDataStateIndicator: sap.m.plugins.DataStateIndicator) -> sap.ui.mdc.Table","parameters":{"oDataStateIndicator":"type: sap.m.plugins.DataStateIndicator, description: The dataStateIndicator to set"}},"getDataStateIndicator":{"!description":"Gets content of aggregation {@link #getDataStateIndicator dataStateIndicator}.\n\n<code>DataStateIndicator<\/code> plugin that can be used to show binding-related messages.\n\n<b>Note:<\/b> The message filtering is not yet supported for this control. Therefore the {@link sap.m.plugins.DataStateIndicator#getEnableFiltering enableFiltering} property of the <code>DataStateIndicator<\/code> plugin must not be set to <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.plugins.DataStateIndicator"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Table.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVariant":{"!description":"Gets content of aggregation {@link #getVariant variant}.\n\n<code>VariantManagement<code> control for the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.fl.variants.VariantManagement"},"isSortingEnabled":{"!description":"Checks whether sort personalization is enabled.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getQuickFilter":{"!description":"Gets content of aggregation {@link #getQuickFilter quickFilter}.\n\nAdditional <code>Filter<\/code> for the table.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getShowPasteButton":{"!description":"Gets current value of property {@link #getShowPasteButton showPasteButton}.\n\nDetermines whether the Paste button is visible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setBusyIndicatorDelay":{"!description":"Sets a new value for property {@link #getBusyIndicatorDelay busyIndicatorDelay}.\n\nThe delay in milliseconds after which the busy indicator is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn(iBusyIndicatorDelay?: Number) -> sap.ui.mdc.Table","parameters":{"iBusyIndicatorDelay":"type: int, description: New value for property <code>busyIndicatorDelay<\/code>"}},"indexOfColumn":{"!description":"Checks for the provided <code>sap.ui.mdc.table.Column<\/code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.mdc.table.Column) -> Number","parameters":{"oColumn":"type: sap.ui.mdc.table.Column, description: The column whose index is looked for"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight?: sap.ui.core.CSSSize) -> sap.ui.mdc.Table","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"getGroupConditions":{"!description":"Gets current value of property {@link #getGroupConditions groupConditions}.\n\nDefines the group conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"A metadata-driven table to simplify the usage of existing tables, such as the <code>ResponsiveTable<\/code> and <code>GridTable<\/code> controls. The metadata needs to be provided via the {@link module:sap/ui/mdc/TableDelegate TableDelegate} implementation as {@link sap.ui.mdc.table.PropertyInfo}.","setMultiSelectMode":{"!description":"Sets a new value for property {@link #getMultiSelectMode multiSelectMode}.\n\nDefines the multi-selection mode for the control. If this property is set to the <code>Default<\/code> value, the <code>ResponsiveTable<\/code> type control renders the Select All checkbox in the column header, otherwise the Deselect All icon is rendered.\n\nThis property is used with the <code>selectionMode=\"Multi\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sMultiSelectMode?: sap.ui.mdc.MultiSelectMode) -> sap.ui.mdc.Table","parameters":{"sMultiSelectMode":"type: sap.ui.mdc.MultiSelectMode, description: New value for property <code>multiSelectMode<\/code>"}},"focusRow":{"!description":"Sets the focus on the row. If <code>bFirstInteractiveElement<\/code> is <code>true<\/code>, and there are interactive elements inside the row, sets the focus on the first interactive element. Otherwise sets the focus on the first data cell, if the type is <code>GridTableType<\/code>, and on the entire row, if the type is <code>ResponsiveTableType<\/code>. If the given index is not visible, the table scrolls to it automatically. In this case the same rules apply as in {@link #scrollToIndex}.","!static":false,"!category":"function","!type":"fn(iIndex: Number, bFirstInteractiveElement?: Boolean) -> Promise","parameters":{"bFirstInteractiveElement":"type: boolean, description: Indicates whether to set the focus on the first interactive element inside the row","iIndex":"type: number, description: The index of the row that is to be focused"}},"scrollToIndex":{"!description":"Scrolls the table to the row with the given index. Depending on the table type, this might cause additional requests. If the given index is -1, it will scroll to the end of the table based on the length of the underlying binding. If the length is not final, it will only scroll to the end of the current binding and might trigger a request for additional entries. This also applies in case of a responsive table with growing enabled.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> Promise","parameters":{"iIndex":"type: number, description: The index of the row that should be scrolled into the visible area"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setNoDataText":{"!description":"Sets a new value for property {@link #getNoDataText noDataText}.\n\nDetermines the text shown if the table has no data.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNoDataText: String) -> sap.ui.mdc.Table","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.mdc.Control","getSelectionMode":{"!description":"Gets current value of property {@link #getSelectionMode selectionMode}.\n\nSelection mode of the table. Specifies whether single or multiple rows can be selected and how the selection can be extended. It may also influence the visual appearance.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.SelectionMode"},"!category":"class","setEnableColumnResize":{"!description":"Sets a new value for property {@link #getEnableColumnResize enableColumnResize}.\n\nDetermines whether column resizing is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableColumnResize?: Boolean) -> sap.ui.mdc.Table","parameters":{"bEnableColumnResize":"type: boolean, description: New value for property <code>enableColumnResize<\/code>"}},"setHeaderVisible":{"!description":"Sets a new value for property {@link #getHeaderVisible headerVisible}.\n\nDetermines whether the header text is shown in the table. Regardless of its value, the given header text is used to label the table correctly for accessibility purposes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderVisible?: Boolean) -> sap.ui.mdc.Table","parameters":{"bHeaderVisible":"type: boolean, description: New value for property <code>headerVisible<\/code>"}},"destroyVariant":{"!description":"Destroys the variant in the aggregation {@link #getVariant variant}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"getColumns":{"!description":"Gets content of aggregation {@link #getColumns columns}.\n\nColumns of the table.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.table.Column]"},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nHeader text that is shown in the table.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowRowCount":{"!description":"Gets current value of property {@link #getShowRowCount showRowCount}.\n\nDetermines whether the number of rows is shown along with the header text. If set to <code>false<\/code>, the number of rows is not shown on the user interface.<br> <b>Note:<\/b><br> For better performance dedicated OData requests should not be sent. The count mode must be configured either in the model or in the binding of the table.<br> This property can only be used if the back-end service supports row count.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>MDCTable<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.TableP13nMode[] (default: [])<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getAutoBindOnInit autoBindOnInit} : boolean (default: true)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getHeaderVisible headerVisible} : boolean (default: true)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.ui.mdc.SelectionMode (default: None)<\/li>\n<li>{@link #getShowRowCount showRowCount} : boolean (default: true)<\/li>\n<li>{@link #getThreshold threshold} : int (default: -1)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getSortConditions sortConditions} : object<\/li>\n<li>{@link #getFilterConditions filterConditions} : object (default: {})<\/li>\n<li>{@link #getGroupConditions groupConditions} : object<\/li>\n<li>{@link #getAggregateConditions aggregateConditions} : object<\/li>\n<li>{@link #getEnableExport enableExport} : boolean (default: false)<\/li>\n<li>{@link #getBusyIndicatorDelay busyIndicatorDelay} : int (default: 100)<\/li>\n<li>{@link #getEnableColumnResize enableColumnResize} : boolean (default: true)<\/li>\n<li>{@link #getShowPasteButton showPasteButton} : boolean (default: false)<\/li>\n<li>{@link #getEnablePaste enablePaste} : boolean (default: true)<\/li>\n<li>{@link #getMultiSelectMode multiSelectMode} : sap.ui.mdc.MultiSelectMode (default: Default)<\/li>\n<li>{@link #getEnableAutoColumnWidth enableAutoColumnWidth} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getType type} : sap.ui.mdc.table.TableTypeBase|sap.ui.mdc.TableType<\/li>\n<li>{@link #getColumns columns} : sap.ui.mdc.table.Column[] (default)<\/li>\n<li>{@link #getCreationRow creationRow} : sap.ui.mdc.table.CreationRow<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getVariant variant} : sap.ui.fl.variants.VariantManagement<\/li>\n<li>{@link #getQuickFilter quickFilter} : sap.ui.core.Control<\/li>\n<li>{@link #getRowSettings rowSettings} : sap.ui.mdc.table.RowSettings<\/li>\n<li>{@link #getDataStateIndicator dataStateIndicator} : sap.m.plugins.DataStateIndicator<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFilter filter} : (sap.ui.core.ID | sap.ui.mdc.IFilter)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:rowPress rowPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeExport beforeExport} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:paste paste} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","setShowPasteButton":{"!description":"Sets a new value for property {@link #getShowPasteButton showPasteButton}.\n\nDetermines whether the Paste button is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPasteButton?: Boolean) -> sap.ui.mdc.Table","parameters":{"bShowPasteButton":"type: boolean, description: New value for property <code>showPasteButton<\/code>"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.mdc.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getCurrentState":{"!description":"Fetches the current state of the table (as a JSON) <b>Note:<\/b> This API may return attributes corresponding to the <code>p13nMode<\/code> property configuration.","!static":false,"!category":"function","!type":"fn() -> Object"},"destroyDataStateIndicator":{"!description":"Destroys the dataStateIndicator in the aggregation {@link #getDataStateIndicator dataStateIndicator}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"getAggregateConditions":{"!description":"Gets current value of property {@link #getAggregateConditions aggregateConditions}.\n\nDefines the aggregate conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is exclusively used for handling SAPUI5 flexibility changes.","!static":false,"!category":"function","!type":"fn() -> Object"},"attachBeforeExport":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeExport beforeExport} event of this <code>sap.ui.mdc.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.Table<\/code> itself.\n\nThis event is fired right before the export is triggered.\n\nFor more information about the export settings, see {@link sap.ui.export.Spreadsheet} or {@link topic:7e12e6b9154a4607be9d6072c72d609c Spreadsheet Export Configuration}.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyColumns":{"!description":"Destroys all the columns in the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.Table"},"firePaste":{"!description":"Fires event {@link #event:paste paste} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setSortConditions":{"!description":"Sets a new value for property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSortConditions: Object) -> sap.ui.mdc.Table","parameters":{"oSortConditions":"type: object, description: New value for property <code>sortConditions<\/code>"}},"setType":{"!description":"Sets the aggregated {@link #getType type}.","!static":false,"!category":"function","!type":"fn(vType: sap.ui.mdc.table.TableTypeBase | sap.ui.mdc.TableType) -> sap.ui.mdc.Table","parameters":{"vType":"type: sap.ui.mdc.table.TableTypeBase|sap.ui.mdc.TableType, description: The type to set"}},"getAutoBindOnInit":{"!description":"Gets current value of property {@link #getAutoBindOnInit autoBindOnInit}.\n\nDetermines whether to bind the table automatically after the initial creation or re-creation of the table.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFilterConditions":{"!description":"Gets current value of property {@link #getFilterConditions filterConditions}.\n\nDefines the filter conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setAutoBindOnInit":{"!description":"Sets a new value for property {@link #getAutoBindOnInit autoBindOnInit}.\n\nDetermines whether to bind the table automatically after the initial creation or re-creation of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoBindOnInit?: Boolean) -> sap.ui.mdc.Table","parameters":{"bAutoBindOnInit":"type: boolean, description: New value for property <code>autoBindOnInit<\/code>"}},"getEnableAutoColumnWidth":{"!description":"Gets current value of property {@link #getEnableAutoColumnWidth enableAutoColumnWidth}.\n\nEnables automatic column width calculation based on metadata information if set to <code>true<\/code>. The column width calculation takes the type, column label, referenced properties, and many other metadata parameters into account. Providing a more precise <code>maxLength<\/code> value for the <code>String<\/code> type or <code>precision<\/code> value for numeric types can help this algorithm to produce better results. The calculated column widths can have a minimum of 3rem and a maximum of 20rem.\n\n<b>Note:<\/b> To customize the automatic column width calculation, the <code>visualSettings.widthSettings<\/code> key of the <code>PropertyInfo<\/code> can be used. To avoid the heuristic column width calculation for a particular column, the <code>visualSettings.widthSettings<\/code> key of the <code>PropertyInfo<\/code> must be set to <code>null<\/code>. This feature has no effect if the <code>width<\/code> property of the column is bound or its value is set.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSortConditions":{"!description":"Gets current value of property {@link #getSortConditions sortConditions}.\n\nDefines the sort conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.","!static":false,"!category":"function","!type":"fn() -> Object"},"setFilterConditions":{"!description":"Sets a new value for property {@link #getFilterConditions filterConditions}.\n\nDefines the filter conditions.\n\n<b>Note<\/b>: This property must not be bound.<br> <b>Note:<\/b> This property is used exclusively for handling SAPUI5 flexibility changes. Do not use it otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterConditions?: Object) -> sap.ui.mdc.Table","parameters":{"oFilterConditions":"type: object, description: New value for property <code>filterConditions<\/code>"}},"getThreshold":{"!description":"Gets current value of property {@link #getThreshold threshold}.\n\nNumber of records to be requested from the model. If the <code>type<\/code> property is set to <code>ResponsiveTable<\/code>, then it refers to the {@link sap.m.ListBase#getGrowingThreshold growingThreshold} property of <code>ResponsiveTable<\/code>. If the <code>type<\/code> property is set to <code>Table<\/code>, then it refers to the {@link sap.ui.table.Table#getThreshold threshold} property of <code>GridTable<\/code>.<br> <b>Note:<\/b> This property only takes effect if it is set to a positive integer value. Otherwise the table uses the default value of the corresponding table types.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nPersonalization options for the table.<br> <b>Note:<\/b> The order of the options does not influence the position on the UI.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.TableP13nMode]"}},"sap.ui.mdc.MultiSelectMode":{"!description":"Enumeration of the <code>multiSelectMode<\/code> in <code>ListBase<\/code>.","ClearAll":{"!description":"Renders the <code>clearAll<\/code> icon.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","!category":"static class","Default":{"!description":"Renders the <code>selectAll<\/code> checkbox (default behavior).","!category":"enum","!type":"String"}},"sap.ui.mdc.valuehelp.base.Container_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Container with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.Container"},"sap.ui.mdc.field.FieldValueHelpUITableWrapper_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelpUITableWrapper with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldValueHelpTableWrapperBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelpUITableWrapper"},"sap.ui.mdc.field.ConditionFieldHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ConditionFieldHelp"},"sap.ui.mdc.enum":{"ConditionValidated":"sap.ui.mdc.enum.ConditionValidated","FieldDisplay":"sap.ui.mdc.enum.FieldDisplay","BaseType":"sap.ui.mdc.enum.BaseType","ActionToolbarActionAlignment":"sap.ui.mdc.enum.ActionToolbarActionAlignment","OutParameterMode":"sap.ui.mdc.enum.OutParameterMode","ContentMode":"sap.ui.mdc.enum.ContentMode","SelectType":"sap.ui.mdc.enum.SelectType","EditMode":"sap.ui.mdc.enum.EditMode","!category":"namespace","PersistenceMode":"sap.ui.mdc.enum.PersistenceMode","PropagationReason":"sap.ui.mdc.enum.PropagationReason"},"sap.ui.mdc.field.FieldHelpBaseDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.field.FieldHelpBaseDelegate"},"sap.ui.mdc.table.ResponsiveTableType":{"!description":"The table type info class for the metadata-driven table.","setShowDetailsButton":{"!description":"Sets a new value for property {@link #getShowDetailsButton showDetailsButton}.\n\nSpecifies whether the Show / Hide Details button for the <code>ResponsiveTable<\/code> scenario is shown.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area, while the columns with <code>Low<\/code> importance are hidden.<br> On mobile phones, the columns with <code>Medium<\/code> importance are also hidden.<br> As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDetailsButton?: Boolean) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"bShowDetailsButton":"type: boolean, description: New value for property <code>showDetailsButton<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.ResponsiveTableType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setPopinLayout":{"!description":"Sets a new value for property {@link #getPopinLayout popinLayout}.\n\nDefines the layout in which the table pop-in rows are rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Block\"<\/code>.","!static":false,"!category":"function","!type":"fn(sPopinLayout?: sap.m.PopinLayout) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"sPopinLayout":"type: sap.m.PopinLayout, description: New value for property <code>popinLayout<\/code>"}},"getGrowingMode":{"!description":"Gets current value of property {@link #getGrowingMode growingMode}.\n\nSpecifies the growing mode.\n\nDefault value is <code>Basic<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.GrowingMode"},"!proto":"sap.ui.mdc.table.TableTypeBase","!category":"class","setDetailsButtonSetting":{"!description":"Sets a new value for property {@link #getDetailsButtonSetting detailsButtonSetting}.\n\nDefines which columns are hidden instead of moved into the pop-in area depending on their importance. See {@link sap.m.Column#getImportance} and {@link sap.m.Table#getHiddenInPopin} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton=\"true\"<\/code>.<br> If no priority is given, the default configuration of {@link sap.ui.mdc.table.ResponsiveTableType#getShowDetailsButton} is used.<br> If this property is changed after the <code>Table<\/code> has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDetailsButtonSetting: [sap.ui.core.Priority]) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"sDetailsButtonSetting":"type: sap.ui.core.Priority[], description: New value for property <code>detailsButtonSetting<\/code>"}},"getDetailsButtonSetting":{"!description":"Gets current value of property {@link #getDetailsButtonSetting detailsButtonSetting}.\n\nDefines which columns are hidden instead of moved into the pop-in area depending on their importance. See {@link sap.m.Column#getImportance} and {@link sap.m.Table#getHiddenInPopin} for more details.\n\n<b>Note:<\/b> To hide columns based on their importance, it's mandatory to set <code>showDetailsButton=\"true\"<\/code>.<br> If no priority is given, the default configuration of {@link sap.ui.mdc.table.ResponsiveTableType#getShowDetailsButton} is used.<br> If this property is changed after the <code>Table<\/code> has been initialized, the new changes take effect only when the Show / Hide Details button is pressed a second time.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Priority]"},"setGrowingMode":{"!description":"Sets a new value for property {@link #getGrowingMode growingMode}.\n\nSpecifies the growing mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Basic<\/code>.","!static":false,"!category":"function","!type":"fn(sGrowingMode?: sap.ui.mdc.GrowingMode) -> sap.ui.mdc.table.ResponsiveTableType","parameters":{"sGrowingMode":"type: sap.ui.mdc.GrowingMode, description: New value for property <code>growingMode<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.ResponsiveTableType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.table.TableTypeBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>ResponsiveTableType<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGrowingMode growingMode} : sap.ui.mdc.GrowingMode (default: Basic)<\/li>\n<li>{@link #getShowDetailsButton showDetailsButton} : boolean (default: false)<\/li>\n<li>{@link #getDetailsButtonSetting detailsButtonSetting} : sap.ui.core.Priority[]<\/li>\n<li>{@link #getPopinLayout popinLayout} : sap.m.PopinLayout (default: \"Block\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.table.TableTypeBase#constructor sap.ui.mdc.table.TableTypeBase}\ncan be used as well.","!module":"sap/ui/mdc/table/ResponsiveTableType","!helpDescription":"The table type info class for the metadata-driven table.","getPopinLayout":{"!description":"Gets current value of property {@link #getPopinLayout popinLayout}.\n\nDefines the layout in which the table pop-in rows are rendered.\n\nDefault value is <code>\"Block\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PopinLayout"},"getShowDetailsButton":{"!description":"Gets current value of property {@link #getShowDetailsButton showDetailsButton}.\n\nSpecifies whether the Show / Hide Details button for the <code>ResponsiveTable<\/code> scenario is shown.\n\nIf the available screen space gets too narrow, the columns configured with <code>High<\/code> and <code>Medium<\/code> importance move to the pop-in area, while the columns with <code>Low<\/code> importance are hidden.<br> On mobile phones, the columns with <code>Medium<\/code> importance are also hidden.<br> As soon as the first column is hidden, this button appears in the table toolbar and gives the user the possibility to toggle the visibility of the hidden columns in the pop-in area.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.mdc.field.ConditionFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls to show a popover of conditions.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ConditionFieldHelp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<li>{@link #getLabel label} : string (default: \"\")<\/li>\n<li>{@link #get_enableOK _enableOK} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel text that appears as label for the conditions.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears in the popover header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/mdc/field/ConditionFieldHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls to show a popover of conditions.","!proto":"sap.ui.mdc.field.FieldHelpBase","setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel text that appears as label for the conditions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sLabel?: String) -> sap.ui.mdc.field.ConditionFieldHelp","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears in the popover header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.field.ConditionFieldHelp","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class"},"sap.ui.mdc.table.Column_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.Column with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.Column"},"sap.ui.mdc.valuehelp.base.Content":{"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nFired if the selected condition changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"shouldOpenOnNavigate":{"!description":"Determines if the value help should be opened when the user used the arrow keys. By default closed navigation is only enabled for single select scenarios","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContainerConfig":{"!description":"Provides a configuration map for supported containers","!static":false,"!category":"function","!type":"fn() -> Object | undefined"},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle text that appears tab header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"isMultiSelect":{"!description":"Determines if multiselection is active.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormattedTitle":{"!description":"Determines the title used in the <code>TabBar<\/code> of the dialog.\n\n<b>Note:<\/b> This function is used by the container and must not be used from outside","!static":false,"!category":"function","!type":"fn(iCount: Number) -> String","parameters":{"iCount":"type: int, description: Number of selected items or conditions"}},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","navigate":{"!description":"Triggers navigation in the content.\n\nAs this could be asyncron as data might be loaded a promise is returned.\n\n<b>Note:<\/b> This function must only be called by the <code>Container<\/code> element.","!static":false,"!category":"function","!type":"fn(iStep: Number) -> Promise<object>","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nHide content temporary.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible?: Boolean) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.Content.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setShortTitle":{"!description":"Sets a new value for property {@link #getShortTitle shortTitle}.\n\nTitle text that appears in the dialog header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sShortTitle?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sShortTitle":"type: string, description: New value for property <code>shortTitle<\/code>"}},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nHide content temporary.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachNavigated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nFired if a navigation was executed in the content","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle text that appears tab header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeFocus":{"!description":"The focus visualization of the field help needs to be removed as the user starts typing into the field.\n\nOnly needed for typeahead.","!static":false,"!category":"function","!type":"fn()"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Content with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"isQuickSelectSupported":{"!description":"Determines if quick selection is supported.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/mdc/valuehelp/base/Content","attachRequestSwitchToDialog":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nFired if the value help should switch to dialog mode.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe content checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the <code>Container<\/code> element.","!static":false,"!category":"function","!type":"fn(oConfig: Object) -> Promise<sap.ui.mdc.field.FieldHelpItem>","parameters":{"oConfig":"type: object, description: Configuration"}},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","_createCondition":{"!description":"Creates a condition based on the used operator.","!static":false,"!category":"function","!type":"fn(vValue: Object, sDescription?: String, oPayload?: Object) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDescription":"type: string, description: Description of the operator","oPayload":"type: object, description: payload","vValue":"type: any, description: Value of the condition. For item conditions this must be the key."}},"detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachNavigated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nFired if the change is cancelled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setFilterValue":{"!description":"Sets a new value for property {@link #getFilterValue filterValue}.\n\nValue for filtering ($search)\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterValue?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sFilterValue":"type: string, description: New value for property <code>filterValue<\/code>"}},"getShortTitle":{"!description":"Gets current value of property {@link #getShortTitle shortTitle}.\n\nTitle text that appears in the dialog header.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getContent":{"!description":"Gets the content controls","!static":false,"!category":"function","!type":"fn() -> Promise<sap.ui.core.Control>"},"!proto":"sap.ui.core.Element","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself.\n\nFired if a change on the content is confirmed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.Content<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAriaAttributes":{"!description":"Returns the aria attributes the field needs from the value help\n\n<b>Note<\/b> This function needs only to be implemented for <code>Content<\/code> implementing the <code>sap.ui.mdc.valuehelp.Popover<\/code> container. On dialogs the <code>Dialog<\/code> container defines the attributes, as it could have multiple contents.","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> Object","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as FieldHelp might not be connected to a field)"}},"setDisplayContent":{"!description":"Sets the aggregated {@link #getDisplayContent displayContent}.","!static":false,"!category":"function","!type":"fn(oDisplayContent: sap.ui.core.Control) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oDisplayContent":"type: sap.ui.core.Control, description: The displayContent to set"}},"!category":"class","getRequiresTokenizer":{"!description":"Determines if value help dialog should show the tokenizer for the content.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"isValidationSupported":{"!description":"Defines if the content can be used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavigated":{"!description":"Fires event {@link #event:navigated navigated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setConfig":{"!description":"Sets a new value for property {@link #getConfig config}.\n\ninternal configuration\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oConfig?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oConfig":"type: object, description: New value for property <code>config<\/code>"}},"destroyDisplayContent":{"!description":"Destroys the displayContent in the aggregation {@link #getDisplayContent displayContent}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.Content"},"fireConfirm":{"!description":"Fires event {@link #event:confirm confirm} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>Content<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: \"\")<\/li>\n<li>{@link #getShortTitle shortTitle} : string (default: \"\")<\/li>\n<li>{@link #getTokenizerTitle tokenizerTitle} : string (default: \"\")<\/li>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getFilterValue filterValue} : string (default: \"\")<\/li>\n<li>{@link #getConfig config} : object (default: {})<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDisplayContent displayContent} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:requestSwitchToDialog requestSwitchToDialog} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigated navigated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nConditions of the value help\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"getDisplayContent":{"!description":"Gets content of aggregation {@link #getDisplayContent displayContent}.\n\nContent control that is put inside the parent container\n\n<b>Note:<\/b> This aggregation must not be set from outside, it is only to be used by the corresponding container","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getValueHelpIcon":{"!description":"Return the value help icon that should be used for the field.\n\n<b>Note<\/b> This function needs only to be implemented for <code>Content<\/code> implementing the <code>sap.ui.mdc.valuehelp.Popover<\/code> container. On dialogs the <code>sap.ui.mdc.valuehelp.Dialog<\/code> container defines the icon, as it could have multiple contents.","!static":false,"!category":"function","!type":"fn() -> String"},"shouldOpenOnClick":{"!description":"Determines if the value help should be opened when the user clicks into the connected control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"onHide":{"!description":"Called if the content will be hidden.","!static":false,"!category":"function","!type":"fn()"},"onBeforeShow":{"!description":"Finalize content before it is shown","!static":false,"!category":"function","!type":"fn()"},"detachRequestSwitchToDialog":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:requestSwitchToDialog requestSwitchToDialog} event of this <code>sap.ui.mdc.valuehelp.base.Content<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getFilterValue":{"!description":"Gets current value of property {@link #getFilterValue filterValue}.\n\nValue for filtering ($search)\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"onShow":{"!description":"Called if the content will be shown.","!static":false,"!category":"function","!type":"fn()"},"getFormattedShortTitle":{"!description":"Determines the title used in the header of the dialog.\n\n<b>Note:<\/b> This function is used by the container and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> String"},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nConditions of the value help\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getConfig":{"!description":"Gets current value of property {@link #getConfig config}.\n\ninternal configuration\n\n<b>Note:<\/b> This property must not be set from outside, it is only to be used by the corresponding container\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"fireRequestSwitchToDialog":{"!description":"Fires event {@link #event:requestSwitchToDialog requestSwitchToDialog} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setTokenizerTitle":{"!description":"Sets a new value for property {@link #getTokenizerTitle tokenizerTitle}.\n\nTitle text that appears in the dialog tokenizer panel, when ony one content exist.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTokenizerTitle?: String) -> sap.ui.mdc.valuehelp.base.Content","parameters":{"sTokenizerTitle":"type: string, description: New value for property <code>tokenizerTitle<\/code>"}},"getTokenizerTitle":{"!description":"Gets current value of property {@link #getTokenizerTitle tokenizerTitle}.\n\nTitle text that appears in the dialog tokenizer panel, when ony one content exist.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"isSearchSupported":{"!description":"Determines if the content supports search\n\n<b>Note:<\/b> This function is used by the container and content and must not be used from outside","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormattedTokenizerTitle":{"!description":"Determines the title used in the header of the dialog for the bottom tokenizer.\n\n<b>Note:<\/b> This function is used by the container and must not be used from outside","!static":false,"!category":"function","!type":"fn(iCount: Number) -> String","parameters":{"iCount":"type: int, description: Number of selected items or conditions"}}},"module:sap/ui/mdc/odata/v4/ValueHelpDelegate":{"!description":"Delegate for {@link sap.ui.mdc.ValueHelp ValueHelp} used in oData v4 environment.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","module:sap/ui/mdc/odata/v4/ValueHelpDelegate":"module:sap/ui/mdc/odata/v4/ValueHelpDelegate","!module":"sap/ui/mdc/odata/v4/ValueHelpDelegate","!helpDescription":"Delegate for {@link sap.ui.mdc.ValueHelp ValueHelp} used in oData v4 environment.<br> <b>Note:<\/b> The class is experimental and the API/behavior is not finalized and hence this should not be used for productive usage.","!category":"namespace"},"module:sap/ui/mdc/TableDelegate":{"!description":"Base delegate for {@link sap.ui.mdc.Table}.","!module":"sap/ui/mdc/TableDelegate","formatGroupHeader":{"!description":"Formats the title text of a group header row of the table.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oContext: sap.ui.model.Context, sProperty: String) -> String | undefined"},"!helpDescription":"Base delegate for {@link sap.ui.mdc.Table}.","rebind":{"!description":"Rebinds the table.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo)"},"updateBindingInfo":{"!description":"Provides a hook to update the binding info object that is used to bind the table to the model.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo)"},"module:sap/ui/mdc/TableDelegate":"module:sap/ui/mdc/TableDelegate","!category":"namespace","getFilterDelegate":{"!description":"Returns the filter delegate of the table that provides basic filter functionality, such as adding filter fields. <b>Note:<\/b> The functionality provided in this delegate acts as a subset of a <code>FilterBarDelegate<\/code> to enable the table for inbuilt filtering.","!category":"function","!type":"fn() -> {addItem:function(string,sap.ui.mdc.Table) : Promise<sap.ui.mdc.FilterField>}"},"updateBinding":{"!description":"Updates the row binding of the table.\n\nThe default implementation rebinds the table, but model-specific subclasses must call dedicated binding methods to update the binding instead of using {@link #rebind}.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table, oBindingInfo: sap.ui.base.ManagedObject.AggregationBindingInfo, oBinding?: sap.ui.model.ListBinding)"},"fetchExportCapabilities":{"!description":"Returns the feature set for exporting data in the MDC Table.","!category":"function","!type":"fn(oTable: sap.ui.mdc.Table) -> Promise"}},"sap.ui.mdc.field.FieldHelpBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldHelpBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldHelpBase"},"sap.ui.mdc.actiontoolbar":{"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"ActionToolbarAction":"sap.ui.mdc.actiontoolbar.ActionToolbarAction_obj","!category":"namespace","layoutInformation":{"!description":"Layout information","!category":"enum","!type":"Object"}},"sap.ui.mdc.field.ValueHelpPanel":{"!description":"A <code>ValueHelpPanel<\/code> control is used inside the <code>FieldValueHelp<\/code> element to show a complex dialog for entering multiple kinds of conditions.","getInputOK":{"!description":"Gets current value of property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ValueHelpPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFormatOptions":{"!description":"Sets a new value for property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFormatOptions?: Object) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"oFormatOptions":"type: object, description: New value for property <code>formatOptions<\/code>"}},"setInputOK":{"!description":"Sets a new value for property {@link #getInputOK inputOK}.\n\nIf set, there has been no invalid user input.\n\n<b>Note:<\/b> This property must not be set from outside. It is a property because that way it can be bound to the <code>ManagedObjectModel<\/code> of the calling field help and automatically update it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInputOK?: Boolean) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"bInputOK":"type: boolean, description: New value for property <code>inputOK<\/code>"}},"!proto":"sap.ui.core.XMLComposite","!category":"class","getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setShowTokenizer":{"!description":"Sets a new value for property {@link #getShowTokenizer showTokenizer}.\n\nIf set to <code>true<\/code>, a tokenizer is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTokenizer?: Boolean) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"bShowTokenizer":"type: boolean, description: New value for property <code>showTokenizer<\/code>"}},"setShowFilterbar":{"!description":"Sets a new value for property {@link #getShowFilterbar showFilterbar}.\n\nIf set to <code>true<\/code>, the <code>FilterBar<\/code> area is shown. The <code>FilterBar<\/code> must be assigned using <code>setFilterBar<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFilterbar?: Boolean) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"bShowFilterbar":"type: boolean, description: New value for property <code>showFilterbar<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ValueHelpPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.XMLComposite.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>ValueHelpPanel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowTokenizer showTokenizer} : boolean (default: true)<\/li>\n<li>{@link #getShowFilterbar showFilterbar} : boolean (default: true)<\/li>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getFormatOptions formatOptions} : object (default: {})<\/li>\n<li>{@link #getInputOK inputOK} : boolean (default: true)<\/li>\n<li>{@link #get_filterBarVisible _filterBarVisible} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.XMLComposite#constructor sap.ui.core.XMLComposite}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nSets the conditions that represent the selected values of the help.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.field.ValueHelpPanel","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"!module":"sap/ui/mdc/field/ValueHelpPanel","!helpDescription":"A <code>ValueHelpPanel<\/code> control is used inside the <code>FieldValueHelp<\/code> element to show a complex dialog for entering multiple kinds of conditions.","getShowFilterbar":{"!description":"Gets current value of property {@link #getShowFilterbar showFilterbar}.\n\nIf set to <code>true<\/code>, the <code>FilterBar<\/code> area is shown. The <code>FilterBar<\/code> must be assigned using <code>setFilterBar<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowTokenizer":{"!description":"Gets current value of property {@link #getShowTokenizer showTokenizer}.\n\nIf set to <code>true<\/code>, a tokenizer is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormatOptions":{"!description":"Gets current value of property {@link #getFormatOptions formatOptions}.\n\nThe <code>formatOptions<\/code> for the <code>ConditionType<\/code> used to format tokens.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.ui.mdc.valuehelp.Dialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.Dialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Container.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.Dialog"},"sap.ui.mdc.p13n.subcontroller.BaseController_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.subcontroller.BaseController with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.p13n.subcontroller.BaseController"},"sap.ui.mdc.field.ValueHelpPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ValueHelpPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.XMLComposite.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ValueHelpPanel"},"sap.ui.mdc.field.ListFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a list of items.","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.ListItem) -> sap.ui.core.ListItem | null","parameters":{"vItem":"type: int|string|sap.ui.core.ListItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ListFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFilterList":{"!description":"Gets current value of property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.mdc.field.FieldHelpBase","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.ListFieldHelp"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"setUseFirstMatch":{"!description":"Sets a new value for property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUseFirstMatch?: Boolean) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"bUseFirstMatch":"type: boolean, description: New value for property <code>useFirstMatch<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"oItem":"type: sap.ui.core.ListItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems of the field help.\n\nThe <code>key<\/code> of the items is not shown in the list, but is used as a value of the connected field.\n\nIf the <code>additionalText<\/code> for all the items is not used, the column will not be displayed.\n\n<b>Note:<\/b> At the moment, icons are not supported.\n\n<b>Note:<\/b> If {@link sap.ui.mdc.field.ListFieldHelpItem ListFieldHelpItem} elements are used as items, the items are grouped and sorted by the value provided in the <code>groupKey<\/code> property of the item. The value provided in the <code>groupText<\/code> property will be shown as group header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ListItem]"},"!constructorDescription":"Constructor for a new <code>ListFieldHelp<\/code>.\n\nThis field help supports only single selection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFilterList filterList} : boolean (default: true)<\/li>\n<li>{@link #getUseFirstMatch useFirstMatch} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.ListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","!module":"sap/ui/mdc/field/ListFieldHelp","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.ListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem) -> Number","parameters":{"oItem":"type: sap.ui.core.ListItem, description: The item whose index is looked for"}},"!helpDescription":"A field help used in the <code>FieldHelp<\/code> association of controls based on {@link sap.ui.mdc.field.FieldBase FieldBase} that shows a list of items.","setFilterList":{"!description":"Sets a new value for property {@link #getFilterList filterList}.\n\nIf set, the items of the list are filtered based on <code>filterValue<\/code>.\n\nIf a type-ahead behavior for the connected field is wanted, this property must be set to <code>true<\/code>. For small lists all values are meant to be shown, independent of the typing in the connected field. In this case this property must be set to <code>false<\/code>.\n\nIf not set, the list opens if the user clicks into the connected field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterList?: Boolean) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"bFilterList":"type: boolean, description: New value for property <code>filterList<\/code>"}},"getUseFirstMatch":{"!description":"Gets current value of property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.ListItem, iIndex: Number) -> sap.ui.mdc.field.ListFieldHelp","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.ListItem, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.mdc.p13n.StateUtil_obj":{"!type":"fn()","prototype":"sap.ui.mdc.p13n.StateUtil"},"sap.ui.mdc.valuehelp.base.ListContent":{"!proto":"sap.ui.mdc.valuehelp.base.Content","getOutParameters":{"!description":"Gets content of aggregation {@link #getOutParameters outParameters}.\n\nSets the out parameters of a field help.\n\nIf set, the fields sets the data of these entities in the model based to the selected values.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.OutParameter]"},"insertOutParameter":{"!description":"Inserts a outParameter into the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter, iIndex: Number) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the outParameter should be inserted at; for a negative value of <code>iIndex<\/code>, the outParameter is inserted at position 0; for a value greater than the current size of the aggregation, the outParameter is inserted at the last position"}},"!category":"class","removeAllInParameters":{"!description":"Removes all the controls from the aggregation {@link #getInParameters inParameters}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.InParameter]"},"setUseFirstMatch":{"!description":"Sets a new value for property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseFirstMatch?: Boolean) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"bUseFirstMatch":"type: boolean, description: New value for property <code>useFirstMatch<\/code>"}},"setUseAsValueHelp":{"!description":"Sets a new value for property {@link #getUseAsValueHelp useAsValueHelp}.\n\nIf set, the List is also opened if the ValueHelp icon is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseAsValueHelp?: Boolean) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"bUseAsValueHelp":"type: boolean, description: New value for property <code>useAsValueHelp<\/code>"}},"getCaseSensitive":{"!description":"Gets current value of property {@link #getCaseSensitive caseSensitive}.\n\nIf this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseAsValueHelp":{"!description":"Gets current value of property {@link #getUseAsValueHelp useAsValueHelp}.\n\nIf set, the List is also opened if the ValueHelp icon is pressed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCaseSensitive":{"!description":"Sets a new value for property {@link #getCaseSensitive caseSensitive}.\n\nIf this property is set to <code>true<\/code>, the filtering for user input is always case-sensitive. Otherwise user input is checked case-insensitively. If <code>$search<\/code> is used, this property has no effect on the <code>$search<\/code> request.\n\nIf the used back-end service supports a case-insensitive search, set this property to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCaseSensitive?: Boolean) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"bCaseSensitive":"type: boolean, description: New value for property <code>caseSensitive<\/code>"}},"!constructorDescription":"Constructor for a new <code>ListContent<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCaseSensitive caseSensitive} : boolean (default: false)<\/li>\n<li>{@link #getUseFirstMatch useFirstMatch} : boolean (default: true)<\/li>\n<li>{@link #getUseAsValueHelp useAsValueHelp} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getInParameters inParameters} : sap.ui.mdc.field.InParameter[]<\/li>\n<li>{@link #getOutParameters outParameters} : sap.ui.mdc.field.OutParameter[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.Content#constructor sap.ui.mdc.valuehelp.base.Content}\ncan be used as well.","getInParameters":{"!description":"Gets content of aggregation {@link #getInParameters inParameters}.\n\nSets the in parameters of a field help.\n\nIf set, the field help reads the data of these entities in the model and uses it to filter in the value help.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.InParameter]"},"getUseFirstMatch":{"!description":"Gets current value of property {@link #getUseFirstMatch useFirstMatch}.\n\nIf set, <code>getKeyForText<\/code> returns the first item that matches the text.\n\nThis is the case if the text of the item starts with the text entered.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeInParameter":{"!description":"Removes a inParameter from the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(vInParameter: Number | String | sap.ui.mdc.field.InParameter) -> sap.ui.mdc.field.InParameter | null","parameters":{"vInParameter":"type: int|string|sap.ui.mdc.field.InParameter, description: The inParameter to remove or its index or id"}},"removeAllOutParameters":{"!description":"Removes all the controls from the aggregation {@link #getOutParameters outParameters}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.field.OutParameter]"},"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","destroyInParameters":{"!description":"Destroys all the inParameters in the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.ListContent"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.ListContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfOutParameter":{"!description":"Checks for the provided <code>sap.ui.mdc.field.OutParameter<\/code> in the aggregation {@link #getOutParameters outParameters}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter) -> Number","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter whose index is looked for"}},"removeOutParameter":{"!description":"Removes a outParameter from the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(vOutParameter: Number | String | sap.ui.mdc.field.OutParameter) -> sap.ui.mdc.field.OutParameter | null","parameters":{"vOutParameter":"type: int|string|sap.ui.mdc.field.OutParameter, description: The outParameter to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.ListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addInParameter":{"!description":"Adds some inParameter to the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter to add; if empty, nothing is inserted"}},"insertInParameter":{"!description":"Inserts a inParameter into the aggregation {@link #getInParameters inParameters}.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter, iIndex: Number) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the inParameter should be inserted at; for a negative value of <code>iIndex<\/code>, the inParameter is inserted at position 0; for a value greater than the current size of the aggregation, the inParameter is inserted at the last position"}},"!module":"sap/ui/mdc/valuehelp/base/ListContent","!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","addOutParameter":{"!description":"Adds some outParameter to the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn(oOutParameter: sap.ui.mdc.field.OutParameter) -> sap.ui.mdc.valuehelp.base.ListContent","parameters":{"oOutParameter":"type: sap.ui.mdc.field.OutParameter, description: The outParameter to add; if empty, nothing is inserted"}},"destroyOutParameters":{"!description":"Destroys all the outParameters in the aggregation {@link #getOutParameters outParameters}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.ListContent"},"indexOfInParameter":{"!description":"Checks for the provided <code>sap.ui.mdc.field.InParameter<\/code> in the aggregation {@link #getInParameters inParameters}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oInParameter: sap.ui.mdc.field.InParameter) -> Number","parameters":{"oInParameter":"type: sap.ui.mdc.field.InParameter, description: The inParameter whose index is looked for"}}},"sap.ui.mdc.table.RowActionItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.RowActionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.table.RowActionItem"},"sap.ui.mdc.field.TokenDisplay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Token.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.TokenDisplay"},"sap.ui.mdc.field.OutParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.OutParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.InParameter.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.OutParameter"},"sap.ui.mdc.valuehelp.ITypeaheadContainer":{"!description":"Interface for valuehelp containers","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.field.FieldMultiInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldMultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MultiInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldMultiInput"},"sap.ui.mdc.Element":{"!description":"The base class for MDC composite elements providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.Element.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPropertyHelper":{"!description":"Returns the property helper instance, if available.","!static":true,"!category":"function","!type":"fn() -> sap.ui.mdc.util.PropertyHelper"},"initControlDelegate":{"!description":"Loads and initializes the delegate module related to the enhanced control.","!static":true,"!category":"function","!type":"fn(oPreloadedModule?: Object) -> Promise<sap.ui.mdc.BaseDelegate>","parameters":{"oPreloadedModule":"type: object, description: Preloaded delegate module"}},"!proto":"sap.ui.core.Element","isPropertyHelperFinal":{"!description":"Indicates if the control's propertyHelper already contains all available properties","!static":true,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.","!static":false,"!category":"function","!type":"fn() -> Object"},"initPropertyHelper":{"!description":"Loads and initializes the property helper related to the enhanced control.","!static":true,"!category":"function","!type":"fn(PropertyHelperClass?: sap.ui.mdc.util.PropertyHelper, aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"PropertyHelperClass":"type: sap.ui.mdc.util.PropertyHelper, description: Custom property helper class","bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDelegate: Object) -> sap.ui.mdc.Element","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Element with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getPayload":{"!description":"Returns the payload object set for the delegate property.","!static":true,"!category":"function","!type":"fn() -> Object"},"finalizePropertyHelper":{"!description":"Finalize the propertyHelper using the control's delegate.","!static":true,"!category":"function","!type":"fn(aProperties?: [Object], bFinal?: [Object]) -> Promise<sap.ui.mdc.util.PropertyHelper>","parameters":{"bFinal":"type: object[], description: flag for mark the propertyHelper as final","aProperties":"type: object[], description: optional set of initial properties"}},"!constructorDescription":"Creates and initializes a new MDC element with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/Element","!helpDescription":"The base class for MDC composite elements providing delegate-related functionality (see {@link sap.ui.mdc.mixin.DelegateMixin}).","getTypeUtil":{"!description":"Returns the <code>typeUtil<\/code> made available by a delegate module.","!static":true,"!category":"function","!type":"fn() -> sap.ui.mdc.util.TypeUtil"},"awaitPropertyHelper":{"!description":"Provides access to the property helper initialization <code>Promise<\/code>.","!static":true,"!category":"function","!type":"fn() -> Promise<sap.ui.mdc.util.PropertyHelper>"},"getControlDelegate":{"!description":"Returns the delegate instance, if available.","!static":true,"!category":"function","!type":"fn() -> sap.ui.mdc.BaseDelegate"},"awaitControlDelegate":{"!description":"Provides access to the delegate initialization <code>Promise<\/code>. <b>Note:<\/b> <code>initControlDelegate<\/code> must be called to start the delegate initialization","!static":true,"!category":"function","!type":"fn() -> Promise"}},"sap.ui.mdc.TableP13nMode":{"!description":"Defines the personalization mode of the table.","Group":{"!description":"Group personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Column":{"!description":"Column personalization is enabled.","!category":"enum","!type":"String"},"Filter":{"!description":"Filter personalization is enabled.","!category":"enum","!type":"String"},"Sort":{"!description":"Sort personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class","Aggregate":{"!description":"Aggregation personalization is enabled.","!category":"enum","!type":"String"}},"sap.ui.mdc.FilterBar":{"!description":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Advanced Filters button shows the filter dialog.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setP13nMode":{"!description":"Sets a new value for property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options for the filter bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sP13nMode: [sap.ui.mdc.FilterBarP13nMode]) -> sap.ui.mdc.FilterBar","parameters":{"sP13nMode":"type: sap.ui.mdc.FilterBarP13nMode[], description: New value for property <code>p13nMode<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.FilterBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FilterBar.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAdaptFiltersButton showAdaptFiltersButton} : boolean (default: true)<\/li>\n<li>{@link #getP13nMode p13nMode} : sap.ui.mdc.FilterBarP13nMode[]<\/li>\n<li>{@link #get_p13nModeItem _p13nModeItem} : boolean (default: false)<\/li>\n<li>{@link #get_p13nModeValue _p13nModeValue} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.filterbar.FilterBarBase#constructor sap.ui.mdc.filterbar.FilterBarBase}\ncan be used as well.","!module":"sap/ui/mdc/FilterBar","!helpDescription":"The <code>FilterBar<\/code> control is used to display filter properties in a user-friendly manner to populate values for a query. The filters are arranged in a logical row that is divided depending on the space available and the width of the filters. The Go button triggers the search event, and the Advanced Filters button shows the filter dialog.<br> The <code>FilterBar<\/code> control creates and handles the filters based on the provided metadata information. The metadata information is provided via the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} implementation. This implementation has to be provided by the application.","setShowAdaptFiltersButton":{"!description":"Sets a new value for property {@link #getShowAdaptFiltersButton showAdaptFiltersButton}.\n\nDetermines whether the Adapt Filters button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAdaptFiltersButton?: Boolean) -> sap.ui.mdc.FilterBar","parameters":{"bShowAdaptFiltersButton":"type: boolean, description: New value for property <code>showAdaptFiltersButton<\/code>"}},"getShowAdaptFiltersButton":{"!description":"Gets current value of property {@link #getShowAdaptFiltersButton showAdaptFiltersButton}.\n\nDetermines whether the Adapt Filters button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>p13nMode<\/code> property does not contain the value <code>Item<\/code>, it is ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.mdc.filterbar.FilterBarBase","!category":"class","getP13nMode":{"!description":"Gets current value of property {@link #getP13nMode p13nMode}.\n\nSpecifies the personalization options for the filter bar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterBarP13nMode]"}},"sap.ui.mdc.FilterField":{"!description":"The <code>FilterField<\/code> control is used to filter data based on the conditions. The conditions are managed in the corresponding {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. That is why the <code>conditions<\/code> property must be bound to the related conditions in the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. The type of this data must be defined in the <code>dataType<\/code> property.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.FilterField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.mdc.field.FieldBase","removeOperator":{"!description":"Removes an operator from the list of known operators.","!static":false,"!category":"function","!type":"fn(vOperator: sap.ui.mdc.condition.Operator | String)","parameters":{"vOperator":"type: sap.ui.mdc.condition.Operator|string, description: The operator instance or operator name"}},"!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.mdc.FilterField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.FilterField<\/code> itself.\n\nThis event is fired when the <code>value<\/code> property of the field is changed.\n\n<b>Note<\/b> This event is only triggered if the used content control has a change event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.FilterField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.FilterField<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDefaultOperator":{"!description":"Gets current value of property {@link #getDefaultOperator defaultOperator}.\n\nDefault operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.","!static":false,"!category":"function","!type":"fn() -> String"},"addOperators":{"!description":"Adds an array of operators to the list of known operators.\n\n<b>Note<\/b>: <code>aOperators<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator}, the instance itself, or multiple operators inside an array.","!static":false,"!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator]) -> sap.ui.mdc.FilterField","parameters":{"aOperators":"type: sap.ui.mdc.condition.Operator[], description: Array of operators"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.FilterField","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.mdc.FilterField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.FilterField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterField with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getOperators":{"!description":"Gets current value of property {@link #getOperators operators}.\n\nSupported operator names for conditions.\n\nIf empty, default operators depending on used data type are used.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setOperators":{"!description":"Sets a new value for property {@link #getOperators operators}.\n\nSupported operator names for conditions.\n\nIf empty, default operators depending on used data type are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sOperators?: [String]) -> sap.ui.mdc.FilterField","parameters":{"sOperators":"type: string[], description: New value for property <code>operators<\/code>"}},"addOperator":{"!description":"Adds an operator to the list of known operators.\n\n<b>Note<\/b>: If no operator is set, the used type of the <code>FilterField<\/code> defines the set of default operators.","!static":false,"!category":"function","!type":"fn(vOperator: sap.ui.mdc.condition.Operator | String) -> sap.ui.mdc.FilterField","parameters":{"vOperator":"type: sap.ui.mdc.condition.Operator|string, description: The operator instance or operator name"}},"!constructorDescription":"Constructor for a new <code>FilterField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperators operators} : string[] (default: [])<\/li>\n<li>{@link #getDefaultOperator defaultOperator} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldBase#constructor sap.ui.mdc.field.FieldBase}\ncan be used as well.","!module":"sap/ui/mdc/FilterField","!helpDescription":"The <code>FilterField<\/code> control is used to filter data based on the conditions. The conditions are managed in the corresponding {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. That is why the <code>conditions<\/code> property must be bound to the related conditions in the {@link sap.ui.mdc.condition.ConditionModel ConditionModel}. The type of this data must be defined in the <code>dataType<\/code> property.","removeAllOperators":{"!description":"Removes all operators from the list of known operators.","!static":false,"!category":"function","!type":"fn()"},"setDefaultOperator":{"!description":"Sets a new value for property {@link #getDefaultOperator defaultOperator}.\n\nDefault operator name for conditions. If empty, the relevant default operator depending on the data type used is taken.\n\n<b>Note<\/b>: <code>defaultOperator<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator} or the instance itself.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultOperator?: String) -> sap.ui.mdc.FilterField","parameters":{"sDefaultOperator":"type: string, description: New value for property <code>defaultOperator<\/code>"}},"removeOperators":{"!description":"Removes all given operators from the list of known operators.\n\n<b>Note<\/b>: <code>aOperators<\/code> can be the name of an {@link sap.ui.mdc.condition.Operator Operator}, the instance itself, or multiple operators inside an array.","!static":false,"!category":"function","!type":"fn(aOperators: [sap.ui.mdc.condition.Operator])","parameters":{"aOperators":"type: sap.ui.mdc.condition.Operator[], description: Array of operators"}}},"sap.ui.mdc.condition":{"Condition":"sap.ui.mdc.condition.Condition","Operator":"sap.ui.mdc.condition.Operator_obj","!category":"namespace","FilterConverter":"sap.ui.mdc.condition.FilterConverter","type":{"!description":"Data type of the corresponding filter field.\n\n<b>Note:<\/b> A type must be an instance of {@link sap.ui.model.Type Type}.","!category":"enum","!type":"Object"},"FilterOperatorUtil":"sap.ui.mdc.condition.FilterOperatorUtil","operator":{"!description":"Operator used in the corresponding filter field.\n\n<b>Note:<\/b> An operator must be an instance of {@link sap.ui.mdc.condition.Operator Operator}.","!category":"enum","!type":"Object"},"baseType":{"!description":"Basic type of the corresponding filter field.","!category":"enum","!type":"sap.ui.mdc.enum.BaseType"},"ConditionModelPropertyBinding":"sap.ui.mdc.condition.ConditionModelPropertyBinding_obj","OperatorDynamicDateOption":"sap.ui.mdc.condition.OperatorDynamicDateOption_obj","ConditionModel":"sap.ui.mdc.condition.ConditionModel_obj","!module":"sap/ui/mdc/condition/Condition","ConditionConverter":"sap.ui.mdc.condition.ConditionConverter","valueTypes":{"!description":"Defines the types of the option's parameters. Possible values for the array items are \"date\" and \"int\". A date range is usually represented with two consecutive \"date\" values.","!category":"enum","!type":"[String]"},"RangeOperator":"sap.ui.mdc.condition.RangeOperator_obj","key":{"!description":"A key which identifies the option. The option produces DynamicDateRange values with operator same as the option key.","!category":"enum","!type":"String"}},"sap.ui.mdc.field.InParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.InParameter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.InParameter"},"sap.ui.mdc.valuehelp.content.Conditions":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a condition panel.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Conditions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.Conditions.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>Conditions<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.Content#constructor sap.ui.mdc.valuehelp.base.Content}\ncan be used as well.","getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel shown on condition panel.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/mdc/valuehelp/content/Conditions","!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element showing a condition panel.","!proto":"sap.ui.mdc.valuehelp.base.Content","setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel shown on condition panel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.ui.mdc.valuehelp.content.Conditions","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"!category":"class"},"sap.ui.mdc.valuehelp.base.DialogTab":{"!description":"Content for the <code>sap.ui.mdc.valuehelp.content.Dialog<\/code> element.","detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.DialogTab.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets a new value for property {@link #getContent content}.\n\nContent control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oContent: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oContent":"type: object, description: New value for property <code>content<\/code>"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself.\n\nFired if the selected condition changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContent":{"!description":"Gets current value of property {@link #getContent content}.\n\nContent control","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.core.Control","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself.\n\nFired if a change on the content is confirmed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.DialogTab with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireConfirm":{"!description":"Fires event {@link #event:confirm confirm} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>DialogTab<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : object<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/base/DialogTab","!helpDescription":"Content for the <code>sap.ui.mdc.valuehelp.content.Dialog<\/code> element.","detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:confirm confirm} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself.\n\nFired if the change is cancelled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.base.DialogTab<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.base.DialogTab","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ui.mdc.FilterBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.FilterBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.FilterBarBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.FilterBar"},"sap.ui.mdc.condition.RangeOperator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.RangeOperator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.condition.Operator.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oConfiguration: Object)","prototype":"sap.ui.mdc.condition.RangeOperator"},"sap.ui.mdc.ValueHelp":{"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired when a value is selected in the value help.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"onControlChange":{"!description":"Triggers some logic that must be executed in <code>ValueHelp<\/code> element if a <code>Change<\/code> event on the connected control is fired.\n\nThis is done if the corresponding control value is changed (not during navigation).\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"fireSwitchToValueHelp":{"!description":"Fires event {@link #event:switchToValueHelp switchToValueHelp} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getDialog":{"!description":"Gets content of aggregation {@link #getDialog dialog}.\n\nContainer that is used and opened if the value help icon of the input field is pressed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.IDialogContainer"},"isFocusInHelp":{"!description":"Determines if the focus is set in the value help or stays in the calling control.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"toggleOpen":{"!description":"Toggles the open state of the value help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bTypeahead: Boolean)","parameters":{"bTypeahead":"type: boolean, description: Flag that determines whether value help is opened for type-ahead or for complex help"}},"fireDisconnect":{"!description":"Fires event {@link #event:disconnect disconnect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"isTypeaheadSupported":{"!description":"Determines if the value help should be opened when something is typed into the field.\n\nOpening the value help must be triggered by the control the <code>ValueHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Promise<boolean>"},"!description":"Element for the <code>FieldHelp<\/code> association in the {@link sap.ui.mdc.field.FieldBase FieldBase} controls.","navigate":{"!description":"Triggers navigation in the value help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(iStep: Number)","parameters":{"iStep":"type: int, description: Number of steps for navigation (e.g. 1 means next item, -1 means previous item)"}},"attachDisconnect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired when the <code>ValueHelp<\/code> element is disconnected from a control.\n\n<b>Note:<\/b> This event must only be handled by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.ValueHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachNavigated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired after the user navigated, using the arrow keys, in the value help.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"skipOpening":{"!description":"Skips the opening of the value help if it is pending because of loading content.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"removeFocus":{"!description":"The focus visualization of the field help needs to be removed as the user starts typing into the field.","!static":false,"!category":"function","!type":"fn()"},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired after the value help has been closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setDialog":{"!description":"Sets the aggregated {@link #getDialog dialog}.","!static":false,"!category":"function","!type":"fn(oDialog: sap.ui.mdc.valuehelp.IDialogContainer) -> sap.ui.mdc.ValueHelp","parameters":{"oDialog":"type: sap.ui.mdc.valuehelp.IDialogContainer, description: The dialog to set"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"isOpen":{"!description":"Determines if the value help is open.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/mdc/ValueHelp","detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachDisconnect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:disconnect disconnect} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getItemForValue":{"!description":"Determines the item (key and description) for a given value.\n\nThe value help checks if there is an item with a key or description that fits this value.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValuedHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oConfig: Object) -> Promise<sap.ui.mdc.field.FieldHelpItem>","parameters":{"oConfig":"type: object, description: Configuration"}},"!helpDescription":"Element for the <code>FieldHelp<\/code> association in the {@link sap.ui.mdc.field.FieldBase FieldBase} controls.","detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachSwitchToValueHelp":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:switchToValueHelp switchToValueHelp} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"detachNavigated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigated navigated} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getValidateInput":{"!description":"Gets current value of property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input of the corresponding field is validated against the value help. If no entry is found for the user input, an error is shown on the field.\n\nIf this property is not set, the user input is still checked against the value help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFilterValue":{"!description":"Sets a new value for property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>ValueHelp<\/code> elements content supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterValue?: String) -> sap.ui.mdc.ValueHelp","parameters":{"sFilterValue":"type: string, description: New value for property <code>filterValue<\/code>"}},"!proto":"sap.ui.mdc.Element","getAriaAttributes":{"!description":"Returns the aria attributes the field needs from the value help","!static":false,"!category":"function","!type":"fn(iMaxConditions: Number) -> Object","parameters":{"iMaxConditions":"type: int, description: maximal conditions allowed (as FieldHelp might not be connected to a field)"}},"setTypeahead":{"!description":"Sets the aggregated {@link #getTypeahead typeahead}.","!static":false,"!category":"function","!type":"fn(oTypeahead: sap.ui.mdc.valuehelp.ITypeaheadContainer) -> sap.ui.mdc.ValueHelp","parameters":{"oTypeahead":"type: sap.ui.mdc.valuehelp.ITypeaheadContainer, description: The typeahead to set"}},"!category":"class","getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nPath to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"isValidationSupported":{"!description":"Defines if the value help can be used for input validation.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavigated":{"!description":"Fires event {@link #event:navigated navigated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"valueHelpEnabled":{"!description":"If only typeahead is enabled the field should not show a value help icon or open the value help using F4.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>ValueHelp<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getConditions conditions} : object[] (default: [])<\/li>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getFilterValue filterValue} : string (default: \"\") (default)<\/li>\n<li>{@link #getValidateInput validateInput} : boolean (default: true)<\/li>\n<li>{@link #get_config _config} : object (default: {})<\/li>\n<li>{@link #get_valid _valid} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDialog dialog} : sap.ui.mdc.valuehelp.IDialogContainer<\/li>\n<li>{@link #getTypeahead typeahead} : sap.ui.mdc.valuehelp.ITypeaheadContainer<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:disconnect disconnect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigated navigated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:switchToValueHelp switchToValueHelp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Element#constructor sap.ui.mdc.Element}\ncan be used as well.","setConditions":{"!description":"Sets a new value for property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sConditions?: [Object]) -> sap.ui.mdc.ValueHelp","parameters":{"sConditions":"type: object[], description: New value for property <code>conditions<\/code>"}},"destroyDialog":{"!description":"Destroys the dialog in the aggregation {@link #getDialog dialog}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ValueHelp"},"shouldOpenOnClick":{"!description":"Determines if the value help should be opened when the user clicks into the connected control.\n\nOpening the value help must be triggered by the control the <code>ValueHelp<\/code> element belongs to.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"close":{"!description":"closes the value help.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn()"},"connect":{"!description":"Connects the <code>ValueHelp<\/code> element to a control.\n\nIf the <code>ValueHelp<\/code> element is used as an association to multiple controls, it has to know the currently active control to open and interact.\n\nIf the <code>ValueHelp<\/code> element is connected to a control, the <code>disconnected<\/code> event is fired to inform the previously connected control.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, oConfig?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oConfig":"type: object, description: Configuration object that holds required data of the connected control","oControl":"type: sap.ui.core.Control, description: Control to which the <code>FieldHelp<\/code> element is connected to"}},"getFilterValue":{"!description":"Gets current value of property {@link #getFilterValue filterValue}.\n\nThe value by which the help is filtered.\n\n<b>Note:<\/b> This only takes effect if the <code>ValueHelp<\/code> elements content supports filtering.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"initBeforeOpen":{"!description":"Calls initialization of the <code>ValueHelp<\/code> element before the value help is really opened. This is called in Typeahead on first letter before the value help is opened with a delay. So the content can be determined in the delegate coding early.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bTypeahead: Boolean)","parameters":{"bTypeahead":"type: boolean, description: Flag that determines whether value help is opened for type-ahead or for complex help"}},"setValidateInput":{"!description":"Sets a new value for property {@link #getValidateInput validateInput}.\n\nIf this property is set, the user input of the corresponding field is validated against the value help. If no entry is found for the user input, an error is shown on the field.\n\nIf this property is not set, the user input is still checked against the value help. But if no entry is found, the user input is set to the field if the used data type allows this. (A type parsing error is shown if the user input adheres to the requirements of the used data type.)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValidateInput?: Boolean) -> sap.ui.mdc.ValueHelp","parameters":{"bValidateInput":"type: boolean, description: New value for property <code>validateInput<\/code>"}},"destroyTypeahead":{"!description":"Destroys the typeahead in the aggregation {@link #getTypeahead typeahead}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ValueHelp"},"getTypeahead":{"!description":"Gets content of aggregation {@link #getTypeahead typeahead}.\n\nContainer that is used and opened in typeahead","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.ITypeaheadContainer"},"getConditions":{"!description":"Gets current value of property {@link #getConditions conditions}.\n\nThe conditions of the selected items.\n\n<b>Note:<\/b> This property must only be set by the control the <code>ValueHelp<\/code> element belongs to, not by the application.\n\n<b>Note:<\/b> A condition must have the structure of {@link sap.ui.mdc.condition.ConditionObject ConditionObject}.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getIcon":{"!description":"Determines the icon for the value help.","!static":false,"!category":"function","!type":"fn() -> String"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nPath to the <code>Delegate<\/code> module that provides the required APIs to execute model-specific logic.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> Do not bind or modify the module. This property can only be configured during control initialization.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"attachSwitchToValueHelp":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:switchToValueHelp switchToValueHelp} event of this <code>sap.ui.mdc.ValueHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.ValueHelp<\/code> itself.\n\nThis event is fired if the user wants to switch from typeahead to value help.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.ValueHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.ValueHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"open":{"!description":"Opens the value help for the control to which the <code>ValueHelp<\/code> element is connected.\n\n<b>Note:<\/b> This function must only be called by the control the <code>ValueHelp<\/code> element belongs to, not by the application.","!static":false,"!category":"function","!type":"fn(bTypeahead: Boolean)","parameters":{"bTypeahead":"type: boolean, description: Flag that determines whether value help is opened for type-ahead or for complex help"}}},"sap.ui.mdc.valuehelp.ITypeaheadContent":{"!description":"Interface for valuehelp containers / contents supporting typeahead functionality","!module":"sap/ui/mdc/library","!category":"static class"},"sap.ui.mdc.field.ListFieldHelpItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelpItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.ListFieldHelpItem"},"sap.ui.mdc.p13n.StateUtil":{"!description":"Utility class for state handling of MDC controls. The <code>StateUtil<\/code> class is offering a generic way to retrieve states and set a desired state for a given MDC control. The <code>StateUtil<\/code> class is tightly coupled to the SAPUI5 flexibility integration of MDC controls. To use the APIs of <code>Stateutil<\/code>, the given MDC control instance needs to fully enable all available <code>p13nMode<\/code> options. This way, <code>Stateutil<\/code> can create the required changes and retrieve the relevant state of each control.","applyExternalState":{"!description":"Creates and applies the necessary changes for a given control and state. <b>Note:<\/b>The changes are created in the same order as the objects are passed into the state object attributes. For example, by adding two objects into the <code>items<\/code> attribute of the <code>oState<\/code> object, the first entry is created, and the second entry is created on top of the first change. The item state is applied for each provided object in the given order in the array and uses the provided position. If no index or only an invalid index has been provided, the item is added to the array after the last item in the affected control's <\/code>item<\/code> aggregation. In addition the following attributes can be used to remove a state:\n\n<ul> <li><code>sorted<\/code> - Set to <code>false<\/code> in the <code>sorters<\/code> scope to remove a sorter/code>.<\/li> <li><code>grouped<\/code> - Set to <code>false<\/code> in the <code>groupLevels<\/code> scope to remove a grouping.<\/li> <li><code>visible<\/code> - Set to <code>false<\/code> to remove an aggregation item.<\/li> <li><code>aggregated<\/code> - Set to <code>false<\/code> to remove an aggregation.<\/li> <\/ul>\n\n<b>Note:<\/b>To improve the performance, you should avoid additional calls of the control\u2019s delegate. To do this, the <code>propertyInfo<\/code> property of the relevant control can be enriched with the properties used in the provided state.","!static":true,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oState: Object) -> Promise","parameters":{"oState":"type: object, description: The state in which the control is represented","oControl":"type: sap.ui.mdc.Control, description: The control that is used to create changes and to which changes are made"}},"retrieveExternalState":{"!description":"Retrieves the externalized state for a given control instance. The retrieved state is equivalent to the <code>getCurrentState<\/code> API for the given control, after all necessary changes have been applied (for example, variant appliance and <code>p13n, StateUtil<\/code> changes). After the returned <code>Promise<\/code> has been resolved, the returned state is in sync with the according state object of the MDC control (for example, <code>filterConditions<\/code> for the <code>FilterBar<\/code> control).","!static":true,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control) -> Promise","parameters":{"oControl":"type: sap.ui.mdc.Control, description: The control instance implementing IxState to retrieve the externalized state"}},"!module":"sap/ui/mdc/p13n/StateUtil","diffState":{"!description":"Creates a delta between two states.","!static":true,"!category":"function","!type":"fn(oControl: sap.ui.mdc.Control, oOldState: Object, oNewState: Object) -> Promise","parameters":{"oNewState":"type: object, description: The new state","oControl":"type: sap.ui.mdc.Control, description: The control instance implementing IxState","oOldState":"type: object, description: The prior state"}},"!helpDescription":"Utility class for state handling of MDC controls. The <code>StateUtil<\/code> class is offering a generic way to retrieve states and set a desired state for a given MDC control. The <code>StateUtil<\/code> class is tightly coupled to the SAPUI5 flexibility integration of MDC controls. To use the APIs of <code>Stateutil<\/code>, the given MDC control instance needs to fully enable all available <code>p13nMode<\/code> options. This way, <code>Stateutil<\/code> can create the required changes and retrieve the relevant state of each control.","detachStateChange":{"!description":"Removes a previously attached state change event handler from the <code>StateUtil<\/code> class. The passed parameters must match those used for registration with {@link StateUtil#attachChange} beforehand.","!static":true,"!category":"function","!type":"fn(fnListener: fn())","parameters":{"fnListener":"type: function, description: fnFunction The handler function to detach from the event"}},"!proto":"sap.ui.base.Object","!category":"class","attachStateChange":{"!description":"Attaches an event handler to the <code>StateUtil<\/code>. The event handler may be fired every time a user triggers a personalization change for a control instance during runtime.","!static":true,"!category":"function","!type":"fn(fnListener: fn())","parameters":{"fnListener":"type: function, description: fnFunction The handler function to call when the event occurs"}}},"sap.ui.mdc.valuehelp.base.ListContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.ListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.Content.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.ListContent"},"sap.ui.mdc.enum.FieldDisplay":{"!description":"Defines the output of a <code>Field<\/code> or <code>FilterField<\/code> control.\n\nFor the <code>Field<\/code> control it defines how the <code>value<\/code> and <code>additionalValue<\/code> properties are formatted.\n\nFor the <code>FilterField<\/code> control it defines how key and description of equal conditions are formatted.","DescriptionValue":{"!description":"The description and the value (key) are displayed in the field. The value (key) is displayed after the description in brackets.","!category":"enum","!type":"String"},"Description":{"!description":"Only the description is displayed","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/FieldDisplay","ValueDescription":{"!description":"The value (key) and the description are displayed in the field. The description is displayed after the value (key) in brackets.","!category":"enum","!type":"String"},"Value":{"!description":"Only the value (key) is displayed","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.field.TokenizerDisplay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.TokenizerDisplay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tokenizer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.TokenizerDisplay"},"sap.ui.mdc.util.FilterUtil":{"!description":"Utility class used by mdc controls to create the filter statement","getConditionsMap":{"!description":"Returns internal conditions for a set of properties. Properties without a condition will be ignored. The resulting conditions are represented by the operation and by the values array. <b>Note:<\/b><br>The operation information will be returned as they are contained in the internal conditions model. This has to be considered, in case custom operations are used.","!static":"true","!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.FilterBar, aPropertyNames: Array) -> map"},"!module":"sap/ui/mdc/util/FilterUtil","!helpDescription":"Utility class used by mdc controls to create the filter statement","getFilterInfo":{"!description":"Creates the filter statements based on the externalize conditions.<br>","!static":"true","!category":"function","!type":"fn(vTypeProvider: sap.ui.mdc.Control | sap.ui.mdc.util.TypeUtil, mConditions: map, aPropertiesMetadata: Array, aIgnoreProperties: Array) -> Object"},"!category":"namespace","getPropertyByKey":{"!description":"Returns a specific PropertyInfo object by a given name<br>","!static":"true","!category":"function","!type":"fn(aPropertiesMetadata: Array, sKey: String) -> Object"}},"sap.ui.mdc.ChartP13nMode":{"!description":"Defines the personalization mode of the chart.","Item":{"!description":"Item personalization is enabled.","!category":"enum","!type":"String"},"Type":{"!description":"Chart type personalization is enabled.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/library","Filter":{"!description":"Filter personalization is enabled.","!category":"enum","!type":"String"},"Sort":{"!description":"Sort personalization is enabled.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.mdc.field.FieldValueHelp_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldValueHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldValueHelp"},"sap.ui.mdc.enum.PersistenceMode":{"!description":"Enumeration of the preferred persistence mode for personalization changes.","Auto":{"!description":"Personalization changes are created and implicitly persisted only in case no additional <code>VariantManagement<\/code> control reference could be found. If a <code>sap.ui.fl.variants.VariantManagement<\/code> has been found, it will be used instead.","!category":"enum","!type":"String"},"!module":"sap/ui/mdc/enum/PersistenceMode","!category":"static class","Transient":{"!description":"Personalization changes are not persisted","!category":"enum","!type":"String"},"Global":{"!description":"Personalization changes are created in the flexibility layer using <code>ignoreVariantManagement: true<\/code>","!category":"enum","!type":"String"}},"sap.ui.mdc.field.ListFieldHelpItem":{"!description":"An item that is used in the {@link sap.ui.mdc.field.ListFieldHelp ListFieldHelp} element if grouping is needed.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ListFieldHelpItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ListItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ListFieldHelpItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setGroupKey":{"!description":"Sets a new value for property {@link #getGroupKey groupKey}.\n\nKey of the group for what the items are grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oGroupKey?: Object) -> sap.ui.mdc.field.ListFieldHelpItem","parameters":{"oGroupKey":"type: any, description: New value for property <code>groupKey<\/code>"}},"!constructorDescription":"Constructor for a new ListFieldHelpItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getGroupKey groupKey} : any<\/li>\n<li>{@link #getGroupText groupText} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.ListItem#constructor sap.ui.core.ListItem}\ncan be used as well.","!module":"sap/ui/mdc/field/ListFieldHelpItem","!helpDescription":"An item that is used in the {@link sap.ui.mdc.field.ListFieldHelp ListFieldHelp} element if grouping is needed.","setGroupText":{"!description":"Sets a new value for property {@link #getGroupText groupText}.\n\nText of the group for what the items are grouped\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGroupText?: String) -> sap.ui.mdc.field.ListFieldHelpItem","parameters":{"sGroupText":"type: string, description: New value for property <code>groupText<\/code>"}},"!proto":"sap.ui.core.ListItem","!category":"class","getGroupKey":{"!description":"Gets current value of property {@link #getGroupKey groupKey}.\n\nKey of the group for what the items are grouped","!static":false,"!category":"function","!type":"fn() -> Object"},"getGroupText":{"!description":"Gets current value of property {@link #getGroupText groupText}.\n\nText of the group for what the items are grouped","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.mdc.valuehelp.base.FilterableListContent":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","getFilterBar":{"!description":"Gets content of aggregation {@link #getFilterBar filterBar}.\n\nFilterBar","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.vh.FilterBar"},"setFilterBar":{"!description":"Sets the aggregated {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn(oFilterBar: sap.ui.mdc.filterbar.vh.FilterBar) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"oFilterBar":"type: sap.ui.mdc.filterbar.vh.FilterBar, description: The filterBar to set"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.base.FilterableListContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setKeyPath":{"!description":"Sets a new value for property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sKeyPath?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sKeyPath":"type: string, description: New value for property <code>keyPath<\/code>"}},"setFilterFields":{"!description":"Sets a new value for property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFilterFields?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sFilterFields":"type: string, description: New value for property <code>filterFields<\/code>"}},"setDescriptionPath":{"!description":"Sets a new value for property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sDescriptionPath?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sDescriptionPath":"type: string, description: New value for property <code>descriptionPath<\/code>"}},"!proto":"sap.ui.mdc.valuehelp.base.ListContent","getDescriptionPath":{"!description":"Gets current value of property {@link #getDescriptionPath descriptionPath}.\n\nThe path of the description field in the content binding. If a table is used as content, this is the binding path of the description of the items.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeFilter":{"!description":"Removes an filter from the association named {@link #getFilters filters}.","!static":false,"!category":"function","!type":"fn(vFilter: Number | sap.ui.core.ID | sap.ui.mdc.IFilter) -> sap.ui.core.ID","parameters":{"vFilter":"type: int|sap.ui.core.ID|sap.ui.mdc.IFilter, description: The filter to be removed or its index or ID"}},"!category":"class","getFilterFields":{"!description":"Gets current value of property {@link #getFilterFields filterFields}.\n\nThe fields based on which the table data is filtered. For filtering the value of the <code>filterValue<\/code> property is used.\n\nIf set to <code>$search<\/code> and the used binding supports search requests, a $search request is used for filtering.\n\nIf set to one or more properties, the filters for these properties are used for filtering. These filters are set on the <code>ListBinding<\/code> used. The properties need to be separated by commas and enclosed by \"*\" characters. (<code>\"*Property1,Property2*\"<\/code>)\n\nIf it is empty, no suggestion is available.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.FilterableListContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.ListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"destroyFilterBar":{"!description":"Destroys the filterBar in the aggregation {@link #getFilterBar filterBar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.base.FilterableListContent"},"setGroup":{"!description":"Sets a new value for property {@link #getGroup group}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sGroup?: String) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"sGroup":"type: string, description: New value for property <code>group<\/code>"}},"!constructorDescription":"Constructor for a new <code>FilterableListContent<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFilterFields filterFields} : string (default: \"\")<\/li>\n<li>{@link #getKeyPath keyPath} : string (default: \"\")<\/li>\n<li>{@link #getDescriptionPath descriptionPath} : string (default: \"\")<\/li>\n<li>{@link #getGroup group} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterBar filterBar} : sap.ui.mdc.filterbar.vh.FilterBar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFilters filters} : (sap.ui.core.ID | sap.ui.mdc.IFilter)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.ListContent#constructor sap.ui.mdc.valuehelp.base.ListContent}\ncan be used as well.","removeAllFilters":{"!description":"Removes all the controls in the association named {@link #getFilters filters}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setCollectiveSearchSelect":{"!description":"Sets the collective Search to the <code>FilterBar<\/code>","!static":false,"!category":"function","!type":"fn(oCollectiveSearchSelect: sap.ui.mdc.filterbar.vh.CollectiveSearchSelect)","parameters":{"oCollectiveSearchSelect":"type: sap.ui.mdc.filterbar.vh.CollectiveSearchSelect, description: Collective search control"}},"!module":"sap/ui/mdc/valuehelp/base/FilterableListContent","!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element.","getGroup":{"!description":"Gets current value of property {@link #getGroup group}.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getFilters":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getFilters filters}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"addFilter":{"!description":"Adds some filter into the association {@link #getFilters filters}.","!static":false,"!category":"function","!type":"fn(vFilter: sap.ui.core.ID | sap.ui.mdc.IFilter) -> sap.ui.mdc.valuehelp.base.FilterableListContent","parameters":{"vFilter":"type: sap.ui.core.ID|sap.ui.mdc.IFilter, description: The filters to add; if empty, nothing is inserted"}},"getKeyPath":{"!description":"Gets current value of property {@link #getKeyPath keyPath}.\n\nThe path of the key field in the content binding. If a table is used as content, this is the binding path of the key of the items.\n\nIf not set, the FieldPath of the assigned field is used.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.mdc.valuehelp.content.MTable":{"!description":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.m.Table}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.valuehelp.content.MTable.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachContentUpdated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:contentUpdated contentUpdated} event of this <code>sap.ui.mdc.valuehelp.content.MTable<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.valuehelp.content.MTable<\/code> itself.\n\nThis event is fired if the content of the table is updated","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.valuehelp.content.MTable<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.mdc.valuehelp.base.FilterableListContent","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>MTable<\/code> content.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTable table} : sap.m.Table (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:contentUpdated contentUpdated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.valuehelp.base.FilterableListContent#constructor sap.ui.mdc.valuehelp.base.FilterableListContent}\ncan be used as well.","!module":"sap/ui/mdc/valuehelp/content/MTable","destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.valuehelp.content.MTable"},"fireContentUpdated":{"!description":"Fires event {@link #event:contentUpdated contentUpdated} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"Content for the {@link sap.ui.mdc.valuehelp.base.Container Container} element using a {@link sap.m.Table}.","getTable":{"!description":"Gets content of aggregation {@link #getTable table}.\n\nTable to be used in value help\n\n<b>Note:<\/b> Set the right selection mode (multiple selection or single selection) as it cannot be determined automatically for every case. (In type-ahead also for multi-value {@link sap.ui.mdc.FilterField FilterField} controls only single selection from table might be wanted.)","!static":false,"!category":"function","!type":"fn() -> sap.m.Table"},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!static":false,"!category":"function","!type":"fn(oTable: sap.m.Table) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"oTable":"type: sap.m.Table, description: The table to set"}},"detachContentUpdated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:contentUpdated contentUpdated} event of this <code>sap.ui.mdc.valuehelp.content.MTable<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.valuehelp.content.MTable","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}}},"sap.ui.mdc.field.MultiValueFieldItem":{"!description":"Base type for <code>MultiValueFieldItem<\/code> control.","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.MultiValueFieldItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nKey of the item.","!static":false,"!category":"function","!type":"fn() -> Object"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.MultiValueFieldItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>MultiValueFieldItem<\/code>.\n\nThe <code>MultiValueField<\/code> control holds its values as items. The <code>MultiValueFieldItem<\/code> element defines these items.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : any (default)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/mdc/field/MultiValueFieldItem","!helpDescription":"Base type for <code>MultiValueFieldItem<\/code> control.","!proto":"sap.ui.core.Element","!category":"class","setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDescription of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.ui.mdc.field.MultiValueFieldItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDescription of the item.","!static":false,"!category":"function","!type":"fn() -> String"},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nKey of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oKey: Object) -> sap.ui.mdc.field.MultiValueFieldItem","parameters":{"oKey":"type: any, description: New value for property <code>key<\/code>"}}},"sap.ui.mdc.util.PromiseCache":{"!description":"Provides a caching mechanism for promises. This API features Promise cancellation: resolve or reject handlers won't be called after removal of the promise, cache destruction or manual cancellation. Destroying the cache will cancel all registered promises and delete references. Convenience methods for promise creation, wrapping and replacement are offered.","add":{"!description":"Adds a promise to the promise cache using a string identifier and a creation method or given <code>Promise<\/code>. Calling add using an already existing identifier will cancel and replace the existing promise.\n\nNote: All unsettled promises will be cancelled on removal or cache destruction A given creation method will receive the following arguments on execution: <ul> <li><code>oPromise<\/code> ­- The newly created Promise<\/li> <li><code>fnResolve<\/code> ­- Resolve method for the newly created Promise<\/li> <li><code>fnReject<\/code> ­- Reject method for the newly created Promise<\/li> <li><code>fnRemove<\/code> ­- Remove method for the newly created Promise<\/li> <\/ul>","!static":"true","!category":"function","!type":"fn(sName?: String, fnCreate?: function(oPromise,fnResolve,fnReject,fnRemove) | Promise) -> Promise"},"cancel":{"!description":"Cancels an unsettled promise from the promise cache. Calling cancel twice is a no-op.","!static":"true","!category":"function","!type":"fn(vPromise: String | Promise) -> Promise"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.util.PromiseCache.","!static":"true","!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"resolve":{"!description":"Resolves an existing promise from the promise cache","!static":"true","!category":"function","!type":"fn(vPromise: String | Promise, oValue?: String) -> Promise"},"clear":{"!description":"Provides cleanup functionality for the promise cache","!static":"true","!category":"function","!type":"fn()"},"destroy":{"!description":"Provides cleanup functionality for the promise cache","!static":"true","!category":"function","!type":"fn()"},"!category":"namespace","retrieveMany":{"!description":"Retrieves multiple promises from the promise cache Will return all cached promises if no arguments are given","!static":"true","!category":"function","!type":"fn(sName: String) -> Array"},"remove":{"!description":"Removes an existing promise from the promise cache","!static":"true","!category":"function","!type":"fn(vPromise: String | Promise)"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.util.PromiseCache with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":"true","!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()"},"!module":"sap/ui/mdc/util/PromiseCache","!helpDescription":"Provides a caching mechanism for promises. This API features Promise cancellation: resolve or reject handlers won't be called after removal of the promise, cache destruction or manual cancellation. Destroying the cache will cancel all registered promises and delete references. Convenience methods for promise creation, wrapping and replacement are offered.","reject":{"!description":"Rejects an existing promise from the promise cache","!static":"true","!category":"function","!type":"fn(vPromise: String | Promise, oValue?: String) -> Promise"},"retrieve":{"!description":"Retrieves an existing promise from the promise cache. Automatically creates and returns a new promise if <code>fnCreate<\/code> is given.\n\nA given creation method will receive the following arguments on execution: <ul> <li><code>oPromise<\/code> ­- The newly created Promise<\/li> <li><code>fnResolve<\/code> ­- Resolve method for the newly created Promise<\/li> <li><code>fnReject<\/code> ­- Reject method for the newly created Promise<\/li> <li><code>fnRemove<\/code> ­- Remove method for the newly created Promise<\/li> <\/ul>","!static":"true","!category":"function","!type":"fn(sName: String, fnCreate?: function(oPromise,fnResolve,fnReject,fnRemove) | Promise) -> Promise"}},"sap.ui.mdc.valuehelp.base.Content_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.base.Content with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.base.Content"},"sap.ui.mdc.enum.OutParameterMode":{"!description":"Defines the mode of the <code>OutParameter<\/code> element.","!module":"sap/ui/mdc/enum/OutParameterMode","WhenEmpty":{"!description":"The value in the<code>OutParameter<\/code> element is only set if it was empty before","!category":"enum","!type":"String"},"!category":"static class","Always":{"!description":"The value in the <code>OutParameter<\/code> element is always set","!category":"enum","!type":"String"}},"sap.ui.mdc.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldInfoBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.Link"},"sap.ui.mdc.filterbar.FilterBarBase":{"attachFiltersChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filtersChanged filtersChanged} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself.\n\nThis event is fired after either a filter value or the visibility of a filter item has been changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowMessages":{"!description":"Sets a new value for property {@link #getShowMessages showMessages}.\n\nDisplays possible errors during the search in a message box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMessages?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bShowMessages":"type: boolean, description: New value for property <code>showMessages<\/code>"}},"setPropertyInfo":{"!description":"Sets a new value for property {@link #getPropertyInfo propertyInfo}.\n\nSpecifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(oPropertyInfo?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oPropertyInfo":"type: object, description: New value for property <code>propertyInfo<\/code>"}},"getVariantBackreference":{"!description":"ID of the element which is the current target of the association {@link #getVariantBackreference variantBackreference}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getSearch":{"!description":"Returns the value of the basic search condition.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowGoButton":{"!description":"Gets current value of property {@link #getShowGoButton showGoButton}.\n\nDetermines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"triggerSearch":{"!description":"Triggers the search.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getAssignedFiltersText":{"!description":"Returns a summary string that contains information about the filters currently assigned. The method returns the text summary for the expanded and collapsed states of the filter bar.<br> <br> <b>Example for collapsed filter bar<\/b>:<br> <i>3 filters active: Company Code, Fiscal Year, Customer<\/i>\n\n<b>Example for expanded filter bar<\/b>:<br> <i>3 filters active (1 hidden)<\/i>","!static":false,"!category":"function","!type":"fn() -> map"},"!description":"The <code>FilterBarBase<\/code> control is used as a faceless base class for common functionality of any MDC FilterBar derivation.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.filterbar.FilterBarBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertFilterItem":{"!description":"Inserts a filterItem into the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.mdc.FilterField, iIndex: Number) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the filterItem should be inserted at; for a negative value of <code>iIndex<\/code>, the filterItem is inserted at position 0; for a value greater than the current size of the aggregation, the filterItem is inserted at the last position","oFilterItem":"type: sap.ui.mdc.FilterField, description: The filterItem to insert; if empty, nothing is inserted"}},"fireFiltersChanged":{"!description":"Fires event {@link #event:filtersChanged filtersChanged} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.FilterBarBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/ui/mdc/filterbar/FilterBarBase","!helpDescription":"The <code>FilterBarBase<\/code> control is used as a faceless base class for common functionality of any MDC FilterBar derivation.","addFilterItem":{"!description":"Adds some filterItem to the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.mdc.FilterField) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oFilterItem":"type: sap.ui.mdc.FilterField, description: The filterItem to add; if empty, nothing is inserted"}},"getAssignedFilterNames":{"!description":"Returns the labels of all filters with a value assignment.\n\nNote: filters annotated with hiddenFilters will not be considered","!static":false,"!category":"function","!type":"fn() -> Array"},"setIgnoreQueuing":{"!description":"Determines whether the default behavior of the <code>suspendSelection<\/code> property is overruled. This can only happen during the suspension of the selection. If this property is set to <code>true<\/code>, a possible queue of search requests is ignored during the final <code>suspendSelection<\/code> operation. Once the suspension of the selection is over, this value will be set to <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValue: Boolean)","parameters":{"bValue":"type: boolean, description: Indicates if set to <code>true<\/code> that the default behavior is to be ignored"}},"setLiveMode":{"!description":"Sets a new value for property {@link #getLiveMode liveMode}.\n\nTriggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLiveMode?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bLiveMode":"type: boolean, description: New value for property <code>liveMode<\/code>"}},"getShowMessages":{"!description":"Gets current value of property {@link #getShowMessages showMessages}.\n\nDisplays possible errors during the search in a message box.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInternalConditions":{"!description":"Returns the conditions of the inner condition model.","!static":false,"!category":"function","!type":"fn() -> map"},"waitForInitialization":{"!description":"Returns the state of initialization. This method does not trigger the retrieval of the metadata.","!static":false,"!category":"function","!type":"fn() -> Promise"},"!proto":"sap.ui.mdc.Control","!category":"class","setVariantBackreference":{"!description":"Sets the associated {@link #getVariantBackreference variantBackreference}.","!static":false,"!category":"function","!type":"fn(oVariantBackreference: sap.ui.core.ID | sap.ui.fl.variants.VariantManagement) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oVariantBackreference":"type: sap.ui.core.ID|sap.ui.fl.variants.VariantManagement, description: ID of an element which becomes the new target of this variantBackreference association; alternatively, an element instance may be given"}},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getDelegate":{"!description":"Gets current value of property {@link #getDelegate delegate}.\n\nDefines the path to the metadata retrieval class for the <code>FilterBarBase<\/code> control. It basically identifies the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} file that provides the required APIs to create the filter bar content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> <b>Note:<\/b> This property must not be bound.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!constructorDescription":"Constructor for a new FilterBarBase.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelegate delegate} : object (default: ...see text or source)<\/li>\n<li>{@link #getLiveMode liveMode} : boolean (default: false)<\/li>\n<li>{@link #getShowMessages showMessages} : boolean (default: true)<\/li>\n<li>{@link #getShowGoButton showGoButton} : boolean (default: true)<\/li>\n<li>{@link #getFilterConditions filterConditions} : object (default: {})<\/li>\n<li>{@link #getPropertyInfo propertyInfo} : object (default: [])<\/li>\n<li>{@link #getSuspendSelection suspendSelection} : boolean (default: false)<\/li>\n<li>{@link #get_filterCount _filterCount} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.ui.mdc.FilterField[] (default)<\/li>\n<li>{@link #getBasicSearchField basicSearchField} : sap.ui.mdc.FilterField<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getVariantBackreference variantBackreference} : (sap.ui.core.ID | sap.ui.fl.variants.VariantManagement)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filtersChanged filtersChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.Control#constructor sap.ui.mdc.Control}\ncan be used as well.","removeFilterItem":{"!description":"Removes a filterItem from the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn(vFilterItem: Number | String | sap.ui.mdc.FilterField) -> sap.ui.mdc.FilterField | null","parameters":{"vFilterItem":"type: int|string|sap.ui.mdc.FilterField, description: The filterItem to remove or its index or id"}},"getCurrentState":{"!description":"Returns the externalized conditions of the inner condition model. This method may only be called, once the <code>initialzed<\/code> is resolved. <b>Note:<\/b> This API may return attributes corresponding to the <code>p13nMode<\/code> property configuration.","!static":false,"!category":"function","!type":"fn() -> Object"},"initialized":{"!description":"Returns the state of initialization. This method triggers the retrieval of the metadata.","!static":false,"!category":"function","!type":"fn() -> Promise"},"getBasicSearchField":{"!description":"Gets content of aggregation {@link #getBasicSearchField basicSearchField}.\n\nContains the optional basic search field.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.FilterField"},"validate":{"!description":"Returns a promise for the asynchronous validation of filters.","!static":false,"!category":"function","!type":"fn(bSuppressSearch: Boolean) -> Promise","parameters":{"bSuppressSearch":"type: boolean, description: Determines if the <code>search<\/code> event is triggered after successful validation"}},"setInternalConditions":{"!description":"Assigns conditions to the inner condition model. <br><b>Note:<\/b>This method is only called for filling the in parameters for value help scenarios.","!static":false,"!category":"function","!type":"fn(mConditions: map)","parameters":{"mConditions":"type: map, description: A map containing the conditions"}},"getFilterItems":{"!description":"Gets content of aggregation {@link #getFilterItems filterItems}.\n\nContains all the displayed {@link sap.ui.mdc.FilterField filter fields} of the <code>FilterBarBase<\/code> control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterField]"},"removeAllFilterItems":{"!description":"Removes all the controls from the aggregation {@link #getFilterItems filterItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.FilterField]"},"setBasicSearchField":{"!description":"Sets the aggregated {@link #getBasicSearchField basicSearchField}.","!static":false,"!category":"function","!type":"fn(oBasicSearchField: sap.ui.mdc.FilterField) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oBasicSearchField":"type: sap.ui.mdc.FilterField, description: The basicSearchField to set"}},"destroyFilterItems":{"!description":"Destroys all the filterItems in the aggregation {@link #getFilterItems filterItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.FilterBarBase"},"getConditions":{"!description":"Returns the external conditions.","!static":false,"!category":"function","!type":"fn() -> map"},"detachFiltersChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filtersChanged filtersChanged} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself.\n\nThis event is fired when the Go button is pressed or after a condition change, when <code>liveMode<\/code> is active. <b>Note<\/b>: this event should never be executed programmatically. It is triggered internally by the filter bar after a <code>triggerSearch<\/code> is executed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.filterbar.FilterBarBase<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getFilterConditions":{"!description":"Gets current value of property {@link #getFilterConditions filterConditions}.\n\nSpecifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getIgnoreQueuing":{"!description":"Determines whether the default behavior of the <code>suspendSelection<\/code> property is overruled.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDelegate":{"!description":"Sets a new value for property {@link #getDelegate delegate}.\n\nDefines the path to the metadata retrieval class for the <code>FilterBarBase<\/code> control. It basically identifies the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} file that provides the required APIs to create the filter bar content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> <b>Note:<\/b> This property must not be bound.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(oDelegate?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oDelegate":"type: object, description: New value for property <code>delegate<\/code>"}},"getLiveMode":{"!description":"Gets current value of property {@link #getLiveMode liveMode}.\n\nTriggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.ui.mdc.FilterField<\/code> in the aggregation {@link #getFilterItems filterItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.ui.mdc.FilterField) -> Number","parameters":{"oFilterItem":"type: sap.ui.mdc.FilterField, description: The filterItem whose index is looked for"}},"getSuspendSelection":{"!description":"Gets current value of property {@link #getSuspendSelection suspendSelection}.\n\nIf set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyBasicSearchField":{"!description":"Destroys the basicSearchField in the aggregation {@link #getBasicSearchField basicSearchField}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.filterbar.FilterBarBase"},"setFilterConditions":{"!description":"Sets a new value for property {@link #getFilterConditions filterConditions}.\n\nSpecifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterConditions?: Object) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"oFilterConditions":"type: object, description: New value for property <code>filterConditions<\/code>"}},"setShowGoButton":{"!description":"Sets a new value for property {@link #getShowGoButton showGoButton}.\n\nDetermines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGoButton?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bShowGoButton":"type: boolean, description: New value for property <code>showGoButton<\/code>"}},"getPropertyInfo":{"!description":"Gets current value of property {@link #getPropertyInfo propertyInfo}.\n\nSpecifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setSuspendSelection":{"!description":"Sets a new value for property {@link #getSuspendSelection suspendSelection}.\n\nIf set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSuspendSelection?: Boolean) -> sap.ui.mdc.filterbar.FilterBarBase","parameters":{"bSuspendSelection":"type: boolean, description: New value for property <code>suspendSelection<\/code>"}}},"sap.ui.mdc.ActionToolbar":{"getBegin":{"!description":"Gets content of aggregation {@link #getBegin begin}.\n\nContent shown at the begin of the toolbar (e.g. Title).","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.mdc.actiontoolbar.ActionToolbarAction, iIndex: Number) -> sap.ui.mdc.ActionToolbar","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.mdc.actiontoolbar.ActionToolbarAction, description: The action to insert; if empty, nothing is inserted"}},"destroyEnd":{"!description":"Destroys all the end in the aggregation {@link #getEnd end}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ActionToolbar"},"!proto":"sap.m.OverflowToolbar","!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nFurther actions in the toolbar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.actiontoolbar.ActionToolbarAction]"},"indexOfBetween":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getBetween between}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBetween: sap.ui.core.Control) -> Number","parameters":{"oBetween":"type: sap.ui.core.Control, description: The between whose index is looked for"}},"insertBegin":{"!description":"Inserts a begin into the aggregation {@link #getBegin begin}.","!static":false,"!category":"function","!type":"fn(oBegin: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.ActionToolbar","parameters":{"oBegin":"type: sap.ui.core.Control, description: The begin to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the begin should be inserted at; for a negative value of <code>iIndex<\/code>, the begin is inserted at position 0; for a value greater than the current size of the aggregation, the begin is inserted at the last position"}},"destroyBegin":{"!description":"Destroys all the begin in the aggregation {@link #getBegin begin}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ActionToolbar"},"destroyBetween":{"!description":"Destroys all the between in the aggregation {@link #getBetween between}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ActionToolbar"},"addEnd":{"!description":"Adds some end to the aggregation {@link #getEnd end}.","!static":false,"!category":"function","!type":"fn(oEnd: sap.ui.core.Control) -> sap.ui.mdc.ActionToolbar","parameters":{"oEnd":"type: sap.ui.core.Control, description: The end to add; if empty, nothing is inserted"}},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.mdc.actiontoolbar.ActionToolbarAction) -> sap.ui.mdc.ActionToolbar","parameters":{"oAction":"type: sap.ui.mdc.actiontoolbar.ActionToolbarAction, description: The action to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new ActionToolbar.<br>\n<b>Note:<\/b><br>\nThe control is experimental and the API / behavior is not finalized. It should only be used internally in other mdc controls (e.g.\nchart/table).<br>\nThe content aggregation of the control must not be used.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUseAsHeader useAsHeader} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBegin begin} : sap.ui.core.Control[]<\/li>\n<li>{@link #getBetween between} : sap.ui.core.Control[]<\/li>\n<li>{@link #getActions actions} : sap.ui.mdc.actiontoolbar.ActionToolbarAction[] (default)<\/li>\n<li>{@link #getEnd end} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.OverflowToolbar#constructor sap.m.OverflowToolbar}\ncan be used as well.","insertBetween":{"!description":"Inserts a between into the aggregation {@link #getBetween between}.","!static":false,"!category":"function","!type":"fn(oBetween: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.ActionToolbar","parameters":{"oBetween":"type: sap.ui.core.Control, description: The between to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the between should be inserted at; for a negative value of <code>iIndex<\/code>, the between is inserted at position 0; for a value greater than the current size of the aggregation, the between is inserted at the last position"}},"removeEnd":{"!description":"Removes a end from the aggregation {@link #getEnd end}.","!static":false,"!category":"function","!type":"fn(vEnd: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vEnd":"type: int|string|sap.ui.core.Control, description: The end to remove or its index or id"}},"getUseAsHeader":{"!description":"Gets current value of property {@link #getUseAsHeader useAsHeader}.\n\nDetermines whether the toolbar is used as header (e.g. for a table).\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.mdc.actiontoolbar.ActionToolbarAction<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.mdc.actiontoolbar.ActionToolbarAction) -> Number","parameters":{"oAction":"type: sap.ui.mdc.actiontoolbar.ActionToolbarAction, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.mdc.actiontoolbar.ActionToolbarAction]"},"!description":"The column for the metadata driven table, that hold the template to be shown when the rows has data.","removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.mdc.actiontoolbar.ActionToolbarAction) -> sap.ui.mdc.actiontoolbar.ActionToolbarAction | null","parameters":{"vAction":"type: int|string|sap.ui.mdc.actiontoolbar.ActionToolbarAction, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.ActionToolbar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeBegin":{"!description":"Removes a begin from the aggregation {@link #getBegin begin}.","!static":false,"!category":"function","!type":"fn(vBegin: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vBegin":"type: int|string|sap.ui.core.Control, description: The begin to remove or its index or id"}},"removeAllEnd":{"!description":"Removes all the controls from the aggregation {@link #getEnd end}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.ActionToolbar"},"indexOfBegin":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getBegin begin}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBegin: sap.ui.core.Control) -> Number","parameters":{"oBegin":"type: sap.ui.core.Control, description: The begin whose index is looked for"}},"removeAllBegin":{"!description":"Removes all the controls from the aggregation {@link #getBegin begin}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getEnd":{"!description":"Gets content of aggregation {@link #getEnd end}.\n\nContent at the end of the toolbar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.ActionToolbar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getBetween":{"!description":"Gets content of aggregation {@link #getBetween between}.\n\nContent shown between the title and actions on the toolbar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfEnd":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getEnd end}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oEnd: sap.ui.core.Control) -> Number","parameters":{"oEnd":"type: sap.ui.core.Control, description: The end whose index is looked for"}},"!module":"sap/ui/mdc/ActionToolbar","addBetween":{"!description":"Adds some between to the aggregation {@link #getBetween between}.","!static":false,"!category":"function","!type":"fn(oBetween: sap.ui.core.Control) -> sap.ui.mdc.ActionToolbar","parameters":{"oBetween":"type: sap.ui.core.Control, description: The between to add; if empty, nothing is inserted"}},"!helpDescription":"The column for the metadata driven table, that hold the template to be shown when the rows has data.","setUseAsHeader":{"!description":"Sets a new value for property {@link #getUseAsHeader useAsHeader}.\n\nDetermines whether the toolbar is used as header (e.g. for a table).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUseAsHeader?: Boolean) -> sap.ui.mdc.ActionToolbar","parameters":{"bUseAsHeader":"type: boolean, description: New value for property <code>useAsHeader<\/code>"}},"insertEnd":{"!description":"Inserts a end into the aggregation {@link #getEnd end}.","!static":false,"!category":"function","!type":"fn(oEnd: sap.ui.core.Control, iIndex: Number) -> sap.ui.mdc.ActionToolbar","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the end should be inserted at; for a negative value of <code>iIndex<\/code>, the end is inserted at position 0; for a value greater than the current size of the aggregation, the end is inserted at the last position","oEnd":"type: sap.ui.core.Control, description: The end to insert; if empty, nothing is inserted"}},"removeAllBetween":{"!description":"Removes all the controls from the aggregation {@link #getBetween between}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeBetween":{"!description":"Removes a between from the aggregation {@link #getBetween between}.","!static":false,"!category":"function","!type":"fn(vBetween: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vBetween":"type: int|string|sap.ui.core.Control, description: The between to remove or its index or id"}},"addBegin":{"!description":"Adds some begin to the aggregation {@link #getBegin begin}.","!static":false,"!category":"function","!type":"fn(oBegin: sap.ui.core.Control) -> sap.ui.mdc.ActionToolbar","parameters":{"oBegin":"type: sap.ui.core.Control, description: The begin to add; if empty, nothing is inserted"}}},"sap.ui.mdc.valuehelp.content.MTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.MTable"},"sap.ui.mdc.valuehelp.content.MDCTable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.MDCTable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.base.FilterableListContent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.MDCTable"},"sap.ui.mdc.field.FieldValueHelpDelegate_obj":{"!type":"fn()","prototype":"sap.ui.mdc.field.FieldValueHelpDelegate"},"sap.ui.mdc.field.CustomFieldHelp":{"!description":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that allows you to add custom content.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.CustomFieldHelp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.mdc.field.CustomFieldHelp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.mdc.field.CustomFieldHelp<\/code> itself.\n\nThis event is fired before the field help opens.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.mdc.field.CustomFieldHelp<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent of the field help.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.mdc.field.FieldHelpBase","!category":"class","fireSelectEvent":{"!description":"Closes the field help and fires the <code>select<\/code> event of the field help.","!static":false,"!category":"function","!type":"fn(aConditions: [Object])","parameters":{"aConditions":"type: object[], description: Selected conditions"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.CustomFieldHelp with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.field.FieldHelpBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new CustomFieldHelp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.mdc.field.FieldHelpBase#constructor sap.ui.mdc.field.FieldHelpBase}\ncan be used as well.","!module":"sap/ui/mdc/field/CustomFieldHelp","!helpDescription":"A field help used in the <code>FieldHelp<\/code> association in <code>FieldBase<\/code> controls that allows you to add custom content.","fireBeforeOpen":{"!description":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.field.CustomFieldHelp"},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.mdc.field.CustomFieldHelp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.mdc.field.CustomFieldHelp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}}},"sap.ui.mdc.p13n.AdaptationProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.AdaptationProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.ui.mdc.p13n.AdaptationProvider"},"sap.ui.mdc.condition.ConditionModel":{"!description":"JSON based Model for {@link sap.ui.mdc.FilterField FilterField} controls. The model stores the entered values as {@link sap.ui.mdc.condition.ConditionObject ConditionObjects}.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.condition.ConditionModel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.model.json.JSONModel","!category":"class","createCondition":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the sap.ui.mdc.condition.Condition.createCondition<br>creates a condition instance","!static":false,"!category":"function","!type":"fn(sFieldPath: String, sOperator: String, aValues: [Object]) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sOperator":"type: string, description: the operator for the condition","aValues":"type: any[], description: the array of values for the condition","sFieldPath":"type: string, description: the <code>FieldPath<\/code> name of the condition"}},"getConditions":{"!description":"Returns conditions for a specified <codeFieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> [sap.ui.mdc.condition.ConditionObject]","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition"}},"addCondition":{"!description":"Adds a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oCondition: sap.ui.mdc.condition.ConditionObject, bForce: Boolean) -> sap.ui.mdc.condition.ConditionModel","parameters":{"bForce":"type: boolean, description: if set the condition will be added even if it already exist","sFieldPath":"type: string, description: fieldPath of the condition","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be added"}},"createItemCondition":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the sap.ui.mdc.condition.Condition.createItemCondition<br>creates a condition instance for the item-condition","!static":false,"!category":"function","!type":"fn(sFieldPath: String, sKey: String, sDescription: String) -> sap.ui.mdc.condition.ConditionObject","parameters":{"sDescription":"type: string, description: the description of the operator","sKey":"type: string, description: the operator for the condition","sFieldPath":"type: string, description: the <code>FieldPath<\/code> name of the condition"}},"getAllConditions":{"!description":"Returns all conditions.","!static":false,"!category":"function","!type":"fn(vFieldPath: [String | String]) -> Object","parameters":{"vFieldPath":"type: string|string[], description: fieldPath for that conditions are requested"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.condition.ConditionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.json.JSONModel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeCondition":{"!description":"Removes a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, vCondition: Number | sap.ui.mdc.condition.ConditionObject) -> Boolean","parameters":{"vCondition":"type: int|sap.ui.mdc.condition.ConditionObject, description: condition or index of the condition","sFieldPath":"type: string, description: fieldPath of the condition"}},"setConditions":{"!description":"Sets conditions. All already existing conditions will be removed.","!static":false,"!category":"function","!type":"fn(oConditions: Object) -> sap.ui.mdc.condition.ConditionModel","parameters":{"oConditions":"type: object, description: object of conditions for corresponding fieldPaths"}},"!module":"sap/ui/mdc/condition/ConditionModel","!helpDescription":"JSON based Model for {@link sap.ui.mdc.FilterField FilterField} controls. The model stores the entered values as {@link sap.ui.mdc.condition.ConditionObject ConditionObjects}.","insertCondition":{"!description":"Inserts a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, iIndex: Number, oCondition: sap.ui.mdc.condition.ConditionObject, bForce: Boolean) -> sap.ui.mdc.condition.ConditionModel","parameters":{"bForce":"type: boolean, description: if set the condition will be inserted even if it already exist","sFieldPath":"type: string, description: fieldPath of the condition","iIndex":"type: int, description: index where the condition should be inserted","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be inserted"}},"merge":{"!description":"merge conditions from the source <code>ConditionModel<\/code> into this instance","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oSourceConditionModel: sap.ui.mdc.condition.ConditionModel, sSourceFieldPath: String)","parameters":{"sSourceFieldPath":"type: string, description: specifies which conditions from the source should be merged.","sFieldPath":"type: string, description: specifies which conditions should be removed and replaced by the conditions from the source <code>ConditionModel<\/code>","oSourceConditionModel":"type: sap.ui.mdc.condition.ConditionModel, description: source <code>ConditionModel<\/code>."}},"clone":{"!description":"creates a clone of the <code>ConditionModel<\/code> which contains the conditions for the <code>sFieldPath<\/code> parameter","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> sap.ui.mdc.condition.ConditionModel","parameters":{"sFieldPath":"type: string, description: specifies which conditions should be copied into the clone. If not specified all conditions will be copied."}},"indexOf":{"!description":"Determines the index of a condition for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String, oCondition: sap.ui.mdc.condition.ConditionObject, fnNormalizeCondition?: function(Object) : Object) -> Number","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition","fnNormalizeCondition":"type: function(Object) : Object, description: normalization method for condition comparison","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: condition to be searched"}},"removeAllConditions":{"!description":"Removes all conditions for a specified <code>FieldPath<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldPath: String) -> sap.ui.mdc.condition.ConditionModel","parameters":{"sFieldPath":"type: string, description: fieldPath of the condition"}}},"module:sap/ui/mdc/LinkDelegate":{"!description":"Base delegate for {@link sap.ui.mdc.Link}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Link}. <b>Note:<\/b> The delegate is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","!module":"sap/ui/mdc/LinkDelegate","!helpDescription":"Base delegate for {@link sap.ui.mdc.Link}. Extend this object in your project to use all functionalities of the {@link sap.ui.mdc.Link}. <b>Note:<\/b> The delegate is experimental and the API/behaviour is not finalized and hence this should not be used for productive usage.","module:sap/ui/mdc/LinkDelegate":"module:sap/ui/mdc/LinkDelegate","!category":"namespace"},"sap.ui.mdc.p13n.modules.DefaultProviderRegistry":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.p13n.modules.DefaultProviderRegistry with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"_retrieveDefaultProvider":{"!static":false,"!category":"function","!type":"fn(sPersistenceMode: sap.ui.mdc.enum.PersistenceMode) -> Promise","parameters":{"sPersistenceMode":"type: sap.ui.mdc.enum.PersistenceMode, description: Desired persistence mode for the retrieved persistence provider"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.p13n.modules.DefaultProviderRegistry.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new DefaultProviderRegistry.\nThis registry creates and manages default persistence providers for each persistence mode.\nIt is intended for use cases where no dedicated provider can or should be created by an application.\nThe DefaultProviderRegistry currently resides in the Engine and must never be called separately.","!module":"sap/ui/mdc/p13n/modules/DefaultProviderRegistry","!proto":"sap.ui.base.Object","detach":{"!static":false,"!category":"function","!type":"fn(vControl: sap.ui.mdc.Control | String)","parameters":{"vControl":"type: sap.ui.mdc.Control|string, description: The control instance or a control id."}},"!category":"class","attach":{"!static":false,"!category":"function","!type":"fn(vElement: sap.ui.core.Element | String, sPersistenceMode: sap.ui.mdc.enum.PersistenceMode) -> sap.ui.mdc.p13n.PersistenceProvider","parameters":{"vElement":"type: sap.ui.core.Element|string, description: The control instance or an element id.","sPersistenceMode":"type: sap.ui.mdc.enum.PersistenceMode, description: Desired persistence mode for the retrieved persistence provider"}},"getInstance":{"!static":true,"!category":"function","!type":"fn()"}},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.mdc.chart.SelectionDetailsActions":{"destroyDetailsActions":{"!description":"Destroys all the detailsActions in the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"getDetailsItemActions":{"!description":"Gets content of aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"removeAllActionGroups":{"!description":"Removes all the controls from the aggregation {@link #getActionGroups actionGroups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!proto":"sap.ui.core.Element","removeDetailsItemAction":{"!description":"Removes a detailsItemAction from the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn(vDetailsItemAction: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vDetailsItemAction":"type: int|string|sap.ui.core.Item, description: The detailsItemAction to remove or its index or id"}},"!category":"class","indexOfDetailsItemAction":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getDetailsItemActions detailsItemActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDetailsItemAction: sap.ui.core.Item) -> Number","parameters":{"oDetailsItemAction":"type: sap.ui.core.Item, description: The detailsItemAction whose index is looked for"}},"insertActionGroup":{"!description":"Inserts a actionGroup into the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn(oActionGroup: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oActionGroup":"type: sap.ui.core.Item, description: The actionGroup to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the actionGroup should be inserted at; for a negative value of <code>iIndex<\/code>, the actionGroup is inserted at position 0; for a value greater than the current size of the aggregation, the actionGroup is inserted at the last position"}},"addActionGroup":{"!description":"Adds some actionGroup to the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn(oActionGroup: sap.ui.core.Item) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oActionGroup":"type: sap.ui.core.Item, description: The actionGroup to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new SelectionDetailsActions.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getDetailsItemActions detailsItemActions} : sap.ui.core.Item[]<\/li>\n<li>{@link #getDetailsActions detailsActions} : sap.ui.core.Item[]<\/li>\n<li>{@link #getActionGroups actionGroups} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","insertDetailsAction":{"!description":"Inserts a detailsAction into the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn(oDetailsAction: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the detailsAction should be inserted at; for a negative value of <code>iIndex<\/code>, the detailsAction is inserted at position 0; for a value greater than the current size of the aggregation, the detailsAction is inserted at the last position","oDetailsAction":"type: sap.ui.core.Item, description: The detailsAction to insert; if empty, nothing is inserted"}},"insertDetailsItemAction":{"!description":"Inserts a detailsItemAction into the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn(oDetailsItemAction: sap.ui.core.Item, iIndex: Number) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the detailsItemAction should be inserted at; for a negative value of <code>iIndex<\/code>, the detailsItemAction is inserted at position 0; for a value greater than the current size of the aggregation, the detailsItemAction is inserted at the last position","oDetailsItemAction":"type: sap.ui.core.Item, description: The detailsItemAction to insert; if empty, nothing is inserted"}},"getActionGroups":{"!description":"Gets content of aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!description":"The SelectionDetailsActions are used to provide additional functionality to the Details popover.","getDetailsActions":{"!description":"Gets content of aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"removeAllDetailsActions":{"!description":"Removes all the controls from the aggregation {@link #getDetailsActions detailsActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.chart.SelectionDetailsActions.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addDetailsItemAction":{"!description":"Adds some detailsItemAction to the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn(oDetailsItemAction: sap.ui.core.Item) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oDetailsItemAction":"type: sap.ui.core.Item, description: The detailsItemAction to add; if empty, nothing is inserted"}},"indexOfActionGroup":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getActionGroups actionGroups}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oActionGroup: sap.ui.core.Item) -> Number","parameters":{"oActionGroup":"type: sap.ui.core.Item, description: The actionGroup whose index is looked for"}},"destroyActionGroups":{"!description":"Destroys all the actionGroups in the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"addDetailsAction":{"!description":"Adds some detailsAction to the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn(oDetailsAction: sap.ui.core.Item) -> sap.ui.mdc.chart.SelectionDetailsActions","parameters":{"oDetailsAction":"type: sap.ui.core.Item, description: The detailsAction to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.SelectionDetailsActions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeAllDetailsItemActions":{"!description":"Removes all the controls from the aggregation {@link #getDetailsItemActions detailsItemActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"destroyDetailsItemActions":{"!description":"Destroys all the detailsItemActions in the aggregation {@link #getDetailsItemActions detailsItemActions}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.chart.SelectionDetailsActions"},"!module":"sap/ui/mdc/chart/SelectionDetailsActions","!helpDescription":"The SelectionDetailsActions are used to provide additional functionality to the Details popover.","indexOfDetailsAction":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getDetailsActions detailsActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDetailsAction: sap.ui.core.Item) -> Number","parameters":{"oDetailsAction":"type: sap.ui.core.Item, description: The detailsAction whose index is looked for"}},"removeActionGroup":{"!description":"Removes a actionGroup from the aggregation {@link #getActionGroups actionGroups}.","!static":false,"!category":"function","!type":"fn(vActionGroup: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vActionGroup":"type: int|string|sap.ui.core.Item, description: The actionGroup to remove or its index or id"}},"removeDetailsAction":{"!description":"Removes a detailsAction from the aggregation {@link #getDetailsActions detailsActions}.","!static":false,"!category":"function","!type":"fn(vDetailsAction: Number | String | sap.ui.core.Item) -> sap.ui.core.Item | null","parameters":{"vDetailsAction":"type: int|string|sap.ui.core.Item, description: The detailsAction to remove or its index or id"}}},"sap.ui.mdc.field.FieldBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.FieldBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.field.FieldBase"},"sap.ui":{"!category":"namespace","mdc":"sap.ui.mdc"},"sap.ui.mdc.p13n.modification.ModificationHandler":{"!description":"Interface to implement different modification layers (E.g. Flex-explicit, Flex-implicit, transient)","!module":"sap/ui/mdc/p13n/modification/ModificationHandler","!helpDescription":"Interface to implement different modification layers (E.g. Flex-explicit, Flex-implicit, transient)","!proto":"sap.ui.base.Object","!category":"class"},"sap.ui.mdc.table.Column":{"setCreationTemplate":{"!description":"Sets the aggregated {@link #getCreationTemplate creationTemplate}.","!static":false,"!category":"function","!type":"fn(oCreationTemplate: sap.ui.core.Control) -> sap.ui.mdc.table.Column","parameters":{"oCreationTemplate":"type: sap.ui.core.Control, description: The creationTemplate to set"}},"setDataProperty":{"!description":"Sets a new value for property {@link #getDataProperty dataProperty}.\n\nThe data property related to the column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDataProperty: String) -> sap.ui.mdc.table.Column","parameters":{"sDataProperty":"type: string, description: New value for property <code>dataProperty<\/code>"}},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nMinimum width of the column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn(fMinWidth?: Number) -> sap.ui.mdc.table.Column","parameters":{"fMinWidth":"type: float, description: New value for property <code>minWidth<\/code>"}},"!proto":"sap.ui.core.Control","getDataProperty":{"!description":"Gets current value of property {@link #getDataProperty dataProperty}.\n\nThe data property related to the column.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the column.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeaderVisible":{"!description":"Sets a new value for property {@link #getHeaderVisible headerVisible}.\n\nDefines whether the column header is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderVisible?: Boolean) -> sap.ui.mdc.table.Column","parameters":{"bHeaderVisible":"type: boolean, description: New value for property <code>headerVisible<\/code>"}},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nThe column header text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader: String) -> sap.ui.mdc.table.Column","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nThe column header text.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyCreationTemplate":{"!description":"Destroys the creationTemplate in the aggregation {@link #getCreationTemplate creationTemplate}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.Column"},"getCreationTemplate":{"!description":"Gets content of aggregation {@link #getCreationTemplate creationTemplate}.\n\n<code>CreationRow<\/code> template. <b>Note:<\/b> Once the binding supports creating transient records, this aggregation will be removed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nMinimum width of the column.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new <code>Column<\/column>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMinWidth minWidth} : float (default: 8)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getHeaderVisible headerVisible} : boolean (default: true)<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.core.HorizontalAlign (default: \"Begin\")<\/li>\n<li>{@link #getImportance importance} : sap.ui.core.Priority (default: \"None\")<\/li>\n<li>{@link #getInitialIndex initialIndex} : int (default: -1)<\/li>\n<li>{@link #getDataProperty dataProperty} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTemplate template} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getCreationTemplate creationTemplate} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getImportance":{"!description":"Gets current value of property {@link #getImportance importance}.\n\nImportance of the column. It is used to show or hide the column based on the <code>Table<\/code> configuration.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Priority"},"!description":"The column for the metadata-driven table with the template, which is shown if the rows have data.","setImportance":{"!description":"Sets a new value for property {@link #getImportance importance}.\n\nImportance of the column. It is used to show or hide the column based on the <code>Table<\/code> configuration.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"None\"<\/code>.","!static":false,"!category":"function","!type":"fn(sImportance?: sap.ui.core.Priority) -> sap.ui.mdc.table.Column","parameters":{"sImportance":"type: sap.ui.core.Priority, description: New value for property <code>importance<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.table.Column.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTemplate":{"!description":"Gets content of aggregation {@link #getTemplate template}.\n\nTemplate for the column.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getHAlign":{"!description":"Gets current value of property {@link #getHAlign hAlign}.\n\nHorizontal alignment of the content.\n\nDefault value is <code>\"Begin\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.HorizontalAlign"},"setInitialIndex":{"!description":"Sets a new value for property {@link #getInitialIndex initialIndex}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iInitialIndex?: Number) -> sap.ui.mdc.table.Column","parameters":{"iInitialIndex":"type: int, description: New value for property <code>initialIndex<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth?: sap.ui.core.CSSSize) -> sap.ui.mdc.table.Column","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.table.Column with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setTemplate":{"!description":"Sets the aggregated {@link #getTemplate template}.","!static":false,"!category":"function","!type":"fn(oTemplate: sap.ui.core.Control) -> sap.ui.mdc.table.Column","parameters":{"oTemplate":"type: sap.ui.core.Control, description: The template to set"}},"!module":"sap/ui/mdc/table/Column","!helpDescription":"The column for the metadata-driven table with the template, which is shown if the rows have data.","getInitialIndex":{"!description":"Gets current value of property {@link #getInitialIndex initialIndex}.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setHAlign":{"!description":"Sets a new value for property {@link #getHAlign hAlign}.\n\nHorizontal alignment of the content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"Begin\"<\/code>.","!static":false,"!category":"function","!type":"fn(sHAlign?: sap.ui.core.HorizontalAlign) -> sap.ui.mdc.table.Column","parameters":{"sHAlign":"type: sap.ui.core.HorizontalAlign, description: New value for property <code>hAlign<\/code>"}},"getHeaderVisible":{"!description":"Gets current value of property {@link #getHeaderVisible headerVisible}.\n\nDefines whether the column header is visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyTemplate":{"!description":"Destroys the template in the aggregation {@link #getTemplate template}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.mdc.table.Column"}},"sap.ui.mdc.chart.ChartSelectionDetails_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.chart.ChartSelectionDetails with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectionDetails.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.chart.ChartSelectionDetails"},"sap.ui.mdc.filterbar.vh":{"filterConditions":{"!description":"Specifies the filter conditions.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility. Do not use it otherwise.","!category":"enum","!type":"Object"},"showMessages":{"!description":"Displays possible errors during the search in a message box.","!category":"enum","!type":"Boolean"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"selectedItemKey":{"!description":"The key of the selected item of the <code>CollectiveSearchSelect<\/code>.\n\nThe selectedItemKey must be set to the initially selected item key. When the user changes the selection, the property will change and reflect the key of the newly selected item.","!category":"enum","!type":"String"},"suspendSelection":{"!description":"If set to <code>true<\/code>, all search requests are ignored. Once it has been set to <code>false<\/code>, a search is triggered immediately if one or more search requests have been triggered in the meantime but were ignored based on the setting.","!category":"enum","!type":"Boolean"},"expandFilterFields":{"!description":"Determines whether the Show/Hide Filters button is in the state show or hide.<br>","!category":"enum","!type":"Boolean"},"!category":"namespace","title":{"!description":"The title of the <code>CollectiveSearchSelect<\/code>.\n\nThe title will be shown on the popover of the control on top of the List.","!category":"enum","!type":"String"},"delegate":{"!description":"Defines the path to the metadata retrieval class for the <code>FilterBarBase<\/code> control. It basically identifies the {@link sap.ui.mdc.FilterBarDelegate FilterBarDelegate} file that provides the required APIs to create the filter bar content.<br> <b>Note:<\/b> Ensure that the related file can be requested (any required library has to be loaded before that).<br> <b>Note:<\/b> This property must not be bound.","!category":"enum","!type":"Object"},"propertyInfo":{"!description":"Specifies the filter metadata.<br> <b>Note<\/b>: This property must not be bound.<br> <b>Note<\/b>: This property is used exclusively for SAPUI5 flexibility/ Fiori Elements. Do not use it otherwise.","!category":"enum","!type":"Object"},"liveMode":{"!description":"Triggers a search automatically after a filter value has been changed.<br> <b>Note:<\/b> The <code>liveMode<\/code> property only operates in non-mobile scenarios.<br> Additionally, if the <code>liveMode<\/code> property is active, the following applies:<br> The error message box is not displayed, and the <code>showMessages<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"FilterContainer":"sap.ui.mdc.filterbar.vh.FilterContainer_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"_currentItemText":{"!description":"_currentItemText : String","!category":"enum","!type":"String"},"!description":"Base-modules for {@link sap.ui.mdc.filterbar.vh.FiterBar FilterBar}\n\nThese modules are not to be used stand-alone.","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"_filterCount":{"!description":"Binds the text of the Adapt Filters button.","!category":"enum","!type":"String"},"CollectiveSearchSelect":"sap.ui.mdc.filterbar.vh.CollectiveSearchSelect_obj","FilterBar":"sap.ui.mdc.filterbar.vh.FilterBar_obj","!module":"sap/ui/mdc/filterbar/vh/FilterBar","!helpDescription":"Base-modules for {@link sap.ui.mdc.filterbar.vh.FiterBar FilterBar}\n\nThese modules are not to be used stand-alone.","filterFieldThreshold":{"!description":"Number of FilterItems which will be shown via Show Filters.<br>","!category":"enum","!type":"Number"},"showGoButton":{"!description":"Determines whether the Go button is visible in the filter bar.<br> <b>Note<\/b>: If the <code>liveMode<\/code> property is set to <code>true<\/code>, it is ignored.","!category":"enum","!type":"Boolean"}},"sap.ui.mdc.field.ConditionType":{"!description":"This class represents a type that is used to map a single condition to a single-value control","extend":{"!description":"Creates a new subclass of class sap.ui.mdc.field.ConditionType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.mdc.field.ConditionType.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a Condition type.","formatValue":{"!description":"Formats the given condition to an output value of the given target type. This values are formatted using the given data type. Depending of the operator and the configuration (set in <code>FormatOptions<\/code>) a description will be determined via given value help or delegate.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject, sTargetType: String) -> Object | Promise","parameters":{"sTargetType":"type: string, description: The target type; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard target types <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not formatted and just forwarded to the target. If the value is an array representing data for a <code>CompositeType<\/code> the index of the needed raw value can be added to the name (For example if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: The condition to be formatted"}},"!module":"sap/ui/mdc/field/ConditionType","!helpDescription":"This class represents a type that is used to map a single condition to a single-value control","!proto":"sap.ui.model.SimpleType","validateValue":{"!description":"Validates a given condition. The values of the condition are validated using the given data type.","!static":false,"!category":"function","!type":"fn(oCondition: sap.ui.mdc.condition.ConditionObject) -> undefined | Promise","parameters":{"oCondition":"type: sap.ui.mdc.condition.ConditionObject, description: The condition to be validated"}},"!category":"class","parseValue":{"!description":"Parses an external value of the given source type to a condition that holds the value in model representation. These values are parsed using the given data type. Depending of the operator and the configuration (set in <code>FormatOptions<\/code>) a value will be determined via given value help or delegate.","!static":false,"!category":"function","!type":"fn(vValue: Object, sSourceType: String) -> null | sap.ui.mdc.condition.ConditionObject | Promise<(null | sap.ui.mdc.condition.ConditionObject)>","parameters":{"sSourceType":"type: string, description: The type of the given value; see {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Allowed Property Types} In addition to the standard source types <code>sap.ui.mdc.raw<\/code> can be used. In this case the value is not parsed and just used in the condition. If the value of the condition is an array representing data for a <code>CompositeType<\/code> the index of the needed raw value can be added to the name (For example if a unit should be forwarded as raw value <code>sap.ui.mdc.raw:1<\/code> can be used).","vValue":"type: any, description: The value to be parsed"}}},"sap.ui.mdc.filterbar.vh.FilterContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.filterbar.vh.FilterContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.filterbar.IFilterContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String)","prototype":"sap.ui.mdc.filterbar.vh.FilterContainer"},"sap.ui.mdc.valuehelp.content.Bool_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.mdc.valuehelp.content.Bool with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.mdc.valuehelp.content.FixedList.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.mdc.valuehelp.content.Bool"}}}