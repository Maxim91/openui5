{"!name":"sap.ui.webc.main","!version":"1.21.1","!define":{"sap.ui.webc.main.Dialog":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setOpen":{"!description":"Sets a new value for property {@link #getOpen open}.\n\nIndicates if the element is open\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bOpen?: Boolean) -> sap.ui.webc.main.Dialog","parameters":{"bOpen":"type: boolean, description: New value for property <code>open<\/code>"}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterClose afterClose} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Dialog<\/code> itself.\n\nFired after the component is closed. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Dialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setInitialFocus":{"!description":"Sets the associated {@link #getInitialFocus initialFocus}.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Dialog","parameters":{"oInitialFocus":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"addFooter":{"!description":"Adds some footer to the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> sap.ui.webc.main.Dialog","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer to add; if empty, nothing is inserted"}},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.Dialog","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterClose afterClose} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getDraggable":{"!description":"Gets current value of property {@link #getDraggable draggable}.\n\nDetermines whether the component is draggable. If this property is set to true, the Dialog will be draggable by its header. <br> <br> <b>Note:<\/b> The component can be draggable only in desktop mode.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeFooter":{"!description":"Removes a footer from the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(vFooter: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vFooter":"type: int|string|sap.ui.core.Control, description: The footer to remove or its index or id"}},"fireBeforeOpen":{"!description":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Dialog"},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nDefines the header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> slot is provided, the <code>headerText<\/code> is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText?: String) -> sap.ui.webc.main.Dialog","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Dialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Dialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Dialog<\/code> itself.\n\nFired before the component is opened. This event can be cancelled, which will prevent the popup from opening. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Dialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Dialog","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterOpen afterOpen} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Dialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeHeader":{"!description":"Removes a header from the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(vHeader: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vHeader":"type: int|string|sap.ui.core.Control, description: The header to remove or its index or id"}},"isOpen":{"!description":"Tells if the component is opened","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/webc/main/Dialog","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","indexOfFooter":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getFooter footer}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> Number","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer whose index is looked for"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Dialog","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"getPreventFocusRestore":{"!description":"Gets current value of property {@link #getPreventFocusRestore preventFocusRestore}.\n\nDefines if the focus should be returned to the previously focused element, when the popup closes.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getOpen":{"!description":"Gets current value of property {@link #getOpen open}.\n\nIndicates if the element is open\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the Popup.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","show":{"!description":"Shows the dialog.","!static":false,"!category":"function","!type":"fn(preventInitialFocus: Boolean)","parameters":{"preventInitialFocus":"type: boolean, description: Prevents applying the focus inside the popup"}},"attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterOpen afterOpen} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Dialog<\/code> itself.\n\nFired after the component is opened. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Dialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"destroyFooter":{"!description":"Destroys all the footer in the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Dialog"},"getInitialFocus":{"!description":"ID of the element which is the current target of the association {@link #getInitialFocus initialFocus}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"getResizable":{"!description":"Gets current value of property {@link #getResizable resizable}.\n\nConfigures the component to be resizable. If this property is set to true, the Dialog will have a resize handle in its bottom right corner in LTR languages. In RTL languages, the resize handle will be placed in the bottom left corner. <br> <br> <b>Note:<\/b> The component can be resizable only in desktop mode. <br> <b>Note:<\/b> Upon resizing, externally defined height and width styling will be ignored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireBeforeClose":{"!description":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the header HTML Element. <br> <br> <b>Note:<\/b> If <code>header<\/code> slot is provided, the labelling of the dialog is a responsibility of the application developer. <code>accessibleName<\/code> should be used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.\n\nDefines the header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> slot is provided, the <code>headerText<\/code> is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"insertFooter":{"!description":"Inserts a footer into the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Dialog","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the footer should be inserted at; for a negative value of <code>iIndex<\/code>, the footer is inserted at position 0; for a value greater than the current size of the aggregation, the footer is inserted at the last position","oFooter":"type: sap.ui.core.Control, description: The footer to insert; if empty, nothing is inserted"}},"setDraggable":{"!description":"Sets a new value for property {@link #getDraggable draggable}.\n\nDetermines whether the component is draggable. If this property is set to true, the Dialog will be draggable by its header. <br> <br> <b>Note:<\/b> The component can be draggable only in desktop mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDraggable?: Boolean) -> sap.ui.webc.main.Dialog","parameters":{"bDraggable":"type: boolean, description: New value for property <code>draggable<\/code>"}},"setStretch":{"!description":"Sets a new value for property {@link #getStretch stretch}.\n\nDetermines whether the component should be stretched to fullscreen. <br> <br> <b>Note:<\/b> The component will be stretched to approximately 90% of the viewport.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStretch?: Boolean) -> sap.ui.webc.main.Dialog","parameters":{"bStretch":"type: boolean, description: New value for property <code>stretch<\/code>"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Dialog<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getDraggable draggable} : boolean (default: false)<\/li>\n<li>{@link #getHeaderText headerText} : string (default: \"\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getOpen open} : boolean (default: false)<\/li>\n<li>{@link #getPreventFocusRestore preventFocusRestore} : boolean (default: false)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<li>{@link #getStretch stretch} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control[]<\/li>\n<li>{@link #getHeader header} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Dialog","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"removeAllFooter":{"!description":"Removes all the controls from the aggregation {@link #getFooter footer}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"close":{"!description":"Hides the block layer (for modal popups only)","!static":false,"!category":"function","!type":"fn()"},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"addHeader":{"!description":"Adds some header to the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.webc.main.Dialog","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to add; if empty, nothing is inserted"}},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\nDefines the footer HTML Element.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setPreventFocusRestore":{"!description":"Sets a new value for property {@link #getPreventFocusRestore preventFocusRestore}.\n\nDefines if the focus should be returned to the previously focused element, when the popup closes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreventFocusRestore?: Boolean) -> sap.ui.webc.main.Dialog","parameters":{"bPreventFocusRestore":"type: boolean, description: New value for property <code>preventFocusRestore<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"setResizable":{"!description":"Sets a new value for property {@link #getResizable resizable}.\n\nConfigures the component to be resizable. If this property is set to true, the Dialog will have a resize handle in its bottom right corner in LTR languages. In RTL languages, the resize handle will be placed in the bottom left corner. <br> <br> <b>Note:<\/b> The component can be resizable only in desktop mode. <br> <b>Note:<\/b> Upon resizing, externally defined height and width styling will be ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bResizable?: Boolean) -> sap.ui.webc.main.Dialog","parameters":{"bResizable":"type: boolean, description: New value for property <code>resizable<\/code>"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeClose beforeClose} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.Dialog","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"getStretch":{"!description":"Gets current value of property {@link #getStretch stretch}.\n\nDetermines whether the component should be stretched to fullscreen. <br> <br> <b>Note:<\/b> The component will be stretched to approximately 90% of the viewport.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Dialog","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeAllHeader":{"!description":"Removes all the controls from the aggregation {@link #getHeader header}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeClose beforeClose} event of this <code>sap.ui.webc.main.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Dialog<\/code> itself.\n\nFired before the component is closed. This event can be cancelled, which will prevent the popup from closing. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Dialog<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyHeader":{"!description":"Destroys all the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Dialog"},"fireAfterClose":{"!description":"Fires event {@link #event:afterClose afterClose} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Dialog","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertHeader":{"!description":"Inserts a header into the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Dialog","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the header should be inserted at; for a negative value of <code>iIndex<\/code>, the header is inserted at position 0; for a value greater than the current size of the aggregation, the header is inserted at the last position"}},"applyFocus":{"!description":"Focuses the element denoted by <code>initialFocus<\/code>, if provided, or the first focusable element otherwise.","!static":false,"!category":"function","!type":"fn()"},"indexOfHeader":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeader header}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> Number","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header whose index is looked for"}}},"sap.ui.webc.main.TableGroupRow":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableGroupRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TableGroupRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TableGroupRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/TableGroupRow","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.TableGroupRow","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.RatingIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.RatingIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.RatingIndicator"},"sap.ui.webc.main.Table_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Table with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Table"},"sap.ui.webc.main.CardHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CardHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.CardHeader"},"sap.ui.webc.main.CardHeader":{"removeAvatar":{"!description":"Removes a avatar from the aggregation {@link #getAvatar avatar}.","!static":false,"!category":"function","!type":"fn(vAvatar: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vAvatar":"type: int|string|sap.ui.core.Control, description: The avatar to remove or its index or id"}},"insertAction":{"!description":"Inserts a action into the aggregation {@link #getAction action}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.CardHeader","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted"}},"indexOfAvatar":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getAvatar avatar}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAvatar: sap.ui.core.Control) -> Number","parameters":{"oAvatar":"type: sap.ui.core.Control, description: The avatar whose index is looked for"}},"getAvatar":{"!description":"Gets content of aggregation {@link #getAvatar avatar}.\n\nDefines an avatar image, displayed in the left most part of the header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setInteractive":{"!description":"Sets a new value for property {@link #getInteractive interactive}.\n\nDefines if the component would be interactive, e.g gets hover effect, gets focus outline and <code>click<\/code> event is fired, when pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInteractive?: Boolean) -> sap.ui.webc.main.CardHeader","parameters":{"bInteractive":"type: boolean, description: New value for property <code>interactive<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getStatus":{"!description":"Gets current value of property {@link #getStatus status}.\n\nDefines the status text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSubtitleText":{"!description":"Gets current value of property {@link #getSubtitleText subtitleText}.\n\nDefines the subtitle text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getTitleText":{"!description":"Gets current value of property {@link #getTitleText titleText}.\n\nDefines the title text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"addAction":{"!description":"Adds some action to the aggregation {@link #getAction action}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.ui.webc.main.CardHeader","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.CardHeader","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>CardHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInteractive interactive} : boolean (default: false)<\/li>\n<li>{@link #getStatus status} : string (default: \"\")<\/li>\n<li>{@link #getSubtitleText subtitleText} : string (default: \"\")<\/li>\n<li>{@link #getTitleText titleText} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAction action} : sap.ui.core.Control[]<\/li>\n<li>{@link #getAvatar avatar} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","setTitleText":{"!description":"Sets a new value for property {@link #getTitleText titleText}.\n\nDefines the title text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleText?: String) -> sap.ui.webc.main.CardHeader","parameters":{"sTitleText":"type: string, description: New value for property <code>titleText<\/code>"}},"destroyAction":{"!description":"Destroys all the action in the aggregation {@link #getAction action}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.CardHeader"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getAction action}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAction":{"!description":"Removes a action from the aggregation {@link #getAction action}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.CardHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.CardHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.CardHeader<\/code> itself.\n\nFired when the component is activated by mouse/tap or by using the Enter or Space key. <br> <br> <b>Note:<\/b> The event would be fired only if the <code>interactive<\/code> property is set to true.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.CardHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.CardHeader<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAction":{"!description":"Gets content of aggregation {@link #getAction action}.\n\nDefines an action, displayed in the right most part of the header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getInteractive":{"!description":"Gets current value of property {@link #getInteractive interactive}.\n\nDefines if the component would be interactive, e.g gets hover effect, gets focus outline and <code>click<\/code> event is fired, when pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAction":{"!description":"Removes all the controls from the aggregation {@link #getAction action}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setStatus":{"!description":"Sets a new value for property {@link #getStatus status}.\n\nDefines the status text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sStatus?: String) -> sap.ui.webc.main.CardHeader","parameters":{"sStatus":"type: string, description: New value for property <code>status<\/code>"}},"addAvatar":{"!description":"Adds some avatar to the aggregation {@link #getAvatar avatar}.","!static":false,"!category":"function","!type":"fn(oAvatar: sap.ui.core.Control) -> sap.ui.webc.main.CardHeader","parameters":{"oAvatar":"type: sap.ui.core.Control, description: The avatar to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CardHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.CardHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.CardHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!module":"sap/ui/webc/main/CardHeader","removeAllAvatar":{"!description":"Removes all the controls from the aggregation {@link #getAvatar avatar}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setSubtitleText":{"!description":"Sets a new value for property {@link #getSubtitleText subtitleText}.\n\nDefines the subtitle text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sSubtitleText?: String) -> sap.ui.webc.main.CardHeader","parameters":{"sSubtitleText":"type: string, description: New value for property <code>subtitleText<\/code>"}},"insertAvatar":{"!description":"Inserts a avatar into the aggregation {@link #getAvatar avatar}.","!static":false,"!category":"function","!type":"fn(oAvatar: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.CardHeader","parameters":{"oAvatar":"type: sap.ui.core.Control, description: The avatar to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the avatar should be inserted at; for a negative value of <code>iIndex<\/code>, the avatar is inserted at position 0; for a value greater than the current size of the aggregation, the avatar is inserted at the last position"}},"destroyAvatar":{"!description":"Destroys all the avatar in the aggregation {@link #getAvatar avatar}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.CardHeader"}},"sap.ui.webc.main.Table":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setHideNoData":{"!description":"Sets a new value for property {@link #getHideNoData hideNoData}.\n\nDefines if the value of <code>noDataText<\/code> will be diplayed when there is no rows present in the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideNoData?: Boolean) -> sap.ui.webc.main.Table","parameters":{"bHideNoData":"type: boolean, description: New value for property <code>hideNoData<\/code>"}},"attachPopinChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:popinChange popinChange} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Table<\/code> itself.\n\nFired when <code>sap.ui.webc.main.TableColumn<\/code> is shown as a pop-in instead of hiding it.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachLoadMore":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:loadMore loadMore} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getBusyDelay":{"!description":"Gets current value of property {@link #getBusyDelay busyDelay}.\n\nDefines the delay in milliseconds, after which the busy indicator will show up for this component.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.Table","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachPopinChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:popinChange popinChange} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setGrowing":{"!description":"Sets a new value for property {@link #getGrowing growing}.\n\nDefines whether the table will have growing capability either by pressing a <code>More<\/code> button, or via user scroll. In both cases <code>load-more<\/code> event is fired. <br> <br>\n\nAvailable options: <br> <br> <code>Button<\/code> - Shows a <code>More<\/code> button at the bottom of the table, pressing of which triggers the <code>load-more<\/code> event. <br> <code>Scroll<\/code> - The <code>load-more<\/code> event is triggered when the user scrolls to the bottom of the table; <br> <code>None<\/code> (default) - The growing is off. <br> <br>\n\n<b>Restrictions:<\/b> <code>growing=\"Scroll\"<\/code> is not supported for Internet Explorer, and the component will fallback to <code>growing=\"Button\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sGrowing?: sap.ui.webc.main.TableGrowingMode) -> sap.ui.webc.main.Table","parameters":{"sGrowing":"type: sap.ui.webc.main.TableGrowingMode, description: New value for property <code>growing<\/code>"}},"getBusy":{"!description":"Gets current value of property {@link #getBusy busy}.\n\nDefines if the table is in busy state. <b>\n\nIn this state the component's opacity is reduced and busy indicator is displayed at the bottom of the table.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireLoadMore":{"!description":"Fires event {@link #event:loadMore loadMore} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireRowClick":{"!description":"Fires event {@link #event:rowClick rowClick} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"removeAllRows":{"!description":"Removes all the controls from the aggregation {@link #getRows rows}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITableRow]"},"setGrowingButtonText":{"!description":"Sets a new value for property {@link #getGrowingButtonText growingButtonText}.\n\nDefines the text that will be displayed inside the growing button at the bottom of the table, meant for loading more rows upon press.\n\n<br> <br> <b>Note:<\/b> If not specified a built-in text will be displayed. <br> <b>Note:<\/b> This property takes effect if <code>growing<\/code> is set to <code>Button<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sGrowingButtonText?: String) -> sap.ui.webc.main.Table","parameters":{"sGrowingButtonText":"type: string, description: New value for property <code>growingButtonText<\/code>"}},"detachRowClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:rowClick rowClick} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeAllColumns":{"!description":"Removes all the controls from the aggregation {@link #getColumns columns}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITableColumn]"},"attachRowClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:rowClick rowClick} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Table<\/code> itself.\n\nFired when a row in <code>Active<\/code> mode is clicked or <code>Enter<\/code> key is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Table<\/code> itself.\n\nFired when selection is changed by user interaction in <code>SingleSelect<\/code> and <code>MultiSelect<\/code> modes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nDefines the mode of the component. <br> <br> Available options are: <ul> <li><code>MultiSelect<\/code><\/li> <li><code>SingleSelect<\/code><\/li> <li><code>None<\/code><\/li> <ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TableMode"},"getGrowingButtonText":{"!description":"Gets current value of property {@link #getGrowingButtonText growingButtonText}.\n\nDefines the text that will be displayed inside the growing button at the bottom of the table, meant for loading more rows upon press.\n\n<br> <br> <b>Note:<\/b> If not specified a built-in text will be displayed. <br> <b>Note:<\/b> This property takes effect if <code>growing<\/code> is set to <code>Button<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","addColumn":{"!description":"Adds some column to the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.webc.main.ITableColumn) -> sap.ui.webc.main.Table","parameters":{"oColumn":"type: sap.ui.webc.main.ITableColumn, description: The column to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Table.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setStickyColumnHeader":{"!description":"Sets a new value for property {@link #getStickyColumnHeader stickyColumnHeader}.\n\nDetermines whether the column headers remain fixed at the top of the page during vertical scrolling as long as the Web Component is in the viewport. <br> <br> <b>Restrictions:<\/b> <ul> <li>Browsers that do not support this feature: <ul> <li>Internet Explorer<\/li> <li>Microsoft Edge lower than version 41 (EdgeHTML 16)<\/li> <li>Mozilla Firefox lower than version 59<\/li> <\/ul> <\/li> <li>Scrolling behavior: <ul> <li>If the Web Component is placed in layout containers that have the <code>overflow: hidden<\/code> or <code>overflow: auto<\/code> style definition, this can prevent the sticky elements of the Web Component from becoming fixed at the top of the viewport.<\/li> <\/ul> <\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStickyColumnHeader?: Boolean) -> sap.ui.webc.main.Table","parameters":{"bStickyColumnHeader":"type: boolean, description: New value for property <code>stickyColumnHeader<\/code>"}},"destroyRows":{"!description":"Destroys all the rows in the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Table"},"getHideNoData":{"!description":"Gets current value of property {@link #getHideNoData hideNoData}.\n\nDefines if the value of <code>noDataText<\/code> will be diplayed when there is no rows present in the table.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfColumn":{"!description":"Checks for the provided <code>sap.ui.webc.main.ITableColumn<\/code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.webc.main.ITableColumn) -> Number","parameters":{"oColumn":"type: sap.ui.webc.main.ITableColumn, description: The column whose index is looked for"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Table","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"getGrowingButtonSubtext":{"!description":"Gets current value of property {@link #getGrowingButtonSubtext growingButtonSubtext}.\n\nDefines the subtext that will be displayed under the <code>growingButtonText<\/code>.\n\n<br> <br> <b>Note:<\/b> This property takes effect if <code>growing<\/code> is set to <code>Button<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Table with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setBusy":{"!description":"Sets a new value for property {@link #getBusy busy}.\n\nDefines if the table is in busy state. <b>\n\nIn this state the component's opacity is reduced and busy indicator is displayed at the bottom of the table.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bBusy?: Boolean) -> sap.ui.webc.main.Table","parameters":{"bBusy":"type: boolean, description: New value for property <code>busy<\/code>"}},"!module":"sap/ui/webc/main/Table","insertColumn":{"!description":"Inserts a column into the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(oColumn: sap.ui.webc.main.ITableColumn, iIndex: Number) -> sap.ui.webc.main.Table","parameters":{"oColumn":"type: sap.ui.webc.main.ITableColumn, description: The column to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the column should be inserted at; for a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value greater than the current size of the aggregation, the column is inserted at the last position"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDefines the text that will be displayed when there is no data and <code>hideNoData<\/code> is not present.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setNoDataText":{"!description":"Sets a new value for property {@link #getNoDataText noDataText}.\n\nDefines the text that will be displayed when there is no data and <code>hideNoData<\/code> is not present.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sNoDataText?: String) -> sap.ui.webc.main.Table","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getRows":{"!description":"Gets content of aggregation {@link #getRows rows}.\n\nDefines the component rows. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.TableRow<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITableRow]"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addRow":{"!description":"Adds some row to the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.webc.main.ITableRow) -> sap.ui.webc.main.Table","parameters":{"oRow":"type: sap.ui.webc.main.ITableRow, description: The row to add; if empty, nothing is inserted"}},"setGrowingButtonSubtext":{"!description":"Sets a new value for property {@link #getGrowingButtonSubtext growingButtonSubtext}.\n\nDefines the subtext that will be displayed under the <code>growingButtonText<\/code>.\n\n<br> <br> <b>Note:<\/b> This property takes effect if <code>growing<\/code> is set to <code>Button<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sGrowingButtonSubtext?: String) -> sap.ui.webc.main.Table","parameters":{"sGrowingButtonSubtext":"type: string, description: New value for property <code>growingButtonSubtext<\/code>"}},"getColumns":{"!description":"Gets content of aggregation {@link #getColumns columns}.\n\nDefines the configuration for the columns of the component. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.TableColumn<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITableColumn]"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Table<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getBusy busy} : boolean (default: false)<\/li>\n<li>{@link #getBusyDelay busyDelay} : int (default: 1000)<\/li>\n<li>{@link #getGrowing growing} : sap.ui.webc.main.TableGrowingMode (default: None)<\/li>\n<li>{@link #getGrowingButtonSubtext growingButtonSubtext} : string (default: \"\")<\/li>\n<li>{@link #getGrowingButtonText growingButtonText} : string (default: \"\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHideNoData hideNoData} : boolean (default: false)<\/li>\n<li>{@link #getMode mode} : sap.ui.webc.main.TableMode (default: None)<\/li>\n<li>{@link #getNoDataText noDataText} : string (default: \"\")<\/li>\n<li>{@link #getStickyColumnHeader stickyColumnHeader} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.ui.webc.main.ITableColumn[]<\/li>\n<li>{@link #getRows rows} : sap.ui.webc.main.ITableRow[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loadMore loadMore} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:popinChange popinChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:rowClick rowClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Table","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeRow":{"!description":"Removes a row from the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn(vRow: Number | String | sap.ui.webc.main.ITableRow) -> sap.ui.webc.main.ITableRow | null","parameters":{"vRow":"type: int|string|sap.ui.webc.main.ITableRow, description: The row to remove or its index or id"}},"attachLoadMore":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:loadMore loadMore} event of this <code>sap.ui.webc.main.Table<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Table<\/code> itself.\n\nFired when the user presses the <code>More<\/code> button or scrolls to the table's end. <br> <br>\n\n<b>Note:<\/b> The event will be fired if <code>growing<\/code> is set to <code>Button<\/code> or <code>Scroll<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Table","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Table<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"destroyColumns":{"!description":"Destroys all the columns in the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Table"},"firePopinChange":{"!description":"Fires event {@link #event:popinChange popinChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Table","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nDefines the mode of the component. <br> <br> Available options are: <ul> <li><code>MultiSelect<\/code><\/li> <li><code>SingleSelect<\/code><\/li> <li><code>None<\/code><\/li> <ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sMode?: sap.ui.webc.main.TableMode) -> sap.ui.webc.main.Table","parameters":{"sMode":"type: sap.ui.webc.main.TableMode, description: New value for property <code>mode<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Table","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"indexOfRow":{"!description":"Checks for the provided <code>sap.ui.webc.main.ITableRow<\/code> in the aggregation {@link #getRows rows}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.webc.main.ITableRow) -> Number","parameters":{"oRow":"type: sap.ui.webc.main.ITableRow, description: The row whose index is looked for"}},"removeColumn":{"!description":"Removes a column from the aggregation {@link #getColumns columns}.","!static":false,"!category":"function","!type":"fn(vColumn: Number | String | sap.ui.webc.main.ITableColumn) -> sap.ui.webc.main.ITableColumn | null","parameters":{"vColumn":"type: int|string|sap.ui.webc.main.ITableColumn, description: The column to remove or its index or id"}},"getGrowing":{"!description":"Gets current value of property {@link #getGrowing growing}.\n\nDefines whether the table will have growing capability either by pressing a <code>More<\/code> button, or via user scroll. In both cases <code>load-more<\/code> event is fired. <br> <br>\n\nAvailable options: <br> <br> <code>Button<\/code> - Shows a <code>More<\/code> button at the bottom of the table, pressing of which triggers the <code>load-more<\/code> event. <br> <code>Scroll<\/code> - The <code>load-more<\/code> event is triggered when the user scrolls to the bottom of the table; <br> <code>None<\/code> (default) - The growing is off. <br> <br>\n\n<b>Restrictions:<\/b> <code>growing=\"Scroll\"<\/code> is not supported for Internet Explorer, and the component will fallback to <code>growing=\"Button\"<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TableGrowingMode"},"insertRow":{"!description":"Inserts a row into the aggregation {@link #getRows rows}.","!static":false,"!category":"function","!type":"fn(oRow: sap.ui.webc.main.ITableRow, iIndex: Number) -> sap.ui.webc.main.Table","parameters":{"oRow":"type: sap.ui.webc.main.ITableRow, description: The row to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the row should be inserted at; for a negative value of <code>iIndex<\/code>, the row is inserted at position 0; for a value greater than the current size of the aggregation, the row is inserted at the last position"}},"setBusyDelay":{"!description":"Sets a new value for property {@link #getBusyDelay busyDelay}.\n\nDefines the delay in milliseconds, after which the busy indicator will show up for this component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn(iBusyDelay?: Number) -> sap.ui.webc.main.Table","parameters":{"iBusyDelay":"type: int, description: New value for property <code>busyDelay<\/code>"}},"getStickyColumnHeader":{"!description":"Gets current value of property {@link #getStickyColumnHeader stickyColumnHeader}.\n\nDetermines whether the column headers remain fixed at the top of the page during vertical scrolling as long as the Web Component is in the viewport. <br> <br> <b>Restrictions:<\/b> <ul> <li>Browsers that do not support this feature: <ul> <li>Internet Explorer<\/li> <li>Microsoft Edge lower than version 41 (EdgeHTML 16)<\/li> <li>Mozilla Firefox lower than version 59<\/li> <\/ul> <\/li> <li>Scrolling behavior: <ul> <li>If the Web Component is placed in layout containers that have the <code>overflow: hidden<\/code> or <code>overflow: auto<\/code> style definition, this can prevent the sticky elements of the Web Component from becoming fixed at the top of the viewport.<\/li> <\/ul> <\/li> <\/ul>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.webc.main.Token":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Token.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyCloseIcon":{"!description":"Destroys the closeIcon in the aggregation {@link #getCloseIcon closeIcon}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Token"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines whether the component is selected or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.ui.webc.main.Token","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Token","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the token.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.ui.webc.main.Token<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Token<\/code> itself.\n\nFired when the the component is selected by user interaction with mouse or by clicking space.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Token","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Token<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.webc.common.WebComponent","getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component can not be deleted or selected, but still provides visual feedback upon user interaction.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component can not be deleted or selected, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bReadonly: Boolean) -> sap.ui.webc.main.Token","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Token with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines whether the component is selected or not.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>Token<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getReadonly readonly} : boolean<\/li>\n<li>{@link #getSelected selected} : boolean<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCloseIcon closeIcon} : sap.ui.webc.main.IIcon<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Token","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setCloseIcon":{"!description":"Sets the aggregated {@link #getCloseIcon closeIcon}.","!static":false,"!category":"function","!type":"fn(oCloseIcon: sap.ui.webc.main.IIcon) -> sap.ui.webc.main.Token","parameters":{"oCloseIcon":"type: sap.ui.webc.main.IIcon, description: The closeIcon to set"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.ui.webc.main.Token<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Token","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getCloseIcon":{"!description":"Gets content of aggregation {@link #getCloseIcon closeIcon}.\n\nDefines the close icon for the token. If nothing is provided to this slot, the default close icon will be used. Accepts <code>sap.ui.webc.main.Icon<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.IIcon"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the token.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Token","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.ColorPicker":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ColorPicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.webc.common.WebComponent","getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDefines the currently selected color of the component. <br> <br> <b>Note<\/b>: use HEX, RGB, RGBA, HSV formats or a CSS color name when modifying this property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSColor"},"!category":"class","attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.ColorPicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ColorPicker<\/code> itself.\n\nFired when the the selected color is changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ColorPicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ColorPicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ColorPicker","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.ColorPicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ColorPicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>ColorPicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColor color} : sap.ui.core.CSSColor<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDefines the currently selected color of the component. <br> <br> <b>Note<\/b>: use HEX, RGB, RGBA, HSV formats or a CSS color name when modifying this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColor: sap.ui.core.CSSColor) -> sap.ui.webc.main.ColorPicker","parameters":{"sColor":"type: sap.ui.core.CSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/ui/webc/main/ColorPicker","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>"},"sap.ui.webc.main.ListItemType":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Active":{"!description":"Indicates that the item is clickable via active feedback when item is pressed.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Inactive":{"!description":"Indicates the list item does not have any active feedback when item is pressed.","!category":"enum","!type":"String"},"!category":"static class","Detail":{"!description":"Enables detail button of the list item that fires detail-click event.","!category":"enum","!type":"String"}},"sap.ui.webc.main.HasPopup":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Dialog":{"!description":"Dialog popup type.","!category":"enum","!type":"String"},"Grid":{"!description":"Grid popup type.","!category":"enum","!type":"String"},"Tree":{"!description":"Tree popup type.","!category":"enum","!type":"String"},"!category":"static class","Menu":{"!description":"Menu popup type.","!category":"enum","!type":"String"},"ListBox":{"!description":"ListBox popup type.","!category":"enum","!type":"String"}},"sap.ui.webc.main.PopoverHorizontalAlign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Center":{"!description":"Popover is centered","!category":"enum","!type":"String"},"Left":{"!description":"Popover opens on the left side of the target","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Right":{"!description":"Popover opens on the right side of the target","!category":"enum","!type":"String"},"Stretch":{"!description":"Popover is stretched","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc.main.MultiInput":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.MultiInput","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.MultiInput","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfIcon":{"!description":"Checks for the provided <code>sap.ui.webc.main.IIcon<\/code> in the aggregation {@link #getIcon icon}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> Number","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon whose index is looked for"}},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.MultiInput","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setShowClearIcon":{"!description":"Sets a new value for property {@link #getShowClearIcon showClearIcon}.\n\nDefines whether the clear icon of the input will be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowClearIcon?: Boolean) -> sap.ui.webc.main.MultiInput","parameters":{"bShowClearIcon":"type: boolean, description: New value for property <code>showClearIcon<\/code>"}},"getShowSuggestions":{"!description":"Gets current value of property {@link #getShowSuggestions showSuggestions}.\n\nDefines whether the component should show suggestions, if such are present. <br> <br> <b>Note:<\/b> You need to import the <code>InputSuggestions<\/code> module from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"<\/code> to enable this functionality.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowValueHelpIcon":{"!description":"Sets a new value for property {@link #getShowValueHelpIcon showValueHelpIcon}.\n\nDetermines whether a value help icon will be visualized in the end of the input. Pressing the icon will fire <code>value-help-trigger<\/code> event.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueHelpIcon?: Boolean) -> sap.ui.webc.main.MultiInput","parameters":{"bShowValueHelpIcon":"type: boolean, description: New value for property <code>showValueHelpIcon<\/code>"}},"getShowValueHelpIcon":{"!description":"Gets current value of property {@link #getShowValueHelpIcon showValueHelpIcon}.\n\nDetermines whether a value help icon will be visualized in the end of the input. Pressing the icon will fire <code>value-help-trigger<\/code> event.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireValueHelpTrigger":{"!description":"Fires event {@link #event:valueHelpTrigger valueHelpTrigger} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getPreviewItem":{"!description":"Returns the the suggestion item on preview.","!static":false,"!category":"function","!type":"fn()"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.MultiInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.MultiInput","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"addSuggestionItem":{"!description":"Adds some suggestionItem to the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.webc.main.IInputSuggestionItem) -> sap.ui.webc.main.MultiInput","parameters":{"oSuggestionItem":"type: sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem to add; if empty, nothing is inserted"}},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiInput<\/code> itself.\n\nFired when the input operation has finished by pressing Enter or on focusout.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachSuggestionItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggestionItemSelect suggestionItemSelect} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiInput<\/code> itself.\n\nFired when a suggestion item, that is displayed in the suggestion popup, is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.MultiInput","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"attachTokenDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tokenDelete tokenDelete} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiInput<\/code> itself.\n\nFired when a token is about to be deleted.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTokenDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tokenDelete tokenDelete} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireTokenDelete":{"!description":"Fires event {@link #event:tokenDelete tokenDelete} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.MultiInput","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/MultiInput","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the HTML type of the component. Available options are: <code>Text<\/code>, <code>Email<\/code>, <code>Number<\/code>, <code>Password<\/code>, <code>Tel<\/code>, and <code>URL<\/code>. <br> <br> <b>Notes:<\/b> <ul> <li>The particular effect of this property differs depending on the browser and the current language settings, especially for type <code>Number<\/code>.<\/li> <li>The property is mostly intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<\/li> <\/ul>\n\nDefault value is <code>Text<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.InputType"},"setShowSuggestions":{"!description":"Sets a new value for property {@link #getShowSuggestions showSuggestions}.\n\nDefines whether the component should show suggestions, if such are present. <br> <br> <b>Note:<\/b> You need to import the <code>InputSuggestions<\/code> module from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"<\/code> to enable this functionality.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSuggestions?: Boolean) -> sap.ui.webc.main.MultiInput","parameters":{"bShowSuggestions":"type: boolean, description: New value for property <code>showSuggestions<\/code>"}},"removeToken":{"!description":"Removes a token from the aggregation {@link #getTokens tokens}.","!static":false,"!category":"function","!type":"fn(vToken: Number | String | sap.ui.webc.main.IToken) -> sap.ui.webc.main.IToken | null","parameters":{"vToken":"type: int|string|sap.ui.webc.main.IToken, description: The token to remove or its index or id"}},"removeSuggestionItem":{"!description":"Removes a suggestionItem from the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(vSuggestionItem: Number | String | sap.ui.webc.main.IInputSuggestionItem) -> sap.ui.webc.main.IInputSuggestionItem | null","parameters":{"vSuggestionItem":"type: int|string|sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem to remove or its index or id"}},"setMaxlength":{"!description":"Sets a new value for property {@link #getMaxlength maxlength}.\n\nSets the maximum number of characters available in the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaxlength: Number) -> sap.ui.webc.main.MultiInput","parameters":{"iMaxlength":"type: int, description: New value for property <code>maxlength<\/code>"}},"getSuggestionItems":{"!description":"Gets content of aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IInputSuggestionItem]"},"addIcon":{"!description":"Adds some icon to the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> sap.ui.webc.main.MultiInput","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to add; if empty, nothing is inserted"}},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.MultiInput","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"destroyIcon":{"!description":"Destroys all the icon in the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MultiInput"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"insertIcon":{"!description":"Inserts a icon into the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon, iIndex: Number) -> sap.ui.webc.main.MultiInput","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the icon should be inserted at; for a negative value of <code>iIndex<\/code>, the icon is inserted at position 0; for a value greater than the current size of the aggregation, the icon is inserted at the last position"}},"insertSuggestionItem":{"!description":"Inserts a suggestionItem into the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.webc.main.IInputSuggestionItem, iIndex: Number) -> sap.ui.webc.main.MultiInput","parameters":{"oSuggestionItem":"type: sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex<\/code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position"}},"fireSuggestionItemPreview":{"!description":"Fires event {@link #event:suggestionItemPreview suggestionItemPreview} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getTokens":{"!description":"Gets content of aggregation {@link #getTokens tokens}.\n\nDefines the component tokens.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IToken]"},"!proto":"sap.ui.webc.common.WebComponent","getMaxlength":{"!description":"Gets current value of property {@link #getMaxlength maxlength}.\n\nSets the maximum number of characters available in the input field.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllIcon":{"!description":"Removes all the controls from the aggregation {@link #getIcon icon}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IIcon]"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachSuggestionItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggestionItemSelect suggestionItemSelect} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>MultiInput<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxlength maxlength} : int<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getShowClearIcon showClearIcon} : boolean (default: false)<\/li>\n<li>{@link #getShowSuggestions showSuggestions} : boolean (default: false)<\/li>\n<li>{@link #getShowValueHelpIcon showValueHelpIcon} : boolean (default: false)<\/li>\n<li>{@link #getType type} : sap.ui.webc.main.InputType (default: Text)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #get_semanticFormValue _semanticFormValue} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.webc.main.IIcon[]<\/li>\n<li>{@link #getSuggestionItems suggestionItems} : sap.ui.webc.main.IInputSuggestionItem[] (default)<\/li>\n<li>{@link #getTokens tokens} : sap.ui.webc.main.IToken[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemPreview suggestionItemPreview} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemSelect suggestionItemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenDelete tokenDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueHelpTrigger valueHelpTrigger} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.MultiInput","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getShowClearIcon":{"!description":"Gets current value of property {@link #getShowClearIcon showClearIcon}.\n\nDefines whether the clear icon of the input will be shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.MultiInput","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachValueHelpTrigger":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:valueHelpTrigger valueHelpTrigger} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiInput<\/code> itself.\n\nFired when the value help icon is pressed and F4 or ALT/OPTION + ARROW_UP/ARROW_DOWN keyboard keys are used.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroySuggestionItems":{"!description":"Destroys all the suggestionItems in the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MultiInput"},"detachSuggestionItemPreview":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggestionItemPreview suggestionItemPreview} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addToken":{"!description":"Adds some token to the aggregation {@link #getTokens tokens}.","!static":false,"!category":"function","!type":"fn(oToken: sap.ui.webc.main.IToken) -> sap.ui.webc.main.MultiInput","parameters":{"oToken":"type: sap.ui.webc.main.IToken, description: The token to add; if empty, nothing is inserted"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"attachSuggestionItemPreview":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggestionItemPreview suggestionItemPreview} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiInput<\/code> itself.\n\nFired when the user navigates to a suggestion item via the ARROW keys, as a preview, before the final selection.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfSuggestionItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IInputSuggestionItem<\/code> in the aggregation {@link #getSuggestionItems suggestionItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.webc.main.IInputSuggestionItem) -> Number","parameters":{"oSuggestionItem":"type: sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem whose index is looked for"}},"removeIcon":{"!description":"Removes a icon from the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(vIcon: Number | String | sap.ui.webc.main.IIcon) -> sap.ui.webc.main.IIcon | null","parameters":{"vIcon":"type: int|string|sap.ui.webc.main.IIcon, description: The icon to remove or its index or id"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the HTML type of the component. Available options are: <code>Text<\/code>, <code>Email<\/code>, <code>Number<\/code>, <code>Password<\/code>, <code>Tel<\/code>, and <code>URL<\/code>. <br> <br> <b>Notes:<\/b> <ul> <li>The particular effect of this property differs depending on the browser and the current language settings, especially for type <code>Number<\/code>.<\/li> <li>The property is mostly intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Text<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: sap.ui.webc.main.InputType) -> sap.ui.webc.main.MultiInput","parameters":{"sType":"type: sap.ui.webc.main.InputType, description: New value for property <code>type<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.MultiInput","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"destroyTokens":{"!description":"Destroys all the tokens in the aggregation {@link #getTokens tokens}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MultiInput"},"getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nDefines the icon to be displayed in the component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IIcon]"},"fireSuggestionItemSelect":{"!description":"Fires event {@link #event:suggestionItemSelect suggestionItemSelect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the value of the component. <br> <br> <b>Note:<\/b> The property is updated upon typing.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"detachValueHelpTrigger":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:valueHelpTrigger valueHelpTrigger} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the value of the component. <br> <br> <b>Note:<\/b> The property is updated upon typing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.MultiInput","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"removeAllTokens":{"!description":"Removes all the controls from the aggregation {@link #getTokens tokens}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IToken]"},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.MultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiInput<\/code> itself.\n\nFired when the value of the component changes at each keystroke, and when a suggestion item has been selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertToken":{"!description":"Inserts a token into the aggregation {@link #getTokens tokens}.","!static":false,"!category":"function","!type":"fn(oToken: sap.ui.webc.main.IToken, iIndex: Number) -> sap.ui.webc.main.MultiInput","parameters":{"oToken":"type: sap.ui.webc.main.IToken, description: The token to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the token should be inserted at; for a negative value of <code>iIndex<\/code>, the token is inserted at position 0; for a value greater than the current size of the aggregation, the token is inserted at the last position"}},"indexOfToken":{"!description":"Checks for the provided <code>sap.ui.webc.main.IToken<\/code> in the aggregation {@link #getTokens tokens}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oToken: sap.ui.webc.main.IToken) -> Number","parameters":{"oToken":"type: sap.ui.webc.main.IToken, description: The token whose index is looked for"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"openPicker":{"!description":"Manually opens the suggestions popover, assuming suggestions are enabled. Items must be preloaded for it to open.","!static":false,"!category":"function","!type":"fn()"},"removeAllSuggestionItems":{"!description":"Removes all the controls from the aggregation {@link #getSuggestionItems suggestionItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IInputSuggestionItem]"}},"sap.ui.webc.main.SemanticColor":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Neutral":{"!description":"Neutral color.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Negative":{"!description":"Negative color","!category":"enum","!type":"String"},"Positive":{"!description":"Positive color","!category":"enum","!type":"String"},"!category":"static class","Critical":{"!description":"Critical color","!category":"enum","!type":"String"},"Default":{"!description":"Default color (brand color)","!category":"enum","!type":"String"}},"sap.ui.webc.main.Carousel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Carousel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Carousel"},"sap.ui.webc.main.Label_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Label with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Label"},"sap.ui.webc.main.StandardListItem":{"getAdditionalTextState":{"!description":"Gets current value of property {@link #getAdditionalTextState additionalTextState}.\n\nDefines the state of the <code>additionalText<\/code>. <br> Available options are: <code>\"None\"<\/code> (by default), <code>\"Success\"<\/code>, <code>\"Warning\"<\/code>, <code>\"Information\"<\/code> and <code>\"Erorr\"<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines the selected state of the <code>ListItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.StandardListItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.StandardListItem","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDefines the description displayed right under the item text, if such is present.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.ui.webc.main.StandardListItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"setIconEnd":{"!description":"Sets a new value for property {@link #getIconEnd iconEnd}.\n\nDefines whether the <code>icon<\/code> should be displayed in the beginning of the list item or in the end. <br> <br> <b>Note:<\/b> If <code>image<\/code> is set, the <code>icon<\/code> would be displayed after the <code>image<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIconEnd?: Boolean) -> sap.ui.webc.main.StandardListItem","parameters":{"bIconEnd":"type: boolean, description: New value for property <code>iconEnd<\/code>"}},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDefines the description displayed right under the item text, if such is present.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>StandardListItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getAdditionalText additionalText} : string<\/li>\n<li>{@link #getAdditionalTextState additionalTextState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getIconEnd iconEnd} : boolean (default: false)<\/li>\n<li>{@link #getImage image} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getType type} : sap.ui.webc.main.ListItemType (default: Active)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:detailClick detailClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getIconEnd":{"!description":"Gets current value of property {@link #getIconEnd iconEnd}.\n\nDefines whether the <code>icon<\/code> should be displayed in the beginning of the list item or in the end. <br> <br> <b>Note:<\/b> If <code>image<\/code> is set, the <code>icon<\/code> would be displayed after the <code>image<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachDetailClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:detailClick detailClick} event of this <code>sap.ui.webc.main.StandardListItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.StandardListItem<\/code> itself.\n\nFired when the user clicks on the detail button when type is <code>Detail<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.StandardListItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.StandardListItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireDetailClick":{"!description":"Fires event {@link #event:detailClick detailClick} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.StandardListItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nDefines the <code>additionalText<\/code>, displayed in the end of the list item.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.StandardListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the visual indication and behavior of the list items. Available options are <code>Active<\/code> (by default), <code>Inactive<\/code> and <code>Detail<\/code>. <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press and hover, while with type <code>Inactive<\/code> and <code>Detail<\/code> - will not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Active<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: sap.ui.webc.main.ListItemType) -> sap.ui.webc.main.StandardListItem","parameters":{"sType":"type: sap.ui.webc.main.ListItemType, description: New value for property <code>type<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the <code>icon<\/code> source URI. <br> <br> <b>Note:<\/b> SAP-icons font provides numerous built-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.StandardListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setAdditionalTextState":{"!description":"Sets a new value for property {@link #getAdditionalTextState additionalTextState}.\n\nDefines the state of the <code>additionalText<\/code>. <br> Available options are: <code>\"None\"<\/code> (by default), <code>\"Success\"<\/code>, <code>\"Warning\"<\/code>, <code>\"Information\"<\/code> and <code>\"Erorr\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalTextState?: sap.ui.core.ValueState) -> sap.ui.webc.main.StandardListItem","parameters":{"sAdditionalTextState":"type: sap.ui.core.ValueState, description: New value for property <code>additionalTextState<\/code>"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the <code>icon<\/code> source URI. <br> <br> <b>Note:<\/b> SAP-icons font provides numerous built-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ui.webc.main.StandardListItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines the selected state of the <code>ListItem<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/webc/main/StandardListItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the visual indication and behavior of the list items. Available options are <code>Active<\/code> (by default), <code>Inactive<\/code> and <code>Detail<\/code>. <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press and hover, while with type <code>Inactive<\/code> and <code>Detail<\/code> - will not.\n\nDefault value is <code>Active<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ListItemType"},"setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nDefines the <code>additionalText<\/code>, displayed in the end of the list item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalText: String) -> sap.ui.webc.main.StandardListItem","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"}},"detachDetailClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:detailClick detailClick} event of this <code>sap.ui.webc.main.StandardListItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.StandardListItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getImage":{"!description":"Gets current value of property {@link #getImage image}.\n\nDefines the <code>image<\/code> source URI. <br> <br> <b>Note:<\/b> The <code>image<\/code> would be displayed in the beginning of the list item.","!static":false,"!category":"function","!type":"fn() -> String"},"setImage":{"!description":"Sets a new value for property {@link #getImage image}.\n\nDefines the <code>image<\/code> source URI. <br> <br> <b>Note:<\/b> The <code>image<\/code> would be displayed in the beginning of the list item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sImage: String) -> sap.ui.webc.main.StandardListItem","parameters":{"sImage":"type: string, description: New value for property <code>image<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.StandardListItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.Slider":{"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Slider","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowTickmarks":{"!description":"Gets current value of property {@link #getShowTickmarks showTickmarks}.\n\nEnables tickmarks visualization for each step. <br> <br> <b>Note:<\/b> The step must be a positive number.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getStep":{"!description":"Gets current value of property {@link #getStep step}.\n\nDefines the size of the slider's selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). <br> <br> <b>Note:<\/b> If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Slider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setMin":{"!description":"Sets a new value for property {@link #getMin min}.\n\nDefines the minimum value of the slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fMin?: Number) -> sap.ui.webc.main.Slider","parameters":{"fMin":"type: float, description: New value for property <code>min<\/code>"}},"!constructorDescription":"Constructor for a new <code>Slider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getLabelInterval labelInterval} : int (default: 0)<\/li>\n<li>{@link #getMax max} : float (default: 100)<\/li>\n<li>{@link #getMin min} : float (default: 0)<\/li>\n<li>{@link #getShowTickmarks showTickmarks} : boolean (default: false)<\/li>\n<li>{@link #getShowTooltip showTooltip} : boolean (default: false)<\/li>\n<li>{@link #getStep step} : int (default: 1)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getMin":{"!description":"Gets current value of property {@link #getMin min}.\n\nDefines the minimum value of the slider.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getShowTooltip":{"!description":"Gets current value of property {@link #getShowTooltip showTooltip}.\n\nEnables handle tooltip displaying the current value.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabelInterval":{"!description":"Gets current value of property {@link #getLabelInterval labelInterval}.\n\nDisplays a label with a value on every N-th step. <br> <br> <b>Note:<\/b> The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLabelInterval":{"!description":"Sets a new value for property {@link #getLabelInterval labelInterval}.\n\nDisplays a label with a value on every N-th step. <br> <br> <b>Note:<\/b> The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iLabelInterval?: Number) -> sap.ui.webc.main.Slider","parameters":{"iLabelInterval":"type: int, description: New value for property <code>labelInterval<\/code>"}},"setStep":{"!description":"Sets a new value for property {@link #getStep step}.\n\nDefines the size of the slider's selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). <br> <br> <b>Note:<\/b> If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iStep?: Number) -> sap.ui.webc.main.Slider","parameters":{"iStep":"type: int, description: New value for property <code>step<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setMax":{"!description":"Sets a new value for property {@link #getMax max}.\n\nDefines the maximum value of the slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn(fMax?: Number) -> sap.ui.webc.main.Slider","parameters":{"fMax":"type: float, description: New value for property <code>max<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Slider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMax":{"!description":"Gets current value of property {@link #getMax max}.\n\nDefines the maximum value of the slider.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Slider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Slider<\/code> itself.\n\nFired when the value changes and the user has finished interacting with the slider.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Slider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Slider<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Slider","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowTickmarks":{"!description":"Sets a new value for property {@link #getShowTickmarks showTickmarks}.\n\nEnables tickmarks visualization for each step. <br> <br> <b>Note:<\/b> The step must be a positive number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTickmarks?: Boolean) -> sap.ui.webc.main.Slider","parameters":{"bShowTickmarks":"type: boolean, description: New value for property <code>showTickmarks<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Slider","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setShowTooltip":{"!description":"Sets a new value for property {@link #getShowTooltip showTooltip}.\n\nEnables handle tooltip displaying the current value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTooltip?: Boolean) -> sap.ui.webc.main.Slider","parameters":{"bShowTooltip":"type: boolean, description: New value for property <code>showTooltip<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Slider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nCurrent value of the slider\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Slider","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/Slider","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nCurrent value of the slider\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue?: Number) -> sap.ui.webc.main.Slider","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Slider<\/code> itself.\n\nFired when the value changes due to user interaction that is not yet finished - during mouse/touch dragging.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Slider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Slider<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.ui.webc.main.TabsOverflowMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class","End":{"!description":"End type is used if there should be only one overflow with hidden the tabs at the end of the tab container.","!category":"enum","!type":"String"},"StartAndEnd":{"!description":"StartAndEnd type is used if there should be two overflows on both ends of the tab container.","!category":"enum","!type":"String"}},"sap.ui.webc.main.SuggestionGroupItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SuggestionGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.SuggestionGroupItem"},"sap.ui.webc.main.Tab":{"getSubTabs":{"!description":"Gets content of aggregation {@link #getSubTabs subTabs}.\n\nDefines hierarchies with nested sub tabs. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.Tab<\/code> and <code>sap.ui.webc.main.TabSeparator<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITab]"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nSpecifies if the component is selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.Tab","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nHolds the content associated with this tab.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","!constructorDescription":"Constructor for a new <code>Tab<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAdditionalText additionalText} : string (default: \"\")<\/li>\n<li>{@link #getDesign design} : sap.ui.webc.main.SemanticColor (default: Default)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSubTabs subTabs} : sap.ui.webc.main.ITab[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllSubTabs":{"!description":"Removes all the controls from the aggregation {@link #getSubTabs subTabs}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITab]"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Tab"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nRepresents the \"additionalText\" text, which is displayed in the tab.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Tab.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTabInStripDomRef":{"!description":"Returns the DOM reference of the tab that is placed in the header. <b>Note:<\/b> If you need a DOM ref to the tab content please use the <code>getDomRef<\/code> method.","!static":false,"!category":"function","!type":"fn()"},"addSubTab":{"!description":"Adds some subTab to the aggregation {@link #getSubTabs subTabs}.","!static":false,"!category":"function","!type":"fn(oSubTab: sap.ui.webc.main.ITab) -> sap.ui.webc.main.Tab","parameters":{"oSubTab":"type: sap.ui.webc.main.ITab, description: The subTab to add; if empty, nothing is inserted"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text to be displayed for the item.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.Tab","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"destroySubTabs":{"!description":"Destroys all the subTabs in the aggregation {@link #getSubTabs subTabs}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Tab"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon source URI to be displayed as graphical element within the component. The SAP-icons font provides numerous built-in icons. See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Tab with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon source URI to be displayed as graphical element within the component. The SAP-icons font provides numerous built-in icons. See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.Tab","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nSpecifies if the component is selected.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfSubTab":{"!description":"Checks for the provided <code>sap.ui.webc.main.ITab<\/code> in the aggregation {@link #getSubTabs subTabs}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSubTab: sap.ui.webc.main.ITab) -> Number","parameters":{"oSubTab":"type: sap.ui.webc.main.ITab, description: The subTab whose index is looked for"}},"removeSubTab":{"!description":"Removes a subTab from the aggregation {@link #getSubTabs subTabs}.","!static":false,"!category":"function","!type":"fn(vSubTab: Number | String | sap.ui.webc.main.ITab) -> sap.ui.webc.main.ITab | null","parameters":{"vSubTab":"type: int|string|sap.ui.webc.main.ITab, description: The subTab to remove or its index or id"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Tab","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/Tab","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the component's design color. <br> <br> The design is applied to: <ul> <li>the component icon<\/li> <li>the <code>text<\/code> when the component overflows<\/li> <li>the tab selection line<\/li> <\/ul>\n\n<br> <br> Available designs are: <code>\"Default\"<\/code>, <code>\"Neutral\"<\/code>, <code>\"Positive\"<\/code>, <code>\"Critical\"<\/code> and <code>\"Negative\"<\/code>.\n\n<br> <br> <b>Note:<\/b> The design depends on the current theme.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.SemanticColor"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","insertSubTab":{"!description":"Inserts a subTab into the aggregation {@link #getSubTabs subTabs}.","!static":false,"!category":"function","!type":"fn(oSubTab: sap.ui.webc.main.ITab, iIndex: Number) -> sap.ui.webc.main.Tab","parameters":{"oSubTab":"type: sap.ui.webc.main.ITab, description: The subTab to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the subTab should be inserted at; for a negative value of <code>iIndex<\/code>, the subTab is inserted at position 0; for a value greater than the current size of the aggregation, the subTab is inserted at the last position"}},"setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nRepresents the \"additionalText\" text, which is displayed in the tab.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalText?: String) -> sap.ui.webc.main.Tab","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"}},"setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the component's design color. <br> <br> The design is applied to: <ul> <li>the component icon<\/li> <li>the <code>text<\/code> when the component overflows<\/li> <li>the tab selection line<\/li> <\/ul>\n\n<br> <br> Available designs are: <code>\"Default\"<\/code>, <code>\"Neutral\"<\/code>, <code>\"Positive\"<\/code>, <code>\"Critical\"<\/code> and <code>\"Negative\"<\/code>.\n\n<br> <br> <b>Note:<\/b> The design depends on the current theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.SemanticColor) -> sap.ui.webc.main.Tab","parameters":{"sDesign":"type: sap.ui.webc.main.SemanticColor, description: New value for property <code>design<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Tab","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text to be displayed for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Tab","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.Option":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nDefines the additional text displayed at the end of the option element.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Option.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines the selected state of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.Option","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the <code>icon<\/code> source URI. <br> <br> <b>Note:<\/b> SAP-icons font provides numerous built-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Option with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the <code>icon<\/code> source URI. <br> <br> <b>Note:<\/b> SAP-icons font provides numerous built-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ui.webc.main.Option","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines the selected state of the component.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the value of the <code>sap.ui.webc.main.Select<\/code> inside an HTML Form element when this component is selected. For more information on HTML Form support, see the <code>name<\/code> property of <code>sap.ui.webc.main.Select<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Option","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new <code>Option<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAdditionalText additionalText} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Option","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nDefines the additional text displayed at the end of the option element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalText: String) -> sap.ui.webc.main.Option","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the value of the <code>sap.ui.webc.main.Select<\/code> inside an HTML Form element when this component is selected. For more information on HTML Form support, see the <code>name<\/code> property of <code>sap.ui.webc.main.Select<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.webc.main.Option","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Option","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.CarouselArrowsPlacement":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Navigation":{"!description":"Carousel arrows are placed on the sides of the page indicator of the Carousel.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Content":{"!description":"Carousel arrows are placed on the sides of the current Carousel page.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc.main.TitleLevel":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","H1":{"!description":"Renders <code>h1<\/code> tag.","!category":"enum","!type":"String"},"!category":"static class","H2":{"!description":"Renders <code>h2<\/code> tag.","!category":"enum","!type":"String"},"H3":{"!description":"Renders <code>h3<\/code> tag.","!category":"enum","!type":"String"},"H4":{"!description":"Renders <code>h4<\/code> tag.","!category":"enum","!type":"String"},"H5":{"!description":"Renders <code>h5<\/code> tag.","!category":"enum","!type":"String"},"H6":{"!description":"Renders <code>h6<\/code> tag.","!category":"enum","!type":"String"}},"sap.ui.webc.main.SegmentedButtonItem":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"setIconEnd":{"!description":"Sets a new value for property {@link #getIconEnd iconEnd}.\n\n<b>Note:<\/b> The property is inherited and not supported. If set, it won't take any effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIconEnd?: Boolean) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"bIconEnd":"type: boolean, description: New value for property <code>iconEnd<\/code>"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>SegmentedButtonItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibilityAttributes accessibilityAttributes} : object (default: {})<\/li>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getDesign design} : sap.ui.webc.main.ButtonDesign (default: Default)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getIconEnd iconEnd} : boolean (default: false)<\/li>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<li>{@link #getSubmits submits} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getIconEnd":{"!description":"Gets current value of property {@link #getIconEnd iconEnd}.\n\n<b>Note:<\/b> The property is inherited and not supported. If set, it won't take any effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSubmits":{"!description":"Gets current value of property {@link #getSubmits submits}.\n\n<b>Note:<\/b> The property is inherited and not supported. If set, it won't take any effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.SegmentedButtonItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.SegmentedButtonItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.SegmentedButtonItem<\/code> itself.\n\nFired when the component is activated either with a mouse/tap or by using the Enter or Space key. <br> <br> <b>Note:<\/b> The event will not be fired if the <code>disabled<\/code> property is set to <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.SegmentedButtonItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setPressed":{"!description":"Sets a new value for property {@link #getPressed pressed}.\n\nDetermines whether the component is displayed as pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed?: Boolean) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibilityAttributes":{"!description":"Sets a new value for property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <li><code>controls<\/code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAccessibilityAttributes?: Object) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"oAccessibilityAttributes":"type: object, description: New value for property <code>accessibilityAttributes<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SegmentedButtonItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.SegmentedButtonItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getAccessibilityAttributes":{"!description":"Gets current value of property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <li><code>controls<\/code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.<\/li> <\/ul>\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setSubmits":{"!description":"Sets a new value for property {@link #getSubmits submits}.\n\n<b>Note:<\/b> The property is inherited and not supported. If set, it won't take any effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSubmits?: Boolean) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"bSubmits":"type: boolean, description: New value for property <code>submits<\/code>"}},"!module":"sap/ui/webc/main/SegmentedButtonItem","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\n<b>Note:<\/b> The property is inherited and not supported. If set, it won't take any effect.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ButtonDesign"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\n<b>Note:<\/b> The property is inherited and not supported. If set, it won't take any effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.ButtonDesign) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"sDesign":"type: sap.ui.webc.main.ButtonDesign, description: New value for property <code>design<\/code>"}},"getPressed":{"!description":"Gets current value of property {@link #getPressed pressed}.\n\nDetermines whether the component is displayed as pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.SegmentedButtonItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.AvatarColorScheme":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Accent1":{"!category":"enum","!type":"String"},"Accent10":{"!category":"enum","!type":"String"},"Placeholder":{"!category":"enum","!type":"String"},"Accent9":{"!category":"enum","!type":"String"},"Accent8":{"!category":"enum","!type":"String"},"!category":"static class","Accent7":{"!category":"enum","!type":"String"},"Accent6":{"!category":"enum","!type":"String"},"Accent5":{"!category":"enum","!type":"String"},"Accent4":{"!category":"enum","!type":"String"},"Accent3":{"!category":"enum","!type":"String"},"Accent2":{"!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library"},"sap.ui.webc.main.ComboBoxItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ComboBoxItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ComboBoxItem"},"sap.ui.webc.main.Title_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Title with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Title"},"sap.ui.webc.main.AvatarShape":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Circle":{"!description":"Circular shape.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","!category":"static class","Square":{"!description":"Square shape.","!category":"enum","!type":"String"}},"sap.ui.webc.main.ListGrowingMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Button":{"!description":"Component's <code>load-more<\/code> is fired upon pressing a \"More\" button. at the bottom.","!category":"enum","!type":"String"},"Scroll":{"!description":"Component's <code>load-more<\/code> is fired upon scroll.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"Component's growing is not enabled.","!category":"enum","!type":"String"}},"sap.ui.webc.main.StandardListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.StandardListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.StandardListItem"},"sap.ui.webc.main.TableGrowingMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Button":{"!description":"Component's <code>load-more<\/code> is fired upon pressing a \"More\" button. at the bottom.","!category":"enum","!type":"String"},"Scroll":{"!description":"Component's <code>load-more<\/code> is fired upon scroll.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"Component's growing is not enabled.","!category":"enum","!type":"String"}},"sap.ui.webc.main.StepInput":{"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.StepInput","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.StepInput","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.StepInput","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValuePrecision":{"!description":"Sets a new value for property {@link #getValuePrecision valuePrecision}.\n\nDetermines the number of digits after the decimal point of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iValuePrecision?: Number) -> sap.ui.webc.main.StepInput","parameters":{"iValuePrecision":"type: int, description: New value for property <code>valuePrecision<\/code>"}},"getStep":{"!description":"Gets current value of property {@link #getStep step}.\n\nDefines a step of increasing/decreasing the value of the component.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.webc.common.WebComponent","getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.StepInput","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.StepInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.StepInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setMin":{"!description":"Sets a new value for property {@link #getMin min}.\n\nDefines a minimum value of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMin: Number) -> sap.ui.webc.main.StepInput","parameters":{"fMin":"type: float, description: New value for property <code>min<\/code>"}},"!constructorDescription":"Constructor for a new <code>StepInput<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMax max} : float<\/li>\n<li>{@link #getMin min} : float<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: undefined)<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getStep step} : float (default: 1)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getValuePrecision valuePrecision} : int (default: 0)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.StepInput","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getMin":{"!description":"Gets current value of property {@link #getMin min}.\n\nDefines a minimum value of the component.","!static":false,"!category":"function","!type":"fn() -> Number"},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.StepInput","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValuePrecision":{"!description":"Gets current value of property {@link #getValuePrecision valuePrecision}.\n\nDetermines the number of digits after the decimal point of the component.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setStep":{"!description":"Sets a new value for property {@link #getStep step}.\n\nDefines a step of increasing/decreasing the value of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(fStep?: Number) -> sap.ui.webc.main.StepInput","parameters":{"fStep":"type: float, description: New value for property <code>step<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setMax":{"!description":"Sets a new value for property {@link #getMax max}.\n\nDefines a maximum value of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMax: Number) -> sap.ui.webc.main.StepInput","parameters":{"fMax":"type: float, description: New value for property <code>max<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.StepInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.StepInput","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getMax":{"!description":"Gets current value of property {@link #getMax max}.\n\nDefines a maximum value of the component.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.StepInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.StepInput<\/code> itself.\n\nFired when the input operation has finished by pressing Enter or on focusout.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.StepInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.StepInput<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.StepInput","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.StepInput","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.StepInput","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.StepInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines a value of the component.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.StepInput","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/StepInput","getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines a value of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue?: Number) -> sap.ui.webc.main.StepInput","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.webc.main.GroupHeaderListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.GroupHeaderListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.GroupHeaderListItem"},"sap.ui.webc.main.Panel":{"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDetermines the content of the component. The content is visible only when the component is expanded.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setCollapsed":{"!description":"Sets a new value for property {@link #getCollapsed collapsed}.\n\nIndicates whether the component is collapsed and only the header is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCollapsed?: Boolean) -> sap.ui.webc.main.Panel","parameters":{"bCollapsed":"type: boolean, description: New value for property <code>collapsed<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","setFixed":{"!description":"Sets a new value for property {@link #getFixed fixed}.\n\nDetermines whether the component is in a fixed state that is not expandable/collapsible by user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFixed?: Boolean) -> sap.ui.webc.main.Panel","parameters":{"bFixed":"type: boolean, description: New value for property <code>fixed<\/code>"}},"!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.Panel","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeaderLevel":{"!description":"Sets a new value for property {@link #getHeaderLevel headerLevel}.\n\nDefines the \"aria-level\" of component heading, set by the <code>headerText<\/code>. <br> <br> Available options are: <code>\"H6\"<\/code> to <code>\"H1\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>H2<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderLevel?: sap.ui.webc.main.TitleLevel) -> sap.ui.webc.main.Panel","parameters":{"sHeaderLevel":"type: sap.ui.webc.main.TitleLevel, description: New value for property <code>headerLevel<\/code>"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the component header area. <br> <br> <b>Note:<\/b> When a header is provided, the <code>headerText<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.\n\nThis property is used to set the header text of the component. The text is visible in both expanded and collapsed states. <br> <br> <b>Note:<\/b> This property is overridden by the <code>header<\/code> slot.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getFixed":{"!description":"Gets current value of property {@link #getFixed fixed}.\n\nDetermines whether the component is in a fixed state that is not expandable/collapsible by user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Panel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.ui.webc.main.PanelAccessibleRole (default: Form)<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getFixed fixed} : boolean (default: false)<\/li>\n<li>{@link #getHeaderLevel headerLevel} : sap.ui.webc.main.TitleLevel (default: H2)<\/li>\n<li>{@link #getHeaderText headerText} : string (default: \"\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getNoAnimation noAnimation} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getHeader header} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:toggle toggle} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","detachToggle":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:toggle toggle} event of this <code>sap.ui.webc.main.Panel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Panel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getHeaderLevel":{"!description":"Gets current value of property {@link #getHeaderLevel headerLevel}.\n\nDefines the \"aria-level\" of component heading, set by the <code>headerText<\/code>. <br> <br> Available options are: <code>\"H6\"<\/code> to <code>\"H1\"<\/code>.\n\nDefault value is <code>H2<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TitleLevel"},"getNoAnimation":{"!description":"Gets current value of property {@link #getNoAnimation noAnimation}.\n\nIndicates whether the transition between the expanded and the collapsed state of the component is animated. By default the animation is enabled.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Panel"},"attachToggle":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:toggle toggle} event of this <code>sap.ui.webc.main.Panel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Panel<\/code> itself.\n\nFired when the component is expanded/collapsed by user interaction.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Panel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Panel<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getCollapsed":{"!description":"Gets current value of property {@link #getCollapsed collapsed}.\n\nIndicates whether the component is collapsed and only the header is displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nThis property is used to set the header text of the component. The text is visible in both expanded and collapsed states. <br> <br> <b>Note:<\/b> This property is overridden by the <code>header<\/code> slot.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText?: String) -> sap.ui.webc.main.Panel","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","addHeader":{"!description":"Adds some header to the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.webc.main.Panel","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Panel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibleRole":{"!description":"Sets a new value for property {@link #getAccessibleRole accessibleRole}.\n\nSets the accessible aria role of the component. Depending on the usage, you can change the role from the default <code>Form<\/code> to <code>Region<\/code> or <code>Complementary<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Form<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleRole?: sap.ui.webc.main.PanelAccessibleRole) -> sap.ui.webc.main.Panel","parameters":{"sAccessibleRole":"type: sap.ui.webc.main.PanelAccessibleRole, description: New value for property <code>accessibleRole<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.Panel","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Panel","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Panel","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeAllHeader":{"!description":"Removes all the controls from the aggregation {@link #getHeader header}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Panel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeHeader":{"!description":"Removes a header from the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(vHeader: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vHeader":"type: int|string|sap.ui.core.Control, description: The header to remove or its index or id"}},"!module":"sap/ui/webc/main/Panel","setNoAnimation":{"!description":"Sets a new value for property {@link #getNoAnimation noAnimation}.\n\nIndicates whether the transition between the expanded and the collapsed state of the component is animated. By default the animation is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bNoAnimation?: Boolean) -> sap.ui.webc.main.Panel","parameters":{"bNoAnimation":"type: boolean, description: New value for property <code>noAnimation<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","destroyHeader":{"!description":"Destroys all the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Panel"},"getAccessibleRole":{"!description":"Gets current value of property {@link #getAccessibleRole accessibleRole}.\n\nSets the accessible aria role of the component. Depending on the usage, you can change the role from the default <code>Form<\/code> to <code>Region<\/code> or <code>Complementary<\/code>.\n\nDefault value is <code>Form<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.PanelAccessibleRole"},"insertHeader":{"!description":"Inserts a header into the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Panel","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the header should be inserted at; for a negative value of <code>iIndex<\/code>, the header is inserted at position 0; for a value greater than the current size of the aggregation, the header is inserted at the last position"}},"fireToggle":{"!description":"Fires event {@link #event:toggle toggle} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Panel","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Panel","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"indexOfHeader":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeader header}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> Number","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header whose index is looked for"}}},"sap.ui.webc.main.RangeSlider":{"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.RangeSlider","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getShowTickmarks":{"!description":"Gets current value of property {@link #getShowTickmarks showTickmarks}.\n\nEnables tickmarks visualization for each step. <br> <br> <b>Note:<\/b> The step must be a positive number.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getStep":{"!description":"Gets current value of property {@link #getStep step}.\n\nDefines the size of the slider's selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). <br> <br> <b>Note:<\/b> If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.RangeSlider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RangeSlider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getStartValue":{"!description":"Gets current value of property {@link #getStartValue startValue}.\n\nDefines start point of a selection - position of a first handle on the slider. <br> <br>\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMin":{"!description":"Sets a new value for property {@link #getMin min}.\n\nDefines the minimum value of the slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fMin?: Number) -> sap.ui.webc.main.RangeSlider","parameters":{"fMin":"type: float, description: New value for property <code>min<\/code>"}},"!constructorDescription":"Constructor for a new <code>RangeSlider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEndValue endValue} : float (default: 100)<\/li>\n<li>{@link #getLabelInterval labelInterval} : int (default: 0)<\/li>\n<li>{@link #getMax max} : float (default: 100)<\/li>\n<li>{@link #getMin min} : float (default: 0)<\/li>\n<li>{@link #getShowTickmarks showTickmarks} : boolean (default: false)<\/li>\n<li>{@link #getShowTooltip showTooltip} : boolean (default: false)<\/li>\n<li>{@link #getStartValue startValue} : float (default: 0)<\/li>\n<li>{@link #getStep step} : int (default: 1)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getMin":{"!description":"Gets current value of property {@link #getMin min}.\n\nDefines the minimum value of the slider.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getShowTooltip":{"!description":"Gets current value of property {@link #getShowTooltip showTooltip}.\n\nEnables handle tooltip displaying the current value.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLabelInterval":{"!description":"Gets current value of property {@link #getLabelInterval labelInterval}.\n\nDisplays a label with a value on every N-th step. <br> <br> <b>Note:<\/b> The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLabelInterval":{"!description":"Sets a new value for property {@link #getLabelInterval labelInterval}.\n\nDisplays a label with a value on every N-th step. <br> <br> <b>Note:<\/b> The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iLabelInterval?: Number) -> sap.ui.webc.main.RangeSlider","parameters":{"iLabelInterval":"type: int, description: New value for property <code>labelInterval<\/code>"}},"setStep":{"!description":"Sets a new value for property {@link #getStep step}.\n\nDefines the size of the slider's selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). <br> <br> <b>Note:<\/b> If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iStep?: Number) -> sap.ui.webc.main.RangeSlider","parameters":{"iStep":"type: int, description: New value for property <code>step<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getEndValue":{"!description":"Gets current value of property {@link #getEndValue endValue}.\n\nDefines end point of a selection - position of a second handle on the slider. <br> <br>\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMax":{"!description":"Sets a new value for property {@link #getMax max}.\n\nDefines the maximum value of the slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn(fMax?: Number) -> sap.ui.webc.main.RangeSlider","parameters":{"fMax":"type: float, description: New value for property <code>max<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.RangeSlider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMax":{"!description":"Gets current value of property {@link #getMax max}.\n\nDefines the maximum value of the slider.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setStartValue":{"!description":"Sets a new value for property {@link #getStartValue startValue}.\n\nDefines start point of a selection - position of a first handle on the slider. <br> <br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fStartValue?: Number) -> sap.ui.webc.main.RangeSlider","parameters":{"fStartValue":"type: float, description: New value for property <code>startValue<\/code>"}},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.RangeSlider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RangeSlider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.RangeSlider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.RangeSlider<\/code> itself.\n\nFired when the value changes and the user has finished interacting with the slider.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RangeSlider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.RangeSlider<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.RangeSlider","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setShowTickmarks":{"!description":"Sets a new value for property {@link #getShowTickmarks showTickmarks}.\n\nEnables tickmarks visualization for each step. <br> <br> <b>Note:<\/b> The step must be a positive number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTickmarks?: Boolean) -> sap.ui.webc.main.RangeSlider","parameters":{"bShowTickmarks":"type: boolean, description: New value for property <code>showTickmarks<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.RangeSlider","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setShowTooltip":{"!description":"Sets a new value for property {@link #getShowTooltip showTooltip}.\n\nEnables handle tooltip displaying the current value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTooltip?: Boolean) -> sap.ui.webc.main.RangeSlider","parameters":{"bShowTooltip":"type: boolean, description: New value for property <code>showTooltip<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.RangeSlider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.RangeSlider","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/RangeSlider","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.RangeSlider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.RangeSlider<\/code> itself.\n\nFired when the value changes due to user interaction that is not yet finished - during mouse/touch dragging.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RangeSlider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.RangeSlider<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setEndValue":{"!description":"Sets a new value for property {@link #getEndValue endValue}.\n\nDefines end point of a selection - position of a second handle on the slider. <br> <br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn(fEndValue?: Number) -> sap.ui.webc.main.RangeSlider","parameters":{"fEndValue":"type: float, description: New value for property <code>endValue<\/code>"}}},"sap.ui.webc.main.Popover_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Popover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Popover"},"sap.ui.webc.main.IBreadcrumbsItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.Token_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Token with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Token"},"sap.ui.webc.main.DateRangePicker":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getSecondaryCalendarType":{"!description":"Gets current value of property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.DateRangePicker","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the aria-label attribute for the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getStartDateValue":{"!description":"Returns the start date of the currently selected range as JavaScript Date instance.","!static":false,"!category":"function","!type":"fn()"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.DateRangePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateRangePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getPrimaryCalendarType":{"!description":"Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"setDelimiter":{"!description":"Sets a new value for property {@link #getDelimiter delimiter}.\n\nDetermines the symbol which separates the dates. If not supplied, the default time interval delimiter for the current locale will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDelimiter: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sDelimiter":"type: string, description: New value for property <code>delimiter<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setPrimaryCalendarType":{"!description":"Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.webc.main.DateRangePicker","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.DateRangePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the aria-label attribute for the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.DateRangePicker","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getDateValueUTC":{"!description":"Returns the <b>Note:<\/b> The getter method is inherited and not supported. If called it will return an empty value.","!static":false,"!category":"function","!type":"fn()"},"closePicker":{"!description":"Closes the picker.","!static":false,"!category":"function","!type":"fn()"},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.DateRangePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateRangePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.DateRangePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.DateRangePicker<\/code> itself.\n\nFired when the input operation has finished by pressing Enter or on focusout.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateRangePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.DateRangePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getEndDateValue":{"!description":"Returns the end date of the currently selected range as JavaScript Date instance.","!static":false,"!category":"function","!type":"fn()"},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.DateRangePicker","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"getDelimiter":{"!description":"Gets current value of property {@link #getDelimiter delimiter}.\n\nDetermines the symbol which separates the dates. If not supplied, the default time interval delimiter for the current locale will be used.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.DateRangePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.DateRangePicker","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setHideWeekNumbers":{"!description":"Sets a new value for property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideWeekNumbers?: Boolean) -> sap.ui.webc.main.DateRangePicker","parameters":{"bHideWeekNumbers":"type: boolean, description: New value for property <code>hideWeekNumbers<\/code>"}},"isOpen":{"!description":"Checks if the picker is open.","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/webc/main/DateRangePicker","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getDateValue":{"!description":"Returns the <b>Note:<\/b> The getter method is inherited and not supported. If called it will return an empty value.","!static":false,"!category":"function","!type":"fn()"},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"setFormatPattern":{"!description":"Sets a new value for property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFormatPattern?: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sFormatPattern":"type: string, description: New value for property <code>formatPattern<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMinDate":{"!description":"Gets current value of property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHideWeekNumbers":{"!description":"Gets current value of property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>DateRangePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getDelimiter delimiter} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getFormatPattern formatPattern} : string (default: \"\")<\/li>\n<li>{@link #getHideWeekNumbers hideWeekNumbers} : boolean (default: false)<\/li>\n<li>{@link #getMaxDate maxDate} : string (default: \"\")<\/li>\n<li>{@link #getMinDate minDate} : string (default: \"\")<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: undefined)<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType (default: undefined)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.DateRangePicker","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"formatValue":{"!description":"Formats a Java Script date object into a string representing a locale date according to the <code>formatPattern<\/code> property of the DatePicker instance","!static":false,"!category":"function","!type":"fn(date: Object)","parameters":{"date":"type: object, description: A Java Script date object to be formatted as string"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormatPattern":{"!description":"Gets current value of property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"isValid":{"!description":"Checks if a value is valid against the current date format of the DatePicker.","!static":false,"!category":"function","!type":"fn(value: String)","parameters":{"value":"type: string, description: A value to be tested against the current date format"}},"getMaxDate":{"!description":"Gets current value of property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setSecondaryCalendarType":{"!description":"Sets a new value for property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondaryCalendarType?: sap.ui.core.CalendarType) -> sap.ui.webc.main.DateRangePicker","parameters":{"sSecondaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>secondaryCalendarType<\/code>"}},"isInValidRange":{"!description":"Checks if a date is between the minimum and maximum date.","!static":false,"!category":"function","!type":"fn(value: String)","parameters":{"value":"type: string, description: A value to be checked"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.DateRangePicker","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines a formatted date value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setMaxDate":{"!description":"Sets a new value for property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxDate?: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sMaxDate":"type: string, description: New value for property <code>maxDate<\/code>"}},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines a formatted date value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.DateRangePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.DateRangePicker<\/code> itself.\n\nFired when the value of the component is changed at each key stroke.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateRangePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.DateRangePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"openPicker":{"!description":"Opens the picker.","!static":false,"!category":"function","!type":"fn()"},"setMinDate":{"!description":"Sets a new value for property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMinDate?: String) -> sap.ui.webc.main.DateRangePicker","parameters":{"sMinDate":"type: string, description: New value for property <code>minDate<\/code>"}}},"sap.ui.webc.main.TreeItem":{"getAdditionalTextState":{"!description":"Gets current value of property {@link #getAdditionalTextState additionalTextState}.\n\nDefines the state of the <code>additionalText<\/code>. <br> Available options are: <code>\"None\"<\/code> (by default), <code>\"Success\"<\/code>, <code>\"Warning\"<\/code>, <code>\"Information\"<\/code> and <code>\"Erorr\"<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.ITreeItem) -> sap.ui.webc.main.ITreeItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.ITreeItem, description: The item to remove or its index or id"}},"setExpanded":{"!description":"Sets a new value for property {@link #getExpanded expanded}.\n\nDefines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded?: Boolean) -> sap.ui.webc.main.TreeItem","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines whether the tree node is selected by the user. Only has effect if the <code>sap.ui.webc.main.Tree<\/code> is in one of the following modes: in <code>SingleSelect<\/code>, <code>SingleSelectBegin<\/code>, <code>SingleSelectEnd<\/code> and <code>MultiSelect<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.TreeItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TreeItem"},"!category":"class","setIndeterminate":{"!description":"Sets a new value for property {@link #getIndeterminate indeterminate}.\n\nDefines whether the selection of a tree node is displayed as partially selected. <br> <br> <b>Note:<\/b> The indeterminate state can be set only programatically and can\u2019t be achieved by user interaction, meaning that the resulting visual state depends on the values of the <code>indeterminate<\/code> and <code>selected<\/code> properties: <ul> <li> If a tree node has both <code>selected<\/code> and <code>indeterminate<\/code> set to <code>true<\/code>, it is displayed as partially selected. <li> If a tree node has <code>selected<\/code> set to <code>true<\/code> and <code>indeterminate<\/code> set to <code>false<\/code>, it is displayed as selected. <li> If a tree node has <code>selected<\/code> set to <code>false<\/code>, it is displayed as not selected regardless of the value of the <code>indeterminate<\/code> property. <\/ul> <br> <b>Note:<\/b> This property takes effect only when the <code>sap.ui.webc.main.Tree<\/code> is in <code>MultiSelect<\/code> mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIndeterminate?: Boolean) -> sap.ui.webc.main.TreeItem","parameters":{"bIndeterminate":"type: boolean, description: New value for property <code>indeterminate<\/code>"}},"setHasChildren":{"!description":"Sets a new value for property {@link #getHasChildren hasChildren}.\n\nDefines whether the tree node has children, even if currently no other tree nodes are slotted inside. <br> <i>Note:<\/i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to <code>true<\/code> for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHasChildren?: Boolean) -> sap.ui.webc.main.TreeItem","parameters":{"bHasChildren":"type: boolean, description: New value for property <code>hasChildren<\/code>"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITreeItem) -> sap.ui.webc.main.TreeItem","parameters":{"oItem":"type: sap.ui.webc.main.ITreeItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the items of this component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITreeItem]"},"!constructorDescription":"Constructor for a new <code>TreeItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAdditionalText additionalText} : string<\/li>\n<li>{@link #getAdditionalTextState additionalTextState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getHasChildren hasChildren} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getIndeterminate indeterminate} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.webc.main.ITreeItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.ITreeItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITreeItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.ITreeItem, description: The item whose index is looked for"}},"getHasChildren":{"!description":"Gets current value of property {@link #getHasChildren hasChildren}.\n\nDefines whether the tree node has children, even if currently no other tree nodes are slotted inside. <br> <i>Note:<\/i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to <code>true<\/code> for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIndeterminate":{"!description":"Gets current value of property {@link #getIndeterminate indeterminate}.\n\nDefines whether the selection of a tree node is displayed as partially selected. <br> <br> <b>Note:<\/b> The indeterminate state can be set only programatically and can\u2019t be achieved by user interaction, meaning that the resulting visual state depends on the values of the <code>indeterminate<\/code> and <code>selected<\/code> properties: <ul> <li> If a tree node has both <code>selected<\/code> and <code>indeterminate<\/code> set to <code>true<\/code>, it is displayed as partially selected. <li> If a tree node has <code>selected<\/code> set to <code>true<\/code> and <code>indeterminate<\/code> set to <code>false<\/code>, it is displayed as selected. <li> If a tree node has <code>selected<\/code> set to <code>false<\/code>, it is displayed as not selected regardless of the value of the <code>indeterminate<\/code> property. <\/ul> <br> <b>Note:<\/b> This property takes effect only when the <code>sap.ui.webc.main.Tree<\/code> is in <code>MultiSelect<\/code> mode.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nDefines the <code>additionalText<\/code>, displayed in the end of the tree item.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TreeItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the tree item.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nDefines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"toggle":{"!description":"Call this method to manually switch the <code>expanded<\/code> state of a tree item.","!static":false,"!category":"function","!type":"fn()"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITreeItem]"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIf set, an icon will be displayed before the text, representing the tree item.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TreeItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setAdditionalTextState":{"!description":"Sets a new value for property {@link #getAdditionalTextState additionalTextState}.\n\nDefines the state of the <code>additionalText<\/code>. <br> Available options are: <code>\"None\"<\/code> (by default), <code>\"Success\"<\/code>, <code>\"Warning\"<\/code>, <code>\"Information\"<\/code> and <code>\"Erorr\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalTextState?: sap.ui.core.ValueState) -> sap.ui.webc.main.TreeItem","parameters":{"sAdditionalTextState":"type: sap.ui.core.ValueState, description: New value for property <code>additionalTextState<\/code>"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIf set, an icon will be displayed before the text, representing the tree item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.TreeItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines whether the tree node is selected by the user. Only has effect if the <code>sap.ui.webc.main.Tree<\/code> is in one of the following modes: in <code>SingleSelect<\/code>, <code>SingleSelectBegin<\/code>, <code>SingleSelectEnd<\/code> and <code>MultiSelect<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/webc/main/TreeItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nDefines the <code>additionalText<\/code>, displayed in the end of the tree item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalText: String) -> sap.ui.webc.main.TreeItem","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITreeItem, iIndex: Number) -> sap.ui.webc.main.TreeItem","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.ITreeItem, description: The item to insert; if empty, nothing is inserted"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the tree item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.TreeItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.TableRowType":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Active":{"!description":"Indicates that the table row is clickable via active feedback when item is pressed.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Inactive":{"!description":"Indicates that the table row does not have any active feedback when item is pressed.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc.main.Avatar":{"getInitials":{"!description":"Gets current value of property {@link #getInitials initials}.\n\nDefines the displayed initials. <br> Up to two Latin letters can be displayed as initials.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setInteractive":{"!description":"Sets a new value for property {@link #getInteractive interactive}.\n\nDefines if the avatar is interactive (focusable and pressable)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInteractive?: Boolean) -> sap.ui.webc.main.Avatar","parameters":{"bInteractive":"type: boolean, description: New value for property <code>interactive<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","getShape":{"!description":"Gets current value of property {@link #getShape shape}.\n\nDefines the shape of the component. <br> <br> Available options are: <ul> <li><code>Circle<\/code><\/li> <li><code>Square<\/code><\/li> <\/ul>\n\nDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.AvatarShape"},"!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. If not provided a default text alternative will be set, if present.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.Avatar","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Avatar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>Avatar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getColorScheme colorScheme} : sap.ui.webc.main.AvatarColorScheme (default: Accent6)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getInitials initials} : string (default: \"\")<\/li>\n<li>{@link #getInteractive interactive} : boolean (default: false)<\/li>\n<li>{@link #getShape shape} : sap.ui.webc.main.AvatarShape (default: Circle)<\/li>\n<li>{@link #getSize size} : sap.ui.webc.main.AvatarSize (default: S)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getImage image} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nDefines predefined size of the component. <br> <br> Available options are: <ul> <li><code>XS<\/code><\/li> <li><code>S<\/code><\/li> <li><code>M<\/code><\/li> <li><code>L<\/code><\/li> <li><code>XL<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn(sSize?: sap.ui.webc.main.AvatarSize) -> sap.ui.webc.main.Avatar","parameters":{"sSize":"type: sap.ui.webc.main.AvatarSize, description: New value for property <code>size<\/code>"}},"getColorScheme":{"!description":"Gets current value of property {@link #getColorScheme colorScheme}.\n\nDefines the background color of the desired image. <br> <br> Available options are: <ul> <li><code>Accent1<\/code><\/li> <li><code>Accent2<\/code><\/li> <li><code>Accent3<\/code><\/li> <li><code>Accent4<\/code><\/li> <li><code>Accent5<\/code><\/li> <li><code>Accent6<\/code><\/li> <li><code>Accent7<\/code><\/li> <li><code>Accent8<\/code><\/li> <li><code>Accent9<\/code><\/li> <li><code>Accent10<\/code><\/li> <li><code>Placeholder<\/code><\/li> <\/ul>\n\nDefault value is <code>Accent6<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.AvatarColorScheme"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Avatar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.Avatar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Avatar<\/code> itself.\n\nFired when the user clicks the control","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Avatar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Avatar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. If not provided a default text alternative will be set, if present.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyImage":{"!description":"Destroys the image in the aggregation {@link #getImage image}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Avatar"},"getInteractive":{"!description":"Gets current value of property {@link #getInteractive interactive}.\n\nDefines if the avatar is interactive (focusable and pressable)\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setInitials":{"!description":"Sets a new value for property {@link #getInitials initials}.\n\nDefines the displayed initials. <br> Up to two Latin letters can be displayed as initials.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sInitials?: String) -> sap.ui.webc.main.Avatar","parameters":{"sInitials":"type: string, description: New value for property <code>initials<\/code>"}},"setShape":{"!description":"Sets a new value for property {@link #getShape shape}.\n\nDefines the shape of the component. <br> <br> Available options are: <ul> <li><code>Circle<\/code><\/li> <li><code>Square<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn(sShape?: sap.ui.webc.main.AvatarShape) -> sap.ui.webc.main.Avatar","parameters":{"sShape":"type: sap.ui.webc.main.AvatarShape, description: New value for property <code>shape<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the name of the UI5 Icon, that would be displayed. <br> <b>Note:<\/b> If <code>image<\/code> slot is provided, the property would be ignored. <br> <b>Note:<\/b> You should import the desired icon first, then use its name as \"icon\". <br> <br> import \"@ui5/webcomponents-icons/dist/{icon_name}.js\" <br> <pre>&lt;ui5-avatar icon=\"employee\"><\/pre>\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Avatar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the name of the UI5 Icon, that would be displayed. <br> <b>Note:<\/b> If <code>image<\/code> slot is provided, the property would be ignored. <br> <b>Note:<\/b> You should import the desired icon first, then use its name as \"icon\". <br> <br> import \"@ui5/webcomponents-icons/dist/{icon_name}.js\" <br> <pre>&lt;ui5-avatar icon=\"employee\"><\/pre>\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.Avatar","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.Avatar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Avatar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nDefines predefined size of the component. <br> <br> Available options are: <ul> <li><code>XS<\/code><\/li> <li><code>S<\/code><\/li> <li><code>M<\/code><\/li> <li><code>L<\/code><\/li> <li><code>XL<\/code><\/li> <\/ul>\n\nDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.AvatarSize"},"!module":"sap/ui/webc/main/Avatar","setColorScheme":{"!description":"Sets a new value for property {@link #getColorScheme colorScheme}.\n\nDefines the background color of the desired image. <br> <br> Available options are: <ul> <li><code>Accent1<\/code><\/li> <li><code>Accent2<\/code><\/li> <li><code>Accent3<\/code><\/li> <li><code>Accent4<\/code><\/li> <li><code>Accent5<\/code><\/li> <li><code>Accent6<\/code><\/li> <li><code>Accent7<\/code><\/li> <li><code>Accent8<\/code><\/li> <li><code>Accent9<\/code><\/li> <li><code>Accent10<\/code><\/li> <li><code>Placeholder<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Accent6<\/code>.","!static":false,"!category":"function","!type":"fn(sColorScheme?: sap.ui.webc.main.AvatarColorScheme) -> sap.ui.webc.main.Avatar","parameters":{"sColorScheme":"type: sap.ui.webc.main.AvatarColorScheme, description: New value for property <code>colorScheme<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getImage":{"!description":"Gets content of aggregation {@link #getImage image}.\n\nReceives the desired <code>&lt;img&gt;<\/code> tag\n\n<b>Note:<\/b> If you experience flickering of the provided image, you can hide the component until it is being defined with the following CSS: <br /> <br /> <code> ui5-avatar:not(:defined) { <br /> visibility: hidden; <br /> } <br /> <\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setImage":{"!description":"Sets the aggregated {@link #getImage image}.","!static":false,"!category":"function","!type":"fn(oImage: sap.ui.core.Control) -> sap.ui.webc.main.Avatar","parameters":{"oImage":"type: sap.ui.core.Control, description: The image to set"}}},"sap.ui.webc.main.TextArea":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.TextArea","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.TextArea","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.TextArea","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getGrowingMaxLines":{"!description":"Gets current value of property {@link #getGrowingMaxLines growingMaxLines}.\n\nDefines the maximum number of lines that the component can grow.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.TextArea","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.TextArea<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TextArea","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setGrowing":{"!description":"Sets a new value for property {@link #getGrowing growing}.\n\nEnables the component to automatically grow and shrink dynamically with its content. <br> <br> <b>Note:<\/b> If set to <code>true<\/code>, the CSS <code>height<\/code> property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bGrowing?: Boolean) -> sap.ui.webc.main.TextArea","parameters":{"bGrowing":"type: boolean, description: New value for property <code>growing<\/code>"}},"setRows":{"!description":"Sets a new value for property {@link #getRows rows}.\n\nDefines the number of visible text lines for the component. <br> <br> <b>Notes:<\/b> <ul> <li>If the <code>growing<\/code> property is enabled, this property defines the minimum rows to be displayed in the textarea.<\/li> <li>The CSS <code>height<\/code> property wins over the <code>rows<\/code> property, if both are set.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iRows?: Number) -> sap.ui.webc.main.TextArea","parameters":{"iRows":"type: int, description: New value for property <code>rows<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TextArea.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul> <br> <br> <b>Note:<\/b> If <code>maxlength<\/code> property is set, the component turns into \"Warning\" state once the characters exceeds the limit. In this case, only the \"Error\" state is considered and can be applied.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.TextArea","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.TextArea<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TextArea","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.TextArea<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.TextArea<\/code> itself.\n\nFired when the text has changed and the focus leaves the component.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TextArea","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.TextArea<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.TextArea","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.TextArea","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.TextArea","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TextArea with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.TextArea","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/TextArea","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setMaxlength":{"!description":"Sets a new value for property {@link #getMaxlength maxlength}.\n\nDefines the maximum number of characters that the <code>value<\/code> can have.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaxlength?: Number) -> sap.ui.webc.main.TextArea","parameters":{"iMaxlength":"type: int, description: New value for property <code>maxlength<\/code>"}},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.TextArea","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","getMaxlength":{"!description":"Gets current value of property {@link #getMaxlength maxlength}.\n\nDefines the maximum number of characters that the <code>value<\/code> can have.","!static":false,"!category":"function","!type":"fn() -> Number"},"!category":"class","getRows":{"!description":"Gets current value of property {@link #getRows rows}.\n\nDefines the number of visible text lines for the component. <br> <br> <b>Notes:<\/b> <ul> <li>If the <code>growing<\/code> property is enabled, this property defines the minimum rows to be displayed in the textarea.<\/li> <li>The CSS <code>height<\/code> property wins over the <code>rows<\/code> property, if both are set.<\/li> <\/ul>\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>TextArea<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: false)<\/li>\n<li>{@link #getGrowingMaxLines growingMaxLines} : int (default: 0)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxlength maxlength} : int<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getRows rows} : int (default: 0)<\/li>\n<li>{@link #getShowExceededText showExceededText} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.TextArea","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.TextArea","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setGrowingMaxLines":{"!description":"Sets a new value for property {@link #getGrowingMaxLines growingMaxLines}.\n\nDefines the maximum number of lines that the component can grow.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iGrowingMaxLines?: Number) -> sap.ui.webc.main.TextArea","parameters":{"iGrowingMaxLines":"type: int, description: New value for property <code>growingMaxLines<\/code>"}},"setShowExceededText":{"!description":"Sets a new value for property {@link #getShowExceededText showExceededText}.\n\nDetermines whether the characters exceeding the maximum allowed character count are visible in the component. <br> <br> If set to <code>false<\/code>, the user is not allowed to enter more characters than what is set in the <code>maxlength<\/code> property. If set to <code>true<\/code> the characters exceeding the <code>maxlength<\/code> value are selected on paste and the counter below the component displays their number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowExceededText?: Boolean) -> sap.ui.webc.main.TextArea","parameters":{"bShowExceededText":"type: boolean, description: New value for property <code>showExceededText<\/code>"}},"getShowExceededText":{"!description":"Gets current value of property {@link #getShowExceededText showExceededText}.\n\nDetermines whether the characters exceeding the maximum allowed character count are visible in the component. <br> <br> If set to <code>false<\/code>, the user is not allowed to enter more characters than what is set in the <code>maxlength<\/code> property. If set to <code>true<\/code> the characters exceeding the <code>maxlength<\/code> value are selected on paste and the counter below the component displays their number.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.TextArea","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the value of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getGrowing":{"!description":"Gets current value of property {@link #getGrowing growing}.\n\nEnables the component to automatically grow and shrink dynamically with its content. <br> <br> <b>Note:<\/b> If set to <code>true<\/code>, the CSS <code>height<\/code> property is ignored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul> <br> <br> <b>Note:<\/b> If <code>maxlength<\/code> property is set, the component turns into \"Warning\" state once the characters exceeds the limit. In this case, only the \"Error\" state is considered and can be applied.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the value of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.TextArea","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.TextArea<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.TextArea<\/code> itself.\n\nFired when the value of the component changes at each keystroke or when something is pasted.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TextArea","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.TextArea<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.webc.main.Slider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Slider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Slider"},"sap.ui.webc.main.MultiComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MultiComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.MultiComboBox"},"sap.ui.webc.main.Link":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.Link","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Link","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getWrappingType":{"!description":"Gets current value of property {@link #getWrappingType wrappingType}.\n\nDefines how the text of a component will be displayed when there is not enough space. Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.WrappingType"},"getTarget":{"!description":"Gets current value of property {@link #getTarget target}.\n\nDefines the component target. <br> <br> <b>Notes:<\/b>\n\n<ul> <li><code>_self<\/code><\/li> <li><code>_top<\/code><\/li> <li><code>_blank<\/code><\/li> <li><code>_parent<\/code><\/li> <li><code>_search<\/code><\/li> <\/ul>\n\n<b>This property must only be used when the <code>href<\/code> property is set.<\/b>\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>Link<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibilityAttributes accessibilityAttributes} : object (default: {})<\/li>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getDesign design} : sap.ui.webc.main.LinkDesign (default: Default)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHref href} : string (default: \"\")<\/li>\n<li>{@link #getTarget target} : string (default: \"\")<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getWrappingType wrappingType} : sap.ui.webc.main.WrappingType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Link","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTarget":{"!description":"Sets a new value for property {@link #getTarget target}.\n\nDefines the component target. <br> <br> <b>Notes:<\/b>\n\n<ul> <li><code>_self<\/code><\/li> <li><code>_top<\/code><\/li> <li><code>_blank<\/code><\/li> <li><code>_parent<\/code><\/li> <li><code>_search<\/code><\/li> <\/ul>\n\n<b>This property must only be used when the <code>href<\/code> property is set.<\/b>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTarget?: String) -> sap.ui.webc.main.Link","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getHref":{"!description":"Gets current value of property {@link #getHref href}.\n\nDefines the component href. <br> <br> <b>Note:<\/b> Standard hyperlink behavior is supported.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Link.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.Link<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Link<\/code> itself.\n\nFired when the component is triggered either with a mouse/tap or by using the Enter key.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Link","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Link<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHref":{"!description":"Sets a new value for property {@link #getHref href}.\n\nDefines the component href. <br> <br> <b>Note:<\/b> Standard hyperlink behavior is supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHref?: String) -> sap.ui.webc.main.Link","parameters":{"sHref":"type: string, description: New value for property <code>href<\/code>"}},"setAccessibilityAttributes":{"!description":"Sets a new value for property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the anchor element, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the anchor element. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAccessibilityAttributes?: Object) -> sap.ui.webc.main.Link","parameters":{"oAccessibilityAttributes":"type: object, description: New value for property <code>accessibilityAttributes<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Link","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.Link<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Link","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getAccessibilityAttributes":{"!description":"Gets current value of property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the anchor element, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the anchor element. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <\/ul>\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"!module":"sap/ui/webc/main/Link","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the component design. <br> <br> <b>Note:<\/b> Avaialble options are <code>Default<\/code>, <code>Subtle<\/code>, and <code>Emphasized<\/code>.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.LinkDesign"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the component design. <br> <br> <b>Note:<\/b> Avaialble options are <code>Default<\/code>, <code>Subtle<\/code>, and <code>Emphasized<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.LinkDesign) -> sap.ui.webc.main.Link","parameters":{"sDesign":"type: sap.ui.webc.main.LinkDesign, description: New value for property <code>design<\/code>"}},"setWrappingType":{"!description":"Sets a new value for property {@link #getWrappingType wrappingType}.\n\nDefines how the text of a component will be displayed when there is not enough space. Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sWrappingType?: sap.ui.webc.main.WrappingType) -> sap.ui.webc.main.Link","parameters":{"sWrappingType":"type: sap.ui.webc.main.WrappingType, description: New value for property <code>wrappingType<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Link","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.AvatarGroupType":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Group":{"!description":"The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Individual":{"!description":"The avatars are displayed side-by-side and each avatar has its own click/tap area.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc":{"main":"sap.ui.webc.main","!category":"namespace"},"sap.ui.webc.main.BreadcrumbsDesign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","NoCurrentPage":{"!description":"All items are displayed as links.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"Shows the current page as the last item in the trail. The last item contains only plain text and is not a link.","!category":"enum","!type":"String"}},"sap.ui.webc.main.ButtonDesign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Emphasized":{"!description":"emphasized type","!category":"enum","!type":"String"},"Negative":{"!description":"reject style (red button)","!category":"enum","!type":"String"},"Transparent":{"!description":"transparent type","!category":"enum","!type":"String"},"Positive":{"!description":"accept type (green button)","!category":"enum","!type":"String"},"Attention":{"!description":"attention type","!category":"enum","!type":"String"},"!category":"static class","Default":{"!description":"default type (no special styling)","!category":"enum","!type":"String"}},"sap.ui.webc.main.FileUploader":{"getAccept":{"!description":"Gets current value of property {@link #getAccept accept}.\n\nComma-separated list of file types that the component should accept. <br> <br> <b>Note:<\/b> Please make sure you are adding the <code>.<\/code> in front on the file type, e.g. <code>.png<\/code> in case you want to accept png's only.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.FileUploader","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.FileUploader","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nBy default the component contains a single input field. With this slot you can pass any content that you wish to add. See the samples for more information.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHideInput":{"!description":"Sets a new value for property {@link #getHideInput hideInput}.\n\nIf set to \"true\", the input field of component will not be rendered. Only the default slot that is passed will be rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideInput?: Boolean) -> sap.ui.webc.main.FileUploader","parameters":{"bHideInput":"type: boolean, description: New value for property <code>hideInput<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.FileUploader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.FileUploader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>FileUploader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccept accept} : string (default: \"\")<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHideInput hideInput} : boolean (default: false)<\/li>\n<li>{@link #getMultiple multiple} : boolean (default: false)<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getMultiple":{"!description":"Gets current value of property {@link #getMultiple multiple}.\n\nAllows multiple files to be chosen.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.FileUploader","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMultiple":{"!description":"Sets a new value for property {@link #getMultiple multiple}.\n\nAllows multiple files to be chosen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMultiple?: Boolean) -> sap.ui.webc.main.FileUploader","parameters":{"bMultiple":"type: boolean, description: New value for property <code>multiple<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.FileUploader"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.FileUploader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getHideInput":{"!description":"Gets current value of property {@link #getHideInput hideInput}.\n\nIf set to \"true\", the input field of component will not be rendered. Only the default slot that is passed will be rendered.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.FileUploader","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.FileUploader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.FileUploader<\/code> itself.\n\nEvent is fired when the value of the file path has been changed. <b>Note:<\/b> Keep in mind that because of the HTML input element of type file, the event is also fired in Chrome browser when the Cancel button of the uploads window is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.FileUploader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.FileUploader<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.FileUploader","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.FileUploader","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getFiles":{"!description":"Returns the fileList of all selected files.","!static":false,"!category":"function","!type":"fn()"},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.FileUploader","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.FileUploader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the name/names of the file/files to upload.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.FileUploader","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/FileUploader","getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the name/names of the file/files to upload.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.FileUploader","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.FileUploader","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccept":{"!description":"Sets a new value for property {@link #getAccept accept}.\n\nComma-separated list of file types that the component should accept. <br> <br> <b>Note:<\/b> Please make sure you are adding the <code>.<\/code> in front on the file type, e.g. <code>.png<\/code> in case you want to accept png's only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccept?: String) -> sap.ui.webc.main.FileUploader","parameters":{"sAccept":"type: string, description: New value for property <code>accept<\/code>"}}},"sap.ui.webc.main.SwitchDesign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Graphical":{"!description":"Defines the Switch as Graphical","!category":"enum","!type":"String"},"Textual":{"!description":"Defines the Switch as Textual","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc.main.Switch":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getTextOff":{"!description":"Gets current value of property {@link #getTextOff textOff}.\n\nDefines the text, displayed when the component is not checked. <br> <br> <b>Note:<\/b> We recommend using short texts, up to 3 letters (larger texts would be cut off). <b>Note:<\/b> This property will have no effect if the theme is set to <code>sap_horizon<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nSets the accessible aria name of the component.\n\n<b>Note<\/b>: We recommend that you set an accessibleNameRef pointing to an external label or at least an <code>accessibleName<\/code>. Providing an <code>ariaLabelledBy<\/code> or an <code>accessibleName<\/code> is mandatory in the cases when <code>textOn<\/code> and <code>textOff<\/code> properties aren't set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.Switch","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.Switch<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Switch","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>Switch<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getChecked checked} : boolean (default: false)<\/li>\n<li>{@link #getDesign design} : sap.ui.webc.main.SwitchDesign (default: Textual)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTextOff textOff} : string (default: \"\")<\/li>\n<li>{@link #getTextOn textOn} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Switch","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChecked":{"!description":"Sets a new value for property {@link #getChecked checked}.\n\nDefines if the component is checked. <br> <br> <b>Note:<\/b> The property can be changed with user interaction, either by cliking the component, or by pressing the <code>Enter<\/code> or <code>Space<\/code> key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bChecked?: Boolean) -> sap.ui.webc.main.Switch","parameters":{"bChecked":"type: boolean, description: New value for property <code>checked<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Switch.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nSets the accessible aria name of the component.\n\n<b>Note<\/b>: We recommend that you set an accessibleNameRef pointing to an external label or at least an <code>accessibleName<\/code>. Providing an <code>ariaLabelledBy<\/code> or an <code>accessibleName<\/code> is mandatory in the cases when <code>textOn<\/code> and <code>textOff<\/code> properties aren't set.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextOn":{"!description":"Sets a new value for property {@link #getTextOn textOn}.\n\nDefines the text, displayed when the component is checked.\n\n<br> <br> <b>Note:<\/b> We recommend using short texts, up to 3 letters (larger texts would be cut off). <b>Note:<\/b> This property will have no effect if the theme is set to <code>sap_horizon<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTextOn?: String) -> sap.ui.webc.main.Switch","parameters":{"sTextOn":"type: string, description: New value for property <code>textOn<\/code>"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.Switch<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Switch<\/code> itself.\n\nFired when the component checked state changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Switch","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Switch<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Switch","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Switch","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Switch with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Switch","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getTextOn":{"!description":"Gets current value of property {@link #getTextOn textOn}.\n\nDefines the text, displayed when the component is checked.\n\n<br> <br> <b>Note:<\/b> We recommend using short texts, up to 3 letters (larger texts would be cut off). <b>Note:<\/b> This property will have no effect if the theme is set to <code>sap_horizon<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/webc/main/Switch","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the component design. <br> <br> <b>Note:<\/b> If <code>Graphical<\/code> type is set, positive and negative icons will replace the <code>textOn<\/code> and <code>textOff<\/code>.\n\nDefault value is <code>Textual<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.SwitchDesign"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the component design. <br> <br> <b>Note:<\/b> If <code>Graphical<\/code> type is set, positive and negative icons will replace the <code>textOn<\/code> and <code>textOff<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Textual<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.SwitchDesign) -> sap.ui.webc.main.Switch","parameters":{"sDesign":"type: sap.ui.webc.main.SwitchDesign, description: New value for property <code>design<\/code>"}},"setTextOff":{"!description":"Sets a new value for property {@link #getTextOff textOff}.\n\nDefines the text, displayed when the component is not checked. <br> <br> <b>Note:<\/b> We recommend using short texts, up to 3 letters (larger texts would be cut off). <b>Note:<\/b> This property will have no effect if the theme is set to <code>sap_horizon<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sTextOff?: String) -> sap.ui.webc.main.Switch","parameters":{"sTextOff":"type: string, description: New value for property <code>textOff<\/code>"}},"getChecked":{"!description":"Gets current value of property {@link #getChecked checked}.\n\nDefines if the component is checked. <br> <br> <b>Note:<\/b> The property can be changed with user interaction, either by cliking the component, or by pressing the <code>Enter<\/code> or <code>Space<\/code> key.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.ui.webc.main.WrappingType":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class","Normal":{"!description":"The text will wrap. The words will not be broken based on hyphenation.","!category":"enum","!type":"String"},"None":{"!description":"The text will be truncated with an ellipsis.","!category":"enum","!type":"String"}},"sap.ui.webc.main.TabSeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TabSeparator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TabSeparator"},"sap.ui.webc.main.Carousel":{"getArrowsPlacement":{"!description":"Gets current value of property {@link #getArrowsPlacement arrowsPlacement}.\n\nDefines the position of arrows. <br> <br> Available options are: <ul> <li><code>Content<\/code><\/li> <li><code>Navigation<\/code><\/li> <\/ul> <br> When set to \"Content\", the arrows are placed on the sides of the current page. <br> When set to \"Navigation\", the arrows are placed on the sides of the page indicator.\n\nDefault value is <code>Content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.CarouselArrowsPlacement"},"getItemsPerPageL":{"!description":"Gets current value of property {@link #getItemsPerPageL itemsPerPageL}.\n\nDefines the number of items per page on large size (more than 1024px). One item per page shown by default.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getItemsPerPageM":{"!description":"Gets current value of property {@link #getItemsPerPageM itemsPerPageM}.\n\nDefines the number of items per page on medium size (from 640px to 1024px). One item per page shown by default.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","navigateTo":{"!description":"Changes the currently displayed page.","!static":false,"!category":"function","!type":"fn(itemIndex: Number)","parameters":{"itemIndex":"type: int, description: The index of the target page"}},"!category":"class","setHidePageIndicator":{"!description":"Sets a new value for property {@link #getHidePageIndicator hidePageIndicator}.\n\nDefines the visibility of the paging indicator. If set to true the page indicator will be hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHidePageIndicator?: Boolean) -> sap.ui.webc.main.Carousel","parameters":{"bHidePageIndicator":"type: boolean, description: New value for property <code>hidePageIndicator<\/code>"}},"!constructorDescription":"Constructor for a new <code>Carousel<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getArrowsPlacement arrowsPlacement} : sap.ui.webc.main.CarouselArrowsPlacement (default: Content)<\/li>\n<li>{@link #getCyclic cyclic} : boolean (default: false)<\/li>\n<li>{@link #getHideNavigationArrows hideNavigationArrows} : boolean (default: false)<\/li>\n<li>{@link #getHidePageIndicator hidePageIndicator} : boolean (default: false)<\/li>\n<li>{@link #getItemsPerPageL itemsPerPageL} : int (default: 1)<\/li>\n<li>{@link #getItemsPerPageM itemsPerPageM} : int (default: 1)<\/li>\n<li>{@link #getItemsPerPageS itemsPerPageS} : int (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getItemsPerPageS":{"!description":"Gets current value of property {@link #getItemsPerPageS itemsPerPageS}.\n\nDefines the number of items per page on small size (up to 640px). One item per page shown by default.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setHideNavigationArrows":{"!description":"Sets a new value for property {@link #getHideNavigationArrows hideNavigationArrows}.\n\nDefines the visibility of the navigation arrows. If set to true the navigation arrows will be hidden. <br> <br> <b>Note:<\/b> The navigation arrows are never displayed on touch devices. In this case, the user can swipe to navigate through the items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideNavigationArrows?: Boolean) -> sap.ui.webc.main.Carousel","parameters":{"bHideNavigationArrows":"type: boolean, description: New value for property <code>hideNavigationArrows<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Carousel"},"setItemsPerPageM":{"!description":"Sets a new value for property {@link #getItemsPerPageM itemsPerPageM}.\n\nDefines the number of items per page on medium size (from 640px to 1024px). One item per page shown by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iItemsPerPageM?: Number) -> sap.ui.webc.main.Carousel","parameters":{"iItemsPerPageM":"type: int, description: New value for property <code>itemsPerPageM<\/code>"}},"setItemsPerPageL":{"!description":"Sets a new value for property {@link #getItemsPerPageL itemsPerPageL}.\n\nDefines the number of items per page on large size (more than 1024px). One item per page shown by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iItemsPerPageL?: Number) -> sap.ui.webc.main.Carousel","parameters":{"iItemsPerPageL":"type: int, description: New value for property <code>itemsPerPageL<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Carousel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setItemsPerPageS":{"!description":"Sets a new value for property {@link #getItemsPerPageS itemsPerPageS}.\n\nDefines the number of items per page on small size (up to 640px). One item per page shown by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iItemsPerPageS?: Number) -> sap.ui.webc.main.Carousel","parameters":{"iItemsPerPageS":"type: int, description: New value for property <code>itemsPerPageS<\/code>"}},"setArrowsPlacement":{"!description":"Sets a new value for property {@link #getArrowsPlacement arrowsPlacement}.\n\nDefines the position of arrows. <br> <br> Available options are: <ul> <li><code>Content<\/code><\/li> <li><code>Navigation<\/code><\/li> <\/ul> <br> When set to \"Content\", the arrows are placed on the sides of the current page. <br> When set to \"Navigation\", the arrows are placed on the sides of the page indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Content<\/code>.","!static":false,"!category":"function","!type":"fn(sArrowsPlacement?: sap.ui.webc.main.CarouselArrowsPlacement) -> sap.ui.webc.main.Carousel","parameters":{"sArrowsPlacement":"type: sap.ui.webc.main.CarouselArrowsPlacement, description: New value for property <code>arrowsPlacement<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setCyclic":{"!description":"Sets a new value for property {@link #getCyclic cyclic}.\n\nDefines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCyclic?: Boolean) -> sap.ui.webc.main.Carousel","parameters":{"bCyclic":"type: boolean, description: New value for property <code>cyclic<\/code>"}},"getHidePageIndicator":{"!description":"Gets current value of property {@link #getHidePageIndicator hidePageIndicator}.\n\nDefines the visibility of the paging indicator. If set to true the page indicator will be hidden.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.Carousel","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Carousel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getCyclic":{"!description":"Gets current value of property {@link #getCyclic cyclic}.\n\nDefines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Carousel","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!module":"sap/ui/webc/main/Carousel","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.webc.main.Carousel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Carousel<\/code> itself.\n\nFired whenever the page changes due to user interaction, when the user clicks on the navigation arrows or while resizing, based on the <code>items-per-page-l<\/code>, <code>items-per-page-m<\/code> and <code>items-per-page-s<\/code> properties.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Carousel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Carousel<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHideNavigationArrows":{"!description":"Gets current value of property {@link #getHideNavigationArrows hideNavigationArrows}.\n\nDefines the visibility of the navigation arrows. If set to true the navigation arrows will be hidden. <br> <br> <b>Note:<\/b> The navigation arrows are never displayed on touch devices. In this case, the user can swipe to navigate through the items.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Carousel","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.webc.main.Carousel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Carousel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}}},"sap.ui.webc.main.IAvatar":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.Label":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setShowColon":{"!description":"Sets a new value for property {@link #getShowColon showColon}.\n\nDefines whether colon is added to the component text. <br> <br> <b>Note:<\/b> Usually used in forms.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowColon?: Boolean) -> sap.ui.webc.main.Label","parameters":{"bShowColon":"type: boolean, description: New value for property <code>showColon<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Label.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowColon":{"!description":"Gets current value of property {@link #getShowColon showColon}.\n\nDefines whether colon is added to the component text. <br> <br> <b>Note:<\/b> Usually used in forms.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether an asterisk character is added to the component text. <br> <br> <b>Note:<\/b> Usually indicates that user input is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.Label","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Label","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Label with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getWrappingType":{"!description":"Gets current value of property {@link #getWrappingType wrappingType}.\n\nDefines how the text of a component will be displayed when there is not enough space. Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.WrappingType"},"!constructorDescription":"Constructor for a new <code>Label<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getShowColon showColon} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWrappingType wrappingType} : sap.ui.webc.main.WrappingType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLabelFor labelFor} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Label","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getLabelFor":{"!description":"ID of the element which is the current target of the association {@link #getLabelFor labelFor}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"setLabelFor":{"!description":"Sets the associated {@link #getLabelFor labelFor}.","!static":false,"!category":"function","!type":"fn(oLabelFor: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Label","parameters":{"oLabelFor":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this labelFor association; alternatively, an element instance may be given"}},"setWrappingType":{"!description":"Sets a new value for property {@link #getWrappingType wrappingType}.\n\nDefines how the text of a component will be displayed when there is not enough space. Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sWrappingType?: sap.ui.webc.main.WrappingType) -> sap.ui.webc.main.Label","parameters":{"sWrappingType":"type: sap.ui.webc.main.WrappingType, description: New value for property <code>wrappingType<\/code>"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether an asterisk character is added to the component text. <br> <br> <b>Note:<\/b> Usually indicates that user input is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Label","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.IComboBoxItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.Calendar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Calendar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Calendar"},"sap.ui.webc.main.ListMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Delete":{"!description":"Delete mode (only one list item can be deleted via provided delete button)","!category":"enum","!type":"String"},"MultiSelect":{"!description":"Multi selection mode (more than one list item can be selected).","!category":"enum","!type":"String"},"SingleSelect":{"!description":"Right-positioned single selection mode (only one list item can be selected).","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","SingleSelectEnd":{"!description":"Selected item is highlighted but no selection element is visible (only one list item can be selected).","!category":"enum","!type":"String"},"!category":"static class","SingleSelectAuto":{"!description":"Selected item is highlighted and selection is changed upon arrow navigation (only one list item can be selected - this is always the focused item).","!category":"enum","!type":"String"},"SingleSelectBegin":{"!description":"Left-positioned single selection mode (only one list item can be selected).","!category":"enum","!type":"String"},"None":{"!description":"Default mode (no selection).","!category":"enum","!type":"String"}},"sap.ui.webc.main.List":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.List"},"setSeparators":{"!description":"Sets a new value for property {@link #getSeparators separators}.\n\nDefines the item separator style that is used. <br> <br> <b>Notes:<\/b> <ul> <li>Avalaible options are <code>All<\/code>, <code>Inner<\/code>, and <code>None<\/code>.<\/li> <li>When set to <code>None<\/code>, none of the items are separated by horizontal lines.<\/li> <li>When set to <code>Inner<\/code>, the first item doesn't have a top separator and the last item doesn't have a bottom separator.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>All<\/code>.","!static":false,"!category":"function","!type":"fn(sSeparators?: sap.ui.webc.main.ListSeparators) -> sap.ui.webc.main.List","parameters":{"sSeparators":"type: sap.ui.webc.main.ListSeparators, description: New value for property <code>separators<\/code>"}},"detachLoadMore":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:loadMore loadMore} event of this <code>sap.ui.webc.main.List<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachItemToggle":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemToggle itemToggle} event of this <code>sap.ui.webc.main.List<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.List<\/code> itself.\n\nFired when the <code>Toggle<\/code> button of any item is clicked. <br> <br> <b>Note:<\/b> This event is applicable to <code>sap.ui.webc.fiori.NotificationListGroupItem<\/code> items only.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.List<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getBusyDelay":{"!description":"Gets current value of property {@link #getBusyDelay busyDelay}.\n\nDefines the delay in milliseconds, after which the busy indicator will show up for this component.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.List","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the items of the component. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.StandardListItem<\/code>, <code>sap.ui.webc.main.CustomListItem<\/code>, and <code>sap.ui.webc.main.GroupHeaderListItem<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IListItem]"},"setGrowing":{"!description":"Sets a new value for property {@link #getGrowing growing}.\n\nDefines whether the component will have growing capability either by pressing a <code>More<\/code> button, or via user scroll. In both cases <code>load-more<\/code> event is fired. <br> <br>\n\nAvailable options: <br> <br> <code>Button<\/code> - Shows a <code>More<\/code> button at the bottom of the list, pressing of which triggers the <code>load-more<\/code> event. <br> <code>Scroll<\/code> - The <code>load-more<\/code> event is triggered when the user scrolls to the bottom of the list; <br> <code>None<\/code> (default) - The growing is off. <br> <br>\n\n<b>Restrictions:<\/b> <code>growing=\"Scroll\"<\/code> is not supported for Internet Explorer, on IE the component will fallback to <code>growing=\"Button\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sGrowing?: sap.ui.webc.main.ListGrowingMode) -> sap.ui.webc.main.List","parameters":{"sGrowing":"type: sap.ui.webc.main.ListGrowingMode, description: New value for property <code>growing<\/code>"}},"detachItemClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.List<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getBusy":{"!description":"Gets current value of property {@link #getBusy busy}.\n\nDefines if the component would display a loading indicator over the list.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireLoadMore":{"!description":"Fires event {@link #event:loadMore loadMore} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.List","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IListItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.IListItem, description: The item whose index is looked for"}},"setIndent":{"!description":"Sets a new value for property {@link #getIndent indent}.\n\nDetermines whether the component is indented.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIndent?: Boolean) -> sap.ui.webc.main.List","parameters":{"bIndent":"type: boolean, description: New value for property <code>indent<\/code>"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.List<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.List<\/code> itself.\n\nFired when selection is changed by user interaction in <code>SingleSelect<\/code>, <code>SingleSelectBegin<\/code>, <code>SingleSelectEnd<\/code> and <code>MultiSelect<\/code> modes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.List<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nDefines the mode of the component. <br> <br> <b>Note:<\/b> Available options are <code>None<\/code>, <code>SingleSelect<\/code>, <code>SingleSelectBegin<\/code>, <code>SingleSelectEnd<\/code>, <code>MultiSelect<\/code>, and <code>Delete<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ListMode"},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nDefines the component header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> is set this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText?: String) -> sap.ui.webc.main.List","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","detachItemClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemClose itemClose} event of this <code>sap.ui.webc.main.List<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.List.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getIndent":{"!description":"Gets current value of property {@link #getIndent indent}.\n\nDetermines whether the component is indented.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibleRole":{"!description":"Sets a new value for property {@link #getAccessibleRole accessibleRole}.\n\nDefines the accessible role of the component. <br> <br>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"list\"<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleRole?: String) -> sap.ui.webc.main.List","parameters":{"sAccessibleRole":"type: string, description: New value for property <code>accessibleRole<\/code>"}},"fireItemClose":{"!description":"Fires event {@link #event:itemClose itemClose} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.List","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachItemClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.List<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.List<\/code> itself.\n\nFired when an item is activated, unless the item's <code>type<\/code> property is set to <code>Inactive<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.List<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IListItem]"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.List","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.List with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSeparators":{"!description":"Gets current value of property {@link #getSeparators separators}.\n\nDefines the item separator style that is used. <br> <br> <b>Notes:<\/b> <ul> <li>Avalaible options are <code>All<\/code>, <code>Inner<\/code>, and <code>None<\/code>.<\/li> <li>When set to <code>None<\/code>, none of the items are separated by horizontal lines.<\/li> <li>When set to <code>Inner<\/code>, the first item doesn't have a top separator and the last item doesn't have a bottom separator.<\/li> <\/ul>\n\nDefault value is <code>All<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ListSeparators"},"removeHeader":{"!description":"Removes a header from the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(vHeader: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vHeader":"type: int|string|sap.ui.core.Control, description: The header to remove or its index or id"}},"getFooterText":{"!description":"Gets current value of property {@link #getFooterText footerText}.\n\nDefines the footer text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setBusy":{"!description":"Sets a new value for property {@link #getBusy busy}.\n\nDefines if the component would display a loading indicator over the list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bBusy?: Boolean) -> sap.ui.webc.main.List","parameters":{"bBusy":"type: boolean, description: New value for property <code>busy<\/code>"}},"!module":"sap/ui/webc/main/List","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDefines the text that is displayed when the component contains no items.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getAccessibleRole":{"!description":"Gets current value of property {@link #getAccessibleRole accessibleRole}.\n\nDefines the accessible role of the component. <br> <br>\n\nDefault value is <code>\"list\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireItemClick":{"!description":"Fires event {@link #event:itemClick itemClick} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachItemClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemClose itemClose} event of this <code>sap.ui.webc.main.List<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.List<\/code> itself.\n\nFired when the <code>Close<\/code> button of any item is clicked <br> <br> <b>Note:<\/b> This event is applicable to <code>sap.ui.webc.fiori.NotificationListItem<\/code> items only, not to be confused with <code>item-delete<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.List<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.IListItem) -> sap.ui.webc.main.IListItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.IListItem, description: The item to remove or its index or id"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.List","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setNoDataText":{"!description":"Sets a new value for property {@link #getNoDataText noDataText}.\n\nDefines the text that is displayed when the component contains no items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sNoDataText?: String) -> sap.ui.webc.main.List","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachItemDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemDelete itemDelete} event of this <code>sap.ui.webc.main.List<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.List<\/code> itself.\n\nFired when the Delete button of any item is pressed. <br> <br> <b>Note:<\/b> A Delete button is displayed on each item, when the component <code>mode<\/code> property is set to <code>Delete<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.List<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the component header. <br> <br> <b>Note:<\/b> When <code>header<\/code> is set, the <code>headerText<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.\n\nDefines the component header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> is set this property is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IListItem) -> sap.ui.webc.main.List","parameters":{"oItem":"type: sap.ui.webc.main.IListItem, description: The item to add; if empty, nothing is inserted"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>List<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : string (default: \"list\")<\/li>\n<li>{@link #getBusy busy} : boolean (default: false)<\/li>\n<li>{@link #getBusyDelay busyDelay} : int (default: 1000)<\/li>\n<li>{@link #getFooterText footerText} : string (default: \"\")<\/li>\n<li>{@link #getGrowing growing} : sap.ui.webc.main.ListGrowingMode (default: None)<\/li>\n<li>{@link #getHeaderText headerText} : string (default: \"\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIndent indent} : boolean (default: false)<\/li>\n<li>{@link #getMode mode} : sap.ui.webc.main.ListMode (default: None)<\/li>\n<li>{@link #getNoDataText noDataText} : string (default: \"\")<\/li>\n<li>{@link #getSeparators separators} : sap.ui.webc.main.ListSeparators (default: All)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.ui.core.Control[]<\/li>\n<li>{@link #getItems items} : sap.ui.webc.main.IListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClick itemClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemClose itemClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemDelete itemDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemToggle itemToggle} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:loadMore loadMore} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.List","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.List<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachLoadMore":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:loadMore loadMore} event of this <code>sap.ui.webc.main.List<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.List<\/code> itself.\n\nFired when the user scrolls to the bottom of the list. <br> <br> <b>Note:<\/b> The event is fired when the <code>growing='Scroll'<\/code> property is enabled.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.List<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"addHeader":{"!description":"Adds some header to the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.webc.main.List","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to add; if empty, nothing is inserted"}},"setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nDefines the mode of the component. <br> <br> <b>Note:<\/b> Available options are <code>None<\/code>, <code>SingleSelect<\/code>, <code>SingleSelectBegin<\/code>, <code>SingleSelectEnd<\/code>, <code>MultiSelect<\/code>, and <code>Delete<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sMode?: sap.ui.webc.main.ListMode) -> sap.ui.webc.main.List","parameters":{"sMode":"type: sap.ui.webc.main.ListMode, description: New value for property <code>mode<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.List","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeAllHeader":{"!description":"Removes all the controls from the aggregation {@link #getHeader header}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getGrowing":{"!description":"Gets current value of property {@link #getGrowing growing}.\n\nDefines whether the component will have growing capability either by pressing a <code>More<\/code> button, or via user scroll. In both cases <code>load-more<\/code> event is fired. <br> <br>\n\nAvailable options: <br> <br> <code>Button<\/code> - Shows a <code>More<\/code> button at the bottom of the list, pressing of which triggers the <code>load-more<\/code> event. <br> <code>Scroll<\/code> - The <code>load-more<\/code> event is triggered when the user scrolls to the bottom of the list; <br> <code>None<\/code> (default) - The growing is off. <br> <br>\n\n<b>Restrictions:<\/b> <code>growing=\"Scroll\"<\/code> is not supported for Internet Explorer, on IE the component will fallback to <code>growing=\"Button\"<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ListGrowingMode"},"destroyHeader":{"!description":"Destroys all the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.List"},"insertHeader":{"!description":"Inserts a header into the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.List","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the header should be inserted at; for a negative value of <code>iIndex<\/code>, the header is inserted at position 0; for a value greater than the current size of the aggregation, the header is inserted at the last position"}},"detachItemDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemDelete itemDelete} event of this <code>sap.ui.webc.main.List<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setBusyDelay":{"!description":"Sets a new value for property {@link #getBusyDelay busyDelay}.\n\nDefines the delay in milliseconds, after which the busy indicator will show up for this component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn(iBusyDelay?: Number) -> sap.ui.webc.main.List","parameters":{"iBusyDelay":"type: int, description: New value for property <code>busyDelay<\/code>"}},"fireItemToggle":{"!description":"Fires event {@link #event:itemToggle itemToggle} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.List","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachItemToggle":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemToggle itemToggle} event of this <code>sap.ui.webc.main.List<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.List","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireItemDelete":{"!description":"Fires event {@link #event:itemDelete itemDelete} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.List","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setFooterText":{"!description":"Sets a new value for property {@link #getFooterText footerText}.\n\nDefines the footer text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFooterText?: String) -> sap.ui.webc.main.List","parameters":{"sFooterText":"type: string, description: New value for property <code>footerText<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IListItem, iIndex: Number) -> sap.ui.webc.main.List","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.IListItem, description: The item to insert; if empty, nothing is inserted"}},"indexOfHeader":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeader header}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> Number","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header whose index is looked for"}}},"sap.ui.webc.main.BreadcrumbsItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.BreadcrumbsItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.BreadcrumbsItem"},"sap.ui.webc.main.MenuItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MenuItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.MenuItem"},"sap.ui.webc.main.Toast_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Toast with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Toast"},"sap.ui.webc.main.Priority":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","High":{"!description":"High priority.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Low":{"!description":"Low priority.","!category":"enum","!type":"String"},"Medium":{"!description":"Medium priority.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"Default, none priority.","!category":"enum","!type":"String"}},"sap.ui.webc.main.TableColumn":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TableColumn.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the column header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setDemandPopin":{"!description":"Sets a new value for property {@link #getDemandPopin demandPopin}.\n\nAccording to your <code>minWidth<\/code> settings, the component can be hidden in different screen sizes. <br> <br> Setting this property to <code>true<\/code>, shows this column as pop-in instead of hiding it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDemandPopin?: Boolean) -> sap.ui.webc.main.TableColumn","parameters":{"bDemandPopin":"type: boolean, description: New value for property <code>demandPopin<\/code>"}},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nDefines the minimum table width required to display this column. By default it is always displayed. <br> <br> The responsive behavior of the <code>sap.ui.webc.main.Table<\/code> is determined by this property. As an example, by setting <code>minWidth<\/code> property to <code>400<\/code> sets the minimum width to 400 pixels, and shows this column on tablet (and desktop) but hides it on mobile. <br> For further responsive design options, see <code>demandPopin<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn(iMinWidth?: Number) -> sap.ui.webc.main.TableColumn","parameters":{"iMinWidth":"type: int, description: New value for property <code>minWidth<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.TableColumn","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getPopinText":{"!description":"Gets current value of property {@link #getPopinText popinText}.\n\nThe text for the column when it pops in.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setPopinText":{"!description":"Sets a new value for property {@link #getPopinText popinText}.\n\nThe text for the column when it pops in.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPopinText?: String) -> sap.ui.webc.main.TableColumn","parameters":{"sPopinText":"type: string, description: New value for property <code>popinText<\/code>"}},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nDefines the minimum table width required to display this column. By default it is always displayed. <br> <br> The responsive behavior of the <code>sap.ui.webc.main.Table<\/code> is determined by this property. As an example, by setting <code>minWidth<\/code> property to <code>400<\/code> sets the minimum width to 400 pixels, and shows this column on tablet (and desktop) but hides it on mobile. <br> For further responsive design options, see <code>demandPopin<\/code> property.\n\nDefault value is <code>...see text or source<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new <code>TableColumn<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDemandPopin demandPopin} : boolean (default: false)<\/li>\n<li>{@link #getMinWidth minWidth} : int (default: ...see text or source)<\/li>\n<li>{@link #getPopinText popinText} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/TableColumn","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.TableColumn","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"getDemandPopin":{"!description":"Gets current value of property {@link #getDemandPopin demandPopin}.\n\nAccording to your <code>minWidth<\/code> settings, the component can be hidden in different screen sizes. <br> <br> Setting this property to <code>true<\/code>, shows this column as pop-in instead of hiding it.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TableColumn"}},"sap.ui.webc.main.TableCell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableCell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TableCell"},"sap.ui.webc.main.ComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ComboBox"},"sap.ui.webc.main.SuggestionGroupItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SuggestionGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.SuggestionGroupItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SuggestionGroupItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/SuggestionGroupItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the <code>sap.ui.webc.main.SuggestionGroupItem<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the <code>sap.ui.webc.main.SuggestionGroupItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.SuggestionGroupItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.Button_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Button with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Button"},"sap.ui.webc.main.Icon_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Icon with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Icon"},"sap.ui.webc.main.IListItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.Badge":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","destroyIcon":{"!description":"Destroys the icon in the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Badge"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Badge.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nDefines the icon to be displayed in the component.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.IIcon"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Badge with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets the aggregated {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> sap.ui.webc.main.Badge","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to set"}},"!constructorDescription":"Constructor for a new <code>Badge<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColorScheme colorScheme} : string (default: \"1\")<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.webc.main.IIcon<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Badge","setColorScheme":{"!description":"Sets a new value for property {@link #getColorScheme colorScheme}.\n\nDefines the color scheme of the component. There are 10 predefined schemes. Each scheme applies different values for the <code>background-color<\/code> and <code>border-color<\/code>. To use one you can set a number from <code>\"1\"<\/code> to <code>\"10\"<\/code>. The <code>colorScheme<\/code> <code>\"1\"<\/code> will be set by default. <br> <br> <b>Note:<\/b> Color schemes have no visual representation in High Contrast Black (sap_belize_hcb) theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"1\"<\/code>.","!static":false,"!category":"function","!type":"fn(sColorScheme?: String) -> sap.ui.webc.main.Badge","parameters":{"sColorScheme":"type: string, description: New value for property <code>colorScheme<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getColorScheme":{"!description":"Gets current value of property {@link #getColorScheme colorScheme}.\n\nDefines the color scheme of the component. There are 10 predefined schemes. Each scheme applies different values for the <code>background-color<\/code> and <code>border-color<\/code>. To use one you can set a number from <code>\"1\"<\/code> to <code>\"10\"<\/code>. The <code>colorScheme<\/code> <code>\"1\"<\/code> will be set by default. <br> <br> <b>Note:<\/b> Color schemes have no visual representation in High Contrast Black (sap_belize_hcb) theme.\n\nDefault value is <code>\"1\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Badge","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.Toast":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setDuration":{"!description":"Sets a new value for property {@link #getDuration duration}.\n\nDefines the duration in milliseconds for which component remains on the screen before it's automatically closed. <br> <br> <b>Note:<\/b> The minimum supported value is <code>500<\/code> ms and even if a lower value is set, the duration would remain <code>500<\/code> ms.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3000<\/code>.","!static":false,"!category":"function","!type":"fn(iDuration?: Number) -> sap.ui.webc.main.Toast","parameters":{"iDuration":"type: int, description: New value for property <code>duration<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Toast.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPlacement":{"!description":"Gets current value of property {@link #getPlacement placement}.\n\nDefines the placement of the component. <br> <br> Available options are: <ul> <li><code>TopStart<\/code><\/li> <li><code>TopCenter<\/code><\/li> <li><code>TopEnd<\/code><\/li> <li><code>MiddleStart<\/code><\/li> <li><code>MiddleCenter<\/code><\/li> <li><code>MiddleEnd<\/code><\/li> <li><code>BottomStart<\/code><\/li> <li><code>BottomCenter<\/code><\/li> <li><code>BottomEnd<\/code><\/li> <\/ul>\n\nDefault value is <code>BottomCenter<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ToastPlacement"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","show":{"!description":"Shows the component.","!static":false,"!category":"function","!type":"fn()"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Toast","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Toast","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Toast with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Toast<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDuration duration} : int (default: 3000)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getPlacement placement} : sap.ui.webc.main.ToastPlacement (default: BottomCenter)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Toast","getDuration":{"!description":"Gets current value of property {@link #getDuration duration}.\n\nDefines the duration in milliseconds for which component remains on the screen before it's automatically closed. <br> <br> <b>Note:<\/b> The minimum supported value is <code>500<\/code> ms and even if a lower value is set, the duration would remain <code>500<\/code> ms.\n\nDefault value is <code>3000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setPlacement":{"!description":"Sets a new value for property {@link #getPlacement placement}.\n\nDefines the placement of the component. <br> <br> Available options are: <ul> <li><code>TopStart<\/code><\/li> <li><code>TopCenter<\/code><\/li> <li><code>TopEnd<\/code><\/li> <li><code>MiddleStart<\/code><\/li> <li><code>MiddleCenter<\/code><\/li> <li><code>MiddleEnd<\/code><\/li> <li><code>BottomStart<\/code><\/li> <li><code>BottomCenter<\/code><\/li> <li><code>BottomEnd<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>BottomCenter<\/code>.","!static":false,"!category":"function","!type":"fn(sPlacement?: sap.ui.webc.main.ToastPlacement) -> sap.ui.webc.main.Toast","parameters":{"sPlacement":"type: sap.ui.webc.main.ToastPlacement, description: New value for property <code>placement<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Toast","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.MultiInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MultiInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.MultiInput"},"sap.ui.webc.main.MessageStrip":{"fireClose":{"!description":"Fires event {@link #event:close close} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MessageStrip","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyIcon":{"!description":"Destroys the icon in the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MessageStrip"},"!proto":"sap.ui.webc.common.WebComponent","getHideIcon":{"!description":"Gets current value of property {@link #getHideIcon hideIcon}.\n\nDefines whether the MessageStrip will show an icon in the beginning. You can directly provide an icon with the <code>icon<\/code> slot. Otherwise, the default icon for the type will be used.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHideIcon":{"!description":"Sets a new value for property {@link #getHideIcon hideIcon}.\n\nDefines whether the MessageStrip will show an icon in the beginning. You can directly provide an icon with the <code>icon<\/code> slot. Otherwise, the default icon for the type will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideIcon?: Boolean) -> sap.ui.webc.main.MessageStrip","parameters":{"bHideIcon":"type: boolean, description: New value for property <code>hideIcon<\/code>"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>MessageStrip<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDesign design} : sap.ui.webc.main.MessageStripDesign (default: Information)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHideCloseButton hideCloseButton} : boolean (default: false)<\/li>\n<li>{@link #getHideIcon hideIcon} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.webc.main.IIcon<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:close close} event of this <code>sap.ui.webc.main.MessageStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MessageStrip<\/code> itself.\n\nFired when the close button is pressed either with a click/tap or by using the Enter or Space key.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MessageStrip","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MessageStrip<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:close close} event of this <code>sap.ui.webc.main.MessageStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MessageStrip","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.MessageStrip.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.MessageStrip","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.MessageStrip","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nDefines the content to be displayed as graphical element within the component. <br> <br> <b>Note:<\/b> If no icon is given, the default icon for the component type will be used. The SAP-icons font provides numerous options. <br> <br>\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.IIcon"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MessageStrip with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets the aggregated {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> sap.ui.webc.main.MessageStrip","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to set"}},"!module":"sap/ui/webc/main/MessageStrip","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the component type. <br> <br> <b>Note:<\/b> Available options are <code>\"Information\"<\/code>, <code>\"Positive\"<\/code>, <code>\"Negative\"<\/code>, and <code>\"Warning\"<\/code>.\n\nDefault value is <code>Information<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MessageStripDesign"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getHideCloseButton":{"!description":"Gets current value of property {@link #getHideCloseButton hideCloseButton}.\n\nDefines whether the MessageStrip renders close button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the component type. <br> <br> <b>Note:<\/b> Available options are <code>\"Information\"<\/code>, <code>\"Positive\"<\/code>, <code>\"Negative\"<\/code>, and <code>\"Warning\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Information<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.MessageStripDesign) -> sap.ui.webc.main.MessageStrip","parameters":{"sDesign":"type: sap.ui.webc.main.MessageStripDesign, description: New value for property <code>design<\/code>"}},"setHideCloseButton":{"!description":"Sets a new value for property {@link #getHideCloseButton hideCloseButton}.\n\nDefines whether the MessageStrip renders close button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideCloseButton?: Boolean) -> sap.ui.webc.main.MessageStrip","parameters":{"bHideCloseButton":"type: boolean, description: New value for property <code>hideCloseButton<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.MessageStrip","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.AvatarGroup":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.IAvatar) -> sap.ui.webc.main.IAvatar | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.IAvatar, description: The item to remove or its index or id"}},"destroyOverflowButton":{"!description":"Destroys the overflowButton in the aggregation {@link #getOverflowButton overflowButton}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.AvatarGroup"},"!proto":"sap.ui.webc.common.WebComponent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.AvatarGroup"},"attachOverflow":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:overflow overflow} event of this <code>sap.ui.webc.main.AvatarGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.AvatarGroup<\/code> itself.\n\nFired when the count of visible <code>sap.ui.webc.main.Avatar<\/code> elements in the component has changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.AvatarGroup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.AvatarGroup<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","setOverflowButton":{"!description":"Sets the aggregated {@link #getOverflowButton overflowButton}.","!static":false,"!category":"function","!type":"fn(oOverflowButton: sap.ui.core.Control) -> sap.ui.webc.main.AvatarGroup","parameters":{"oOverflowButton":"type: sap.ui.core.Control, description: The overflowButton to set"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.AvatarGroup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IAvatar) -> sap.ui.webc.main.AvatarGroup","parameters":{"oItem":"type: sap.ui.webc.main.IAvatar, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the items of the component. Use the <code>sap.ui.webc.main.Avatar<\/code> component as an item. <br> <br> <b>Note:<\/b> The UX guidelines recommends using avatars with \"Circle\" shape. Moreover, if you use avatars with \"Square\" shape, there will be visual inconsistency as the built-in overflow action has \"Circle\" shape.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IAvatar]"},"!constructorDescription":"Constructor for a new <code>AvatarGroup<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.webc.main.AvatarGroupType (default: Group)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.webc.main.IAvatar[] (default)<\/li>\n<li>{@link #getOverflowButton overflowButton} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:overflow overflow} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getHiddenItems":{"!description":"Returns an array containing the <code>ui5-avatar<\/code> instances that are currently not displayed due to lack of space.","!static":false,"!category":"function","!type":"fn()"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IAvatar<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IAvatar) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.IAvatar, description: The item whose index is looked for"}},"getColorScheme":{"!description":"Returns an array containing the <code>AvatarColorScheme<\/code> values that correspond to the avatars in the component.","!static":false,"!category":"function","!type":"fn()"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.AvatarGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.AvatarGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.AvatarGroup<\/code> itself.\n\nFired when the component is activated either with a click/tap or by using the Enter or Space key.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.AvatarGroup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.AvatarGroup<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getOverflowButton":{"!description":"Gets content of aggregation {@link #getOverflowButton overflowButton}.\n\nDefines the overflow button of the component. <b>Note:<\/b> We recommend using the <code>sap.ui.webc.main.Button<\/code> component. <br> <br> <b>Note:<\/b> If this slot is not used, the component will display the built-in overflow button.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IAvatar]"},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the mode of the <code>AvatarGroup<\/code>. <br> <br> Available options are: <ul> <li><code>Group<\/code><\/li> <li><code>Individual<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Group<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: sap.ui.webc.main.AvatarGroupType) -> sap.ui.webc.main.AvatarGroup","parameters":{"sType":"type: sap.ui.webc.main.AvatarGroupType, description: New value for property <code>type<\/code>"}},"fireOverflow":{"!description":"Fires event {@link #event:overflow overflow} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.AvatarGroup","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachOverflow":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:overflow overflow} event of this <code>sap.ui.webc.main.AvatarGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.AvatarGroup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.AvatarGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.AvatarGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.AvatarGroup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!module":"sap/ui/webc/main/AvatarGroup","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the mode of the <code>AvatarGroup<\/code>. <br> <br> Available options are: <ul> <li><code>Group<\/code><\/li> <li><code>Individual<\/code><\/li> <\/ul>\n\nDefault value is <code>Group<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.AvatarGroupType"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IAvatar, iIndex: Number) -> sap.ui.webc.main.AvatarGroup","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.IAvatar, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.webc.main.IButton":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.BusyIndicator":{"getDelay":{"!description":"Gets current value of property {@link #getDelay delay}.\n\nDefines the delay in milliseconds, after which the busy indicator will be visible on the screen.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDetermines the content over which the component will appear.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>BusyIndicator<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getActive active} : boolean (default: false)<\/li>\n<li>{@link #getDelay delay} : int (default: 1000)<\/li>\n<li>{@link #getDisplay display} : string (default: \"inline-block\")<\/li>\n<li>{@link #getSize size} : sap.ui.webc.main.BusyIndicatorSize (default: Medium)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nDefines the size of the component.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>Small<\/code><\/li> <li><code>Medium<\/code><\/li> <li><code>Large<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Medium<\/code>.","!static":false,"!category":"function","!type":"fn(sSize?: sap.ui.webc.main.BusyIndicatorSize) -> sap.ui.webc.main.BusyIndicator","parameters":{"sSize":"type: sap.ui.webc.main.BusyIndicatorSize, description: New value for property <code>size<\/code>"}},"setDelay":{"!description":"Sets a new value for property {@link #getDelay delay}.\n\nDefines the delay in milliseconds, after which the busy indicator will be visible on the screen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn(iDelay?: Number) -> sap.ui.webc.main.BusyIndicator","parameters":{"iDelay":"type: int, description: New value for property <code>delay<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.BusyIndicator"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.BusyIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setDisplay":{"!description":"Sets a new value for property {@link #getDisplay display}.\n\nDefines whether the control will be rendered as a block or inline HTML element\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"inline-block\"<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplay?: String) -> sap.ui.webc.main.BusyIndicator","parameters":{"sDisplay":"type: string, description: New value for property <code>display<\/code>"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines text to be displayed below the component. It can be used to inform the user of the current operation.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.BusyIndicator","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.BusyIndicator","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.BusyIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nDefines the size of the component.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>Small<\/code><\/li> <li><code>Medium<\/code><\/li> <li><code>Large<\/code><\/li> <\/ul>\n\nDefault value is <code>Medium<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.BusyIndicatorSize"},"setActive":{"!description":"Sets a new value for property {@link #getActive active}.\n\nDefines if the busy indicator is visible on the screen. By default it is not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bActive?: Boolean) -> sap.ui.webc.main.BusyIndicator","parameters":{"bActive":"type: boolean, description: New value for property <code>active<\/code>"}},"!module":"sap/ui/webc/main/BusyIndicator","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getActive":{"!description":"Gets current value of property {@link #getActive active}.\n\nDefines if the busy indicator is visible on the screen. By default it is not.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.BusyIndicator","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"getDisplay":{"!description":"Gets current value of property {@link #getDisplay display}.\n\nDefines whether the control will be rendered as a block or inline HTML element\n\nDefault value is <code>\"inline-block\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines text to be displayed below the component. It can be used to inform the user of the current operation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.BusyIndicator","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.DatePicker":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.DatePicker","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getSecondaryCalendarType":{"!description":"Gets current value of property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.DatePicker","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the aria-label attribute for the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.DatePicker","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.DatePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DatePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getPrimaryCalendarType":{"!description":"Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setPrimaryCalendarType":{"!description":"Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.webc.main.DatePicker","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.DatePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the aria-label attribute for the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.DatePicker","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"closePicker":{"!description":"Closes the picker.","!static":false,"!category":"function","!type":"fn()"},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.DatePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DatePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.DatePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.DatePicker<\/code> itself.\n\nFired when the input operation has finished by pressing Enter or on focusout.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DatePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.DatePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.DatePicker","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.DatePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.DatePicker","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setHideWeekNumbers":{"!description":"Sets a new value for property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideWeekNumbers?: Boolean) -> sap.ui.webc.main.DatePicker","parameters":{"bHideWeekNumbers":"type: boolean, description: New value for property <code>hideWeekNumbers<\/code>"}},"isOpen":{"!description":"Checks if the picker is open.","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/webc/main/DatePicker","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getDateValue":{"!description":"Returns the currently selected date represented as a Local JavaScript Date instance.","!static":false,"!category":"function","!type":"fn()"},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.DatePicker","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"setFormatPattern":{"!description":"Sets a new value for property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFormatPattern?: String) -> sap.ui.webc.main.DatePicker","parameters":{"sFormatPattern":"type: string, description: New value for property <code>formatPattern<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMinDate":{"!description":"Gets current value of property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHideWeekNumbers":{"!description":"Gets current value of property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>DatePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getFormatPattern formatPattern} : string (default: \"\")<\/li>\n<li>{@link #getHideWeekNumbers hideWeekNumbers} : boolean (default: false)<\/li>\n<li>{@link #getMaxDate maxDate} : string (default: \"\")<\/li>\n<li>{@link #getMinDate minDate} : string (default: \"\")<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: undefined)<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType (default: undefined)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.DatePicker","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"formatValue":{"!description":"Formats a Java Script date object into a string representing a locale date according to the <code>formatPattern<\/code> property of the DatePicker instance","!static":false,"!category":"function","!type":"fn(date: Object)","parameters":{"date":"type: object, description: A Java Script date object to be formatted as string"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.DatePicker","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormatPattern":{"!description":"Gets current value of property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"isValid":{"!description":"Checks if a value is valid against the current date format of the DatePicker.","!static":false,"!category":"function","!type":"fn(value: String)","parameters":{"value":"type: string, description: A value to be tested against the current date format"}},"getMaxDate":{"!description":"Gets current value of property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setSecondaryCalendarType":{"!description":"Sets a new value for property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondaryCalendarType?: sap.ui.core.CalendarType) -> sap.ui.webc.main.DatePicker","parameters":{"sSecondaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>secondaryCalendarType<\/code>"}},"isInValidRange":{"!description":"Checks if a date is between the minimum and maximum date.","!static":false,"!category":"function","!type":"fn(value: String)","parameters":{"value":"type: string, description: A value to be checked"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.DatePicker","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines a formatted date value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setMaxDate":{"!description":"Sets a new value for property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxDate?: String) -> sap.ui.webc.main.DatePicker","parameters":{"sMaxDate":"type: string, description: New value for property <code>maxDate<\/code>"}},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines a formatted date value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.DatePicker","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.DatePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.DatePicker<\/code> itself.\n\nFired when the value of the component is changed at each key stroke.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DatePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.DatePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"openPicker":{"!description":"Opens the picker.","!static":false,"!category":"function","!type":"fn()"},"setMinDate":{"!description":"Sets a new value for property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMinDate?: String) -> sap.ui.webc.main.DatePicker","parameters":{"sMinDate":"type: string, description: New value for property <code>minDate<\/code>"}}},"sap.ui.webc.main.TreeItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TreeItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TreeItem"},"sap.ui.webc.main.GroupHeaderListItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.GroupHeaderListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines the selected state of the <code>ListItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.GroupHeaderListItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.GroupHeaderListItem","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.GroupHeaderListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines the selected state of the <code>ListItem<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>GroupHeaderListItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/GroupHeaderListItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.GroupHeaderListItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.ITab":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.ITableColumn":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.Menu_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Menu with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Menu"},"sap.ui.webc.main.LinkDesign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Emphasized":{"!description":"emphasized type","!category":"enum","!type":"String"},"!category":"static class","Subtle":{"!description":"subtle type (appears as regular text, rather than a link)","!category":"enum","!type":"String"},"Default":{"!description":"default type (no special styling)","!category":"enum","!type":"String"}},"sap.ui.webc.main.TableRow":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAllCells":{"!description":"Removes all the controls from the aggregation {@link #getCells cells}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITableCell]"},"addCell":{"!description":"Adds some cell to the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.webc.main.ITableCell) -> sap.ui.webc.main.TableRow","parameters":{"oCell":"type: sap.ui.webc.main.ITableCell, description: The cell to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TableRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyCells":{"!description":"Destroys all the cells in the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TableRow"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines the row's selected state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.TableRow","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the visual indication and behavior of the component. <br> <br> Available options are: <ul> <li><code>Active<\/code><\/li> <li><code>Inactive<\/code><\/li> <\/ul> <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press, while with type <code>Inactive<\/code> - will not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inactive<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: sap.ui.webc.main.TableRowType) -> sap.ui.webc.main.TableRow","parameters":{"sType":"type: sap.ui.webc.main.TableRowType, description: New value for property <code>type<\/code>"}},"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.webc.main.ITableCell<\/code> in the aggregation {@link #getCells cells}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.webc.main.ITableCell) -> Number","parameters":{"oCell":"type: sap.ui.webc.main.ITableCell, description: The cell whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines the row's selected state.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>TableRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getType type} : sap.ui.webc.main.TableRowType (default: Inactive)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.webc.main.ITableCell[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/TableRow","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the visual indication and behavior of the component. <br> <br> Available options are: <ul> <li><code>Active<\/code><\/li> <li><code>Inactive<\/code><\/li> <\/ul> <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press, while with type <code>Inactive<\/code> - will not.\n\nDefault value is <code>Inactive<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TableRowType"},"insertCell":{"!description":"Inserts a cell into the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.webc.main.ITableCell, iIndex: Number) -> sap.ui.webc.main.TableRow","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the cell should be inserted at; for a negative value of <code>iIndex<\/code>, the cell is inserted at position 0; for a value greater than the current size of the aggregation, the cell is inserted at the last position","oCell":"type: sap.ui.webc.main.ITableCell, description: The cell to insert; if empty, nothing is inserted"}},"removeCell":{"!description":"Removes a cell from the aggregation {@link #getCells cells}.","!static":false,"!category":"function","!type":"fn(vCell: Number | String | sap.ui.webc.main.ITableCell) -> sap.ui.webc.main.ITableCell | null","parameters":{"vCell":"type: int|string|sap.ui.webc.main.ITableCell, description: The cell to remove or its index or id"}},"getCells":{"!description":"Gets content of aggregation {@link #getCells cells}.\n\nDefines the cells of the component. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.TableCell<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITableCell]"}},"sap.ui.webc.main.List_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.List with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.List"},"sap.ui.webc.main.TabContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TabContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TabContainer"},"sap.ui.webc.main.ColorPicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ColorPicker"},"sap.ui.webc.main.Tab_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Tab with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Tab"},"sap.ui.webc.main.GrowingMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Button":{"!description":"Component's <code>load-more<\/code> is fired upon pressing a \"More\" button. at the bottom.","!category":"enum","!type":"String"},"Scroll":{"!description":"Component's <code>load-more<\/code> is fired upon scroll.","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"Component's growing is not enabled.","!category":"enum","!type":"String"}},"sap.ui.webc.main.ColorPalettePopover":{"removeAllColors":{"!description":"Removes all the controls from the aggregation {@link #getColors colors}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IColorPaletteItem]"},"setShowMoreColors":{"!description":"Sets a new value for property {@link #getShowMoreColors showMoreColors}.\n\nDefines whether the user can choose a custom color from a component. <b>Note:<\/b> In order to use this property you need to import the following module: <code>\"@ui5/webcomponents/dist/features/ColorPaletteMoreColors.js\"<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMoreColors?: Boolean) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"bShowMoreColors":"type: boolean, description: New value for property <code>showMoreColors<\/code>"}},"indexOfColor":{"!description":"Checks for the provided <code>sap.ui.webc.main.IColorPaletteItem<\/code> in the aggregation {@link #getColors colors}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColor: sap.ui.webc.main.IColorPaletteItem) -> Number","parameters":{"oColor":"type: sap.ui.webc.main.IColorPaletteItem, description: The color whose index is looked for"}},"!proto":"sap.ui.webc.common.WebComponent","addColor":{"!description":"Adds some color to the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn(oColor: sap.ui.webc.main.IColorPaletteItem) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"oColor":"type: sap.ui.webc.main.IColorPaletteItem, description: The color to add; if empty, nothing is inserted"}},"setDefaultColor":{"!description":"Sets a new value for property {@link #getDefaultColor defaultColor}.\n\nDefines the default color of the component. <b>Note:<\/b> The default color should be a part of the ColorPalette colors<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDefaultColor: sap.ui.core.CSSColor) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"sDefaultColor":"type: sap.ui.core.CSSColor, description: New value for property <code>defaultColor<\/code>"}},"!category":"class","removeColor":{"!description":"Removes a color from the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn(vColor: Number | String | sap.ui.webc.main.IColorPaletteItem) -> sap.ui.webc.main.IColorPaletteItem | null","parameters":{"vColor":"type: int|string|sap.ui.webc.main.IColorPaletteItem, description: The color to remove or its index or id"}},"setShowDefaultColor":{"!description":"Sets a new value for property {@link #getShowDefaultColor showDefaultColor}.\n\nDefines whether the user can choose the default color from a button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowDefaultColor?: Boolean) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"bShowDefaultColor":"type: boolean, description: New value for property <code>showDefaultColor<\/code>"}},"detachItemClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.ColorPalettePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>ColorPalettePopover<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDefaultColor defaultColor} : sap.ui.core.CSSColor<\/li>\n<li>{@link #getShowDefaultColor showDefaultColor} : boolean (default: false)<\/li>\n<li>{@link #getShowMoreColors showMoreColors} : boolean (default: false)<\/li>\n<li>{@link #getShowRecentColors showRecentColors} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColors colors} : sap.ui.webc.main.IColorPaletteItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClick itemClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","destroyColors":{"!description":"Destroys all the colors in the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ColorPalettePopover"},"setShowRecentColors":{"!description":"Sets a new value for property {@link #getShowRecentColors showRecentColors}.\n\nDefines whether the user can see the last used colors in the bottom of the component\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRecentColors?: Boolean) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"bShowRecentColors":"type: boolean, description: New value for property <code>showRecentColors<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ColorPalettePopover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowDefaultColor":{"!description":"Gets current value of property {@link #getShowDefaultColor showDefaultColor}.\n\nDefines whether the user can choose the default color from a button.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertColor":{"!description":"Inserts a color into the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn(oColor: sap.ui.webc.main.IColorPaletteItem, iIndex: Number) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"oColor":"type: sap.ui.webc.main.IColorPaletteItem, description: The color to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the color should be inserted at; for a negative value of <code>iIndex<\/code>, the color is inserted at position 0; for a value greater than the current size of the aggregation, the color is inserted at the last position"}},"getShowRecentColors":{"!description":"Gets current value of property {@link #getShowRecentColors showRecentColors}.\n\nDefines whether the user can see the last used colors in the bottom of the component\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachItemClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.ColorPalettePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ColorPalettePopover<\/code> itself.\n\nFired when the user selects a color.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ColorPalettePopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPalettePopover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getColors":{"!description":"Gets content of aggregation {@link #getColors colors}.\n\nDefines the content of the component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IColorPaletteItem]"},"getShowMoreColors":{"!description":"Gets current value of property {@link #getShowMoreColors showMoreColors}.\n\nDefines whether the user can choose a custom color from a component. <b>Note:<\/b> In order to use this property you need to import the following module: <code>\"@ui5/webcomponents/dist/features/ColorPaletteMoreColors.js\"<\/code>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/ui/webc/main/ColorPalettePopover","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","fireItemClick":{"!description":"Fires event {@link #event:itemClick itemClick} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ColorPalettePopover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getDefaultColor":{"!description":"Gets current value of property {@link #getDefaultColor defaultColor}.\n\nDefines the default color of the component. <b>Note:<\/b> The default color should be a part of the ColorPalette colors<\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSColor"},"showAt":{"!description":"Shows the ColorPalettePopover.","!static":false,"!category":"function","!type":"fn(opener: HTMLElement)","parameters":{"opener":"type: HTMLElement, description: the element that the popover is shown at"}},"openPopover":{"!description":"Shows the ColorPalettePopover. <b>Note:<\/b> The method is deprecated and will be removed in future, use <code>showAt<\/code> instead.","!static":false,"!category":"function","!type":"fn(opener: HTMLElement)","parameters":{"opener":"type: HTMLElement, description: the element that the popover is shown at"}}},"sap.ui.webc.main.MessageStrip_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MessageStrip with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.MessageStrip"},"sap.ui.webc.main.Option_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Option with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Option"},"sap.ui.webc.main.ColorPalette_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPalette with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ColorPalette"},"sap.ui.webc.main.TableGroupRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableGroupRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TableGroupRow"},"sap.ui.webc.main.Input_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Input with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Input"},"sap.ui.webc.main.Breadcrumbs_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Breadcrumbs with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Breadcrumbs"},"sap.ui.webc.main.RatingIndicator":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setMax":{"!description":"Sets a new value for property {@link #getMax max}.\n\nThe number of displayed rating symbols.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn(iMax?: Number) -> sap.ui.webc.main.RatingIndicator","parameters":{"iMax":"type: int, description: New value for property <code>max<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.RatingIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"getMax":{"!description":"Gets current value of property {@link #getMax max}.\n\nThe number of displayed rating symbols.\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.webc.common.WebComponent","getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.RatingIndicator","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.RatingIndicator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.RatingIndicator<\/code> itself.\n\nThe event is fired when the value changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RatingIndicator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.RatingIndicator<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.RatingIndicator","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.RatingIndicator","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.RatingIndicator","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.RatingIndicator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RatingIndicator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.RatingIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe indicated value of the rating. <br> <br> <b>Note:<\/b> If you set a number which is not round, it would be shown as follows: <ul> <li>1.0 - 1.2 -> 1<\/li> <li>1.3 - 1.7 -> 1.5<\/li> <li>1.8 - 1.9 -> 2<\/li> <ul>\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.RatingIndicator","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new <code>RatingIndicator<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMax max} : int (default: 5)<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/RatingIndicator","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe indicated value of the rating. <br> <br> <b>Note:<\/b> If you set a number which is not round, it would be shown as follows: <ul> <li>1.0 - 1.2 -> 1<\/li> <li>1.3 - 1.7 -> 1.5<\/li> <li>1.8 - 1.9 -> 2<\/li> <ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fValue?: Number) -> sap.ui.webc.main.RatingIndicator","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"}}},"sap.ui.webc.main.SuggestionItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SuggestionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.SuggestionItem"},"sap.ui.webc.main.Title":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Title.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Title","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setLevel":{"!description":"Sets a new value for property {@link #getLevel level}.\n\nDefines the component level. Available options are: <code>\"H6\"<\/code> to <code>\"H1\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>H2<\/code>.","!static":false,"!category":"function","!type":"fn(sLevel?: sap.ui.webc.main.TitleLevel) -> sap.ui.webc.main.Title","parameters":{"sLevel":"type: sap.ui.webc.main.TitleLevel, description: New value for property <code>level<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Title with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getWrappingType":{"!description":"Gets current value of property {@link #getWrappingType wrappingType}.\n\nDefines how the text of a component will be displayed when there is not enough space. Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.WrappingType"},"getLevel":{"!description":"Gets current value of property {@link #getLevel level}.\n\nDefines the component level. Available options are: <code>\"H6\"<\/code> to <code>\"H1\"<\/code>.\n\nDefault value is <code>H2<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TitleLevel"},"!constructorDescription":"Constructor for a new <code>Title<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLevel level} : sap.ui.webc.main.TitleLevel (default: H2)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWrappingType wrappingType} : sap.ui.webc.main.WrappingType (default: None)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Title","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setWrappingType":{"!description":"Sets a new value for property {@link #getWrappingType wrappingType}.\n\nDefines how the text of a component will be displayed when there is not enough space. Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sWrappingType?: sap.ui.webc.main.WrappingType) -> sap.ui.webc.main.Title","parameters":{"sWrappingType":"type: sap.ui.webc.main.WrappingType, description: New value for property <code>wrappingType<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Title","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.Icon":{"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDefines the unique identifier (icon name) of the component. <br>\n\nTo browse all available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>. <br>\n\nExample: <br> <code>name='add'<\/code>, <code>name='delete'<\/code>, <code>name='employee'<\/code>. <br> <br>\n\n<b>Note:<\/b> To use the SAP Fiori Tools icons, you need to set the <code>tnt<\/code> prefix in front of the icon's name. <br>\n\nExample: <br> <code>name='tnt/antenna'<\/code>, <code>name='tnt/actor'<\/code>, <code>name='tnt/api'<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.Icon","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDefines the unique identifier (icon name) of the component. <br>\n\nTo browse all available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>. <br>\n\nExample: <br> <code>name='add'<\/code>, <code>name='delete'<\/code>, <code>name='employee'<\/code>. <br> <br>\n\n<b>Note:<\/b> To use the SAP Fiori Tools icons, you need to set the <code>tnt<\/code> prefix in front of the icon's name. <br>\n\nExample: <br> <code>name='tnt/antenna'<\/code>, <code>name='tnt/actor'<\/code>, <code>name='tnt/api'<\/code>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getBackgroundColor":{"!description":"Gets current value of property {@link #getBackgroundColor backgroundColor}.\n\nDefines the background color of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSColor"},"setInteractive":{"!description":"Sets a new value for property {@link #getInteractive interactive}.\n\nDefines if the icon is interactive (focusable and pressable)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInteractive?: Boolean) -> sap.ui.webc.main.Icon","parameters":{"bInteractive":"type: boolean, description: New value for property <code>interactive<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. If not provided a default text alternative will be set, if present. <br> <br> <b>Note:<\/b> Every icon should have a text alternative in order to calculate its accessible name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.Icon","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Icon","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Icon<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : string (default: \"\")<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : sap.ui.core.CSSColor<\/li>\n<li>{@link #getColor color} : sap.ui.core.CSSColor<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getInteractive interactive} : boolean (default: false)<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getShowTooltip showTooltip} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getShowTooltip":{"!description":"Gets current value of property {@link #getShowTooltip showTooltip}.\n\nDefines whether the component should have a tooltip.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Icon.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setBackgroundColor":{"!description":"Sets a new value for property {@link #getBackgroundColor backgroundColor}.\n\nDefines the background color of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundColor: sap.ui.core.CSSColor) -> sap.ui.webc.main.Icon","parameters":{"sBackgroundColor":"type: sap.ui.core.CSSColor, description: New value for property <code>backgroundColor<\/code>"}},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.Icon<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Icon<\/code> itself.\n\nFired when the user clicks the control","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Icon","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Icon<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. If not provided a default text alternative will be set, if present. <br> <br> <b>Note:<\/b> Every icon should have a text alternative in order to calculate its accessible name.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibleRole":{"!description":"Sets a new value for property {@link #getAccessibleRole accessibleRole}.\n\nDefines the accessibility role of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleRole?: String) -> sap.ui.webc.main.Icon","parameters":{"sAccessibleRole":"type: string, description: New value for property <code>accessibleRole<\/code>"}},"getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nDefines the color of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSColor"},"getInteractive":{"!description":"Gets current value of property {@link #getInteractive interactive}.\n\nDefines if the icon is interactive (focusable and pressable)\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Icon","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Icon","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setShowTooltip":{"!description":"Sets a new value for property {@link #getShowTooltip showTooltip}.\n\nDefines whether the component should have a tooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTooltip?: Boolean) -> sap.ui.webc.main.Icon","parameters":{"bShowTooltip":"type: boolean, description: New value for property <code>showTooltip<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Icon with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.Icon<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Icon","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nDefines the color of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColor: sap.ui.core.CSSColor) -> sap.ui.webc.main.Icon","parameters":{"sColor":"type: sap.ui.core.CSSColor, description: New value for property <code>color<\/code>"}},"!module":"sap/ui/webc/main/Icon","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getAccessibleRole":{"!description":"Gets current value of property {@link #getAccessibleRole accessibleRole}.\n\nDefines the accessibility role of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.webc.main.Card_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Card with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Card"},"sap.ui.webc.main.MultiComboBox":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.MultiComboBox","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.MultiComboBox","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MultiComboBox"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getAllowCustomValues":{"!description":"Gets current value of property {@link #getAllowCustomValues allowCustomValues}.\n\nDefines if the user input will be prevented, if no matching item has been found\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the component items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IMultiComboBoxItem]"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IMultiComboBoxItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMultiComboBoxItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.IMultiComboBoxItem, description: The item whose index is looked for"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself.\n\nFired when selection is changed by user interaction in <code>SingleSelect<\/code> and <code>MultiSelect<\/code> modes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.MultiComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.MultiComboBox","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself.\n\nFired when the input operation has finished by pressing Enter or on focusout.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IMultiComboBoxItem]"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.MultiComboBox","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"setFilter":{"!description":"Sets a new value for property {@link #getFilter filter}.\n\nDefines the filter type of the component. Available options are: <code>StartsWithPerTerm<\/code>, <code>StartsWith<\/code>, <code>Contains<\/code> and <code>None<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"StartsWithPerTerm\"<\/code>.","!static":false,"!category":"function","!type":"fn(sFilter?: String) -> sap.ui.webc.main.MultiComboBox","parameters":{"sFilter":"type: string, description: New value for property <code>filter<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MultiComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets the aggregated {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> sap.ui.webc.main.MultiComboBox","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to set"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.MultiComboBox","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"attachOpenChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:openChange openChange} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself.\n\nFired when the dropdown is opened or closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/ui/webc/main/MultiComboBox","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.IMultiComboBoxItem) -> sap.ui.webc.main.IMultiComboBoxItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.IMultiComboBoxItem, description: The item to remove or its index or id"}},"destroyIcon":{"!description":"Destroys the icon in the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MultiComboBox"},"getOpen":{"!description":"Returns the indicates whether the dropdown is open. True if the dropdown is open, false otherwise.","!static":false,"!category":"function","!type":"fn()"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMultiComboBoxItem) -> sap.ui.webc.main.MultiComboBox","parameters":{"oItem":"type: sap.ui.webc.main.IMultiComboBoxItem, description: The item to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new <code>MultiComboBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAllowCustomValues allowCustomValues} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getFilter filter} : string (default: \"StartsWithPerTerm\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.webc.main.IIcon<\/li>\n<li>{@link #getItems items} : sap.ui.webc.main.IMultiComboBoxItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:openChange openChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.MultiComboBox","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"setAllowCustomValues":{"!description":"Sets a new value for property {@link #getAllowCustomValues allowCustomValues}.\n\nDefines if the user input will be prevented, if no matching item has been found\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAllowCustomValues?: Boolean) -> sap.ui.webc.main.MultiComboBox","parameters":{"bAllowCustomValues":"type: boolean, description: New value for property <code>allowCustomValues<\/code>"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachOpenChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:openChange openChange} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.MultiComboBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nDefines the icon to be displayed in the component.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.IIcon"},"getFilter":{"!description":"Gets current value of property {@link #getFilter filter}.\n\nDefines the filter type of the component. Available options are: <code>StartsWithPerTerm<\/code>, <code>StartsWith<\/code>, <code>Contains<\/code> and <code>None<\/code>.\n\nDefault value is <code>\"StartsWithPerTerm\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the value of the component. <br> <br> <b>Note:<\/b> The property is updated upon typing.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the value of the component. <br> <br> <b>Note:<\/b> The property is updated upon typing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.MultiComboBox","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.MultiComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself.\n\nFired when the value of the component changes at each keystroke.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.MultiComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireOpenChange":{"!description":"Fires event {@link #event:openChange openChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.MultiComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMultiComboBoxItem, iIndex: Number) -> sap.ui.webc.main.MultiComboBox","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.IMultiComboBoxItem, description: The item to insert; if empty, nothing is inserted"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.webc.main.SplitButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SplitButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.SplitButton"},"sap.ui.webc.main.DateRangePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.DateRangePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.DateRangePicker"},"sap.ui.webc.main.Panel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Panel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Panel"},"sap.ui.webc.main.ICalendarDate":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.PopoverPlacementType":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Left":{"!description":"Popover will be placed at the left side of the reference element.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Top":{"!description":"Popover will be placed at the top of the reference element.","!category":"enum","!type":"String"},"Right":{"!description":"Popover will be placed at the right side of the reference element.","!category":"enum","!type":"String"},"Bottom":{"!description":"Popover will be placed at the bottom of the reference element.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc.main.ResponsivePopover_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ResponsivePopover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ResponsivePopover"},"sap.ui.webc.main.DatePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.DatePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.DatePicker"},"sap.ui.webc.main.RadioButton":{"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDefines the name of the component. Radio buttons with the same <code>name<\/code> will form a radio button group.\n\n<br> <br> <b>Note:<\/b> The selection can be changed with <code>ARROW_UP/DOWN<\/code> and <code>ARROW_LEFT/RIGHT<\/code> keys between radio buttons in same group.\n\n<br> <br> <b>Note:<\/b> Only one radio button can be selected per group.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.RadioButton","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDefines the name of the component. Radio buttons with the same <code>name<\/code> will form a radio button group.\n\n<br> <br> <b>Note:<\/b> The selection can be changed with <code>ARROW_UP/DOWN<\/code> and <code>ARROW_LEFT/RIGHT<\/code> keys between radio buttons in same group.\n\n<br> <br> <b>Note:<\/b> Only one radio button can be selected per group.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.RadioButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RadioButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getWrappingType":{"!description":"Gets current value of property {@link #getWrappingType wrappingType}.\n\nDefines whether the component text wraps when there is not enough space. <br> <br> Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.WrappingType"},"!constructorDescription":"Constructor for a new <code>RadioButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChecked checked} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWrappingType wrappingType} : sap.ui.webc.main.WrappingType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.RadioButton","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChecked":{"!description":"Sets a new value for property {@link #getChecked checked}.\n\nDefines whether the component is checked or not. <br> <br> <b>Note:<\/b> The property value can be changed with user interaction, either by clicking/tapping on the component, or by using the Space or Enter key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bChecked?: Boolean) -> sap.ui.webc.main.RadioButton","parameters":{"bChecked":"type: boolean, description: New value for property <code>checked<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.RadioButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.RadioButton","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.RadioButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.RadioButton<\/code> itself.\n\nFired when the component checked state changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.RadioButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.RadioButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.RadioButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.RadioButton","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.RadioButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.RadioButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.RadioButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/RadioButton","getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.RadioButton","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"getChecked":{"!description":"Gets current value of property {@link #getChecked checked}.\n\nDefines whether the component is checked or not. <br> <br> <b>Note:<\/b> The property value can be changed with user interaction, either by clicking/tapping on the component, or by using the Space or Enter key.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWrappingType":{"!description":"Sets a new value for property {@link #getWrappingType wrappingType}.\n\nDefines whether the component text wraps when there is not enough space. <br> <br> Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sWrappingType?: sap.ui.webc.main.WrappingType) -> sap.ui.webc.main.RadioButton","parameters":{"sWrappingType":"type: sap.ui.webc.main.WrappingType, description: New value for property <code>wrappingType<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.RadioButton","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.StepInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.StepInput with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.StepInput"},"sap.ui.webc.main.Calendar":{"setFormatPattern":{"!description":"Sets a new value for property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFormatPattern?: String) -> sap.ui.webc.main.Calendar","parameters":{"sFormatPattern":"type: string, description: New value for property <code>formatPattern<\/code>"}},"getSecondaryCalendarType":{"!description":"Gets current value of property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"getDates":{"!description":"Gets content of aggregation {@link #getDates dates}.\n\nDefines the selected date or dates (depending on the <code>selectionMode<\/code> property) for this calendar as instances of <code>sap.ui.webc.main.CalendarDate<\/code>","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ICalendarDate]"},"getMinDate":{"!description":"Gets current value of property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","getSelectionMode":{"!description":"Gets current value of property {@link #getSelectionMode selectionMode}.\n\nDefines the type of selection used in the calendar component. Accepted property values are:<br>\n\n<ul> <li><code>CalendarSelectionMode.Single<\/code> - enables a single date selection.(default value)<\/li> <li><code>CalendarSelectionMode.Range<\/code> - enables selection of a date range.<\/li> <li><code>CalendarSelectionMode.Multiple<\/code> - enables selection of multiple dates.<\/li> <\/ul>\n\nDefault value is <code>Single<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.CalendarSelectionMode"},"insertDate":{"!description":"Inserts a date into the aggregation {@link #getDates dates}.","!static":false,"!category":"function","!type":"fn(oDate: sap.ui.webc.main.ICalendarDate, iIndex: Number) -> sap.ui.webc.main.Calendar","parameters":{"oDate":"type: sap.ui.webc.main.ICalendarDate, description: The date to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the date should be inserted at; for a negative value of <code>iIndex<\/code>, the date is inserted at position 0; for a value greater than the current size of the aggregation, the date is inserted at the last position"}},"!category":"class","getPrimaryCalendarType":{"!description":"Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"getHideWeekNumbers":{"!description":"Gets current value of property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>Calendar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFormatPattern formatPattern} : string (default: \"\")<\/li>\n<li>{@link #getHideWeekNumbers hideWeekNumbers} : boolean (default: false)<\/li>\n<li>{@link #getMaxDate maxDate} : string (default: \"\")<\/li>\n<li>{@link #getMinDate minDate} : string (default: \"\")<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType (default: undefined)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.ui.webc.main.CalendarSelectionMode (default: Single)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDates dates} : sap.ui.webc.main.ICalendarDate[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectedDatesChange selectedDatesChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","getFormatPattern":{"!description":"Gets current value of property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeDate":{"!description":"Removes a date from the aggregation {@link #getDates dates}.","!static":false,"!category":"function","!type":"fn(vDate: Number | String | sap.ui.webc.main.ICalendarDate) -> sap.ui.webc.main.ICalendarDate | null","parameters":{"vDate":"type: int|string|sap.ui.webc.main.ICalendarDate, description: The date to remove or its index or id"}},"setPrimaryCalendarType":{"!description":"Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.webc.main.Calendar","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Calendar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachSelectedDatesChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectedDatesChange selectedDatesChange} event of this <code>sap.ui.webc.main.Calendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Calendar<\/code> itself.\n\nFired when the selected dates change. <b>Note:<\/b> If you call <code>preventDefault()<\/code> for this event, the component will not create instances of <code>sap.ui.webc.main.CalendarDate<\/code> for the newly selected dates. In that case you should do this manually.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Calendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Calendar<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMaxDate":{"!description":"Gets current value of property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllDates":{"!description":"Removes all the controls from the aggregation {@link #getDates dates}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ICalendarDate]"},"detachSelectedDatesChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectedDatesChange selectedDatesChange} event of this <code>sap.ui.webc.main.Calendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Calendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setSelectionMode":{"!description":"Sets a new value for property {@link #getSelectionMode selectionMode}.\n\nDefines the type of selection used in the calendar component. Accepted property values are:<br>\n\n<ul> <li><code>CalendarSelectionMode.Single<\/code> - enables a single date selection.(default value)<\/li> <li><code>CalendarSelectionMode.Range<\/code> - enables selection of a date range.<\/li> <li><code>CalendarSelectionMode.Multiple<\/code> - enables selection of multiple dates.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Single<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode?: sap.ui.webc.main.CalendarSelectionMode) -> sap.ui.webc.main.Calendar","parameters":{"sSelectionMode":"type: sap.ui.webc.main.CalendarSelectionMode, description: New value for property <code>selectionMode<\/code>"}},"setSecondaryCalendarType":{"!description":"Sets a new value for property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondaryCalendarType?: sap.ui.core.CalendarType) -> sap.ui.webc.main.Calendar","parameters":{"sSecondaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>secondaryCalendarType<\/code>"}},"addDate":{"!description":"Adds some date to the aggregation {@link #getDates dates}.","!static":false,"!category":"function","!type":"fn(oDate: sap.ui.webc.main.ICalendarDate) -> sap.ui.webc.main.Calendar","parameters":{"oDate":"type: sap.ui.webc.main.ICalendarDate, description: The date to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Calendar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"indexOfDate":{"!description":"Checks for the provided <code>sap.ui.webc.main.ICalendarDate<\/code> in the aggregation {@link #getDates dates}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDate: sap.ui.webc.main.ICalendarDate) -> Number","parameters":{"oDate":"type: sap.ui.webc.main.ICalendarDate, description: The date whose index is looked for"}},"setHideWeekNumbers":{"!description":"Sets a new value for property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideWeekNumbers?: Boolean) -> sap.ui.webc.main.Calendar","parameters":{"bHideWeekNumbers":"type: boolean, description: New value for property <code>hideWeekNumbers<\/code>"}},"!module":"sap/ui/webc/main/Calendar","destroyDates":{"!description":"Destroys all the dates in the aggregation {@link #getDates dates}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Calendar"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setMaxDate":{"!description":"Sets a new value for property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxDate?: String) -> sap.ui.webc.main.Calendar","parameters":{"sMaxDate":"type: string, description: New value for property <code>maxDate<\/code>"}},"fireSelectedDatesChange":{"!description":"Fires event {@link #event:selectedDatesChange selectedDatesChange} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setMinDate":{"!description":"Sets a new value for property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMinDate?: String) -> sap.ui.webc.main.Calendar","parameters":{"sMinDate":"type: string, description: New value for property <code>minDate<\/code>"}}},"sap.ui.webc.main.ComboBoxGroupItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ComboBoxGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ComboBoxGroupItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ComboBoxGroupItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/ComboBoxGroupItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.ComboBoxGroupItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.ToggleButton":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.ToggleButton","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setIconEnd":{"!description":"Sets a new value for property {@link #getIconEnd iconEnd}.\n\nDefines whether the icon should be displayed after the component text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIconEnd?: Boolean) -> sap.ui.webc.main.ToggleButton","parameters":{"bIconEnd":"type: boolean, description: New value for property <code>iconEnd<\/code>"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ToggleButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>ToggleButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibilityAttributes accessibilityAttributes} : object (default: {})<\/li>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getDesign design} : sap.ui.webc.main.ButtonDesign (default: Default)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getIconEnd iconEnd} : boolean (default: false)<\/li>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<li>{@link #getSubmits submits} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.ToggleButton","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getIconEnd":{"!description":"Gets current value of property {@link #getIconEnd iconEnd}.\n\nDefines whether the icon should be displayed after the component text.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSubmits":{"!description":"Gets current value of property {@link #getSubmits submits}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ToggleButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.ToggleButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ToggleButton<\/code> itself.\n\nFired when the component is activated either with a mouse/tap or by using the Enter or Space key. <br> <br> <b>Note:<\/b> The event will not be fired if the <code>disabled<\/code> property is set to <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ToggleButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ToggleButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setPressed":{"!description":"Sets a new value for property {@link #getPressed pressed}.\n\nDetermines whether the component is displayed as pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed?: Boolean) -> sap.ui.webc.main.ToggleButton","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.ToggleButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibilityAttributes":{"!description":"Sets a new value for property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <li><code>controls<\/code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAccessibilityAttributes?: Object) -> sap.ui.webc.main.ToggleButton","parameters":{"oAccessibilityAttributes":"type: object, description: New value for property <code>accessibilityAttributes<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ToggleButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.ToggleButton","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.ToggleButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.ToggleButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ToggleButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getAccessibilityAttributes":{"!description":"Gets current value of property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <li><code>controls<\/code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.<\/li> <\/ul>\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setSubmits":{"!description":"Sets a new value for property {@link #getSubmits submits}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSubmits?: Boolean) -> sap.ui.webc.main.ToggleButton","parameters":{"bSubmits":"type: boolean, description: New value for property <code>submits<\/code>"}},"!module":"sap/ui/webc/main/ToggleButton","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the component design.\n\n<br> <br> <b>The available values are:<\/b>\n\n<ul> <li><code>Default<\/code><\/li> <li><code>Emphasized<\/code><\/li> <li><code>Positive<\/code><\/li> <li><code>Negative<\/code><\/li> <li><code>Transparent<\/code><\/li> <li><code>Attention<\/code><\/li> <\/ul>\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ButtonDesign"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the component design.\n\n<br> <br> <b>The available values are:<\/b>\n\n<ul> <li><code>Default<\/code><\/li> <li><code>Emphasized<\/code><\/li> <li><code>Positive<\/code><\/li> <li><code>Negative<\/code><\/li> <li><code>Transparent<\/code><\/li> <li><code>Attention<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.ButtonDesign) -> sap.ui.webc.main.ToggleButton","parameters":{"sDesign":"type: sap.ui.webc.main.ButtonDesign, description: New value for property <code>design<\/code>"}},"getPressed":{"!description":"Gets current value of property {@link #getPressed pressed}.\n\nDetermines whether the component is displayed as pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.ToggleButton","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.InputType":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Email":{"!description":"Used for input fields that must contain an e-mail address.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Number":{"!description":"Defines a numeric input field.","!category":"enum","!type":"String"},"!category":"static class","Tel":{"!description":"Used for input fields that should contain a telephone number.","!category":"enum","!type":"String"},"Text":{"!description":"Defines a one-line text input field:","!category":"enum","!type":"String"},"URL":{"!description":"Used for input fields that should contain a URL address.","!category":"enum","!type":"String"},"Password":{"!description":"Defines a password field.","!category":"enum","!type":"String"}},"sap.ui.webc.main.SegmentedButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SegmentedButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.SegmentedButton"},"sap.ui.webc.main.IMenuItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.PanelAccessibleRole":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","Form":{"!description":"Represents the ARIA role <code>Form<\/code>. A landmark region that contains a collection of items and objects that, as a whole, create a form.","!category":"enum","!type":"String"},"Region":{"!description":"Represents the ARIA role <code>Region<\/code>. A section of a page, that is important enough to be included in a page summary or table of contents.","!category":"enum","!type":"String"},"!category":"static class","Complementary":{"!description":"Represents the ARIA role <code>complementary<\/code>. A section of the page, designed to be complementary to the main content at a similar level in the DOM hierarchy.","!category":"enum","!type":"String"}},"sap.ui.webc.main.MessageStripDesign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Warning":{"!description":"Message is a warning","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Negative":{"!description":"Message is an error","!category":"enum","!type":"String"},"Positive":{"!description":"Message is a success message","!category":"enum","!type":"String"},"!category":"static class","Information":{"!description":"Message should be just an information","!category":"enum","!type":"String"}},"sap.ui.webc.main.RadioButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.RadioButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.RadioButton"},"sap.ui.webc.main.IColorPaletteItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.IInputSuggestionItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.IInput":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.PopoverVerticalAlign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Center":{"!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Top":{"!description":"Popover will be placed at the top of the reference control.","!category":"enum","!type":"String"},"Stretch":{"!description":"Popover will be streched","!category":"enum","!type":"String"},"Bottom":{"!description":"Popover will be placed at the bottom of the reference control.","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc.main.CheckBox":{"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.CheckBox","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.CheckBox","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A red-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.CheckBox","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"setIndeterminate":{"!description":"Sets a new value for property {@link #getIndeterminate indeterminate}.\n\nDefines whether the component is displayed as partially checked. <br> <br> <b>Note:<\/b> The indeterminate state can be set only programatically and can\u2019t be achieved by user interaction and the resulting visual state depends on the values of the <code>indeterminate<\/code> and <code>checked<\/code> properties: <ul> <li> If the component is checked and indeterminate, it will be displayed as partially checked <li> If the component is checked and it is not indeterminate, it will be displayed as checked <li> If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIndeterminate?: Boolean) -> sap.ui.webc.main.CheckBox","parameters":{"bIndeterminate":"type: boolean, description: New value for property <code>indeterminate<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.CheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.CheckBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getWrappingType":{"!description":"Gets current value of property {@link #getWrappingType wrappingType}.\n\nDefines whether the component text wraps when there is not enough space. <br> <br> Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.WrappingType"},"!constructorDescription":"Constructor for a new <code>CheckBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getChecked checked} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIndeterminate indeterminate} : boolean (default: false)<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWrappingType wrappingType} : sap.ui.webc.main.WrappingType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.CheckBox","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setChecked":{"!description":"Sets a new value for property {@link #getChecked checked}.\n\nDefines if the component is checked. <br> <br> <b>Note:<\/b> The property can be changed with user interaction, either by cliking/tapping on the component, or by pressing the Enter or Space key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bChecked?: Boolean) -> sap.ui.webc.main.CheckBox","parameters":{"bChecked":"type: boolean, description: New value for property <code>checked<\/code>"}},"getIndeterminate":{"!description":"Gets current value of property {@link #getIndeterminate indeterminate}.\n\nDefines whether the component is displayed as partially checked. <br> <br> <b>Note:<\/b> The indeterminate state can be set only programatically and can\u2019t be achieved by user interaction and the resulting visual state depends on the values of the <code>indeterminate<\/code> and <code>checked<\/code> properties: <ul> <li> If the component is checked and indeterminate, it will be displayed as partially checked <li> If the component is checked and it is not indeterminate, it will be displayed as checked <li> If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute <\/ul>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.CheckBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>Warning<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>None<\/code>(default)<\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.CheckBox","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.CheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.CheckBox<\/code> itself.\n\nFired when the component checked state changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.CheckBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.CheckBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.CheckBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A red-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.CheckBox","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.CheckBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CheckBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.CheckBox","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/CheckBox","getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>Warning<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>None<\/code>(default)<\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getChecked":{"!description":"Gets current value of property {@link #getChecked checked}.\n\nDefines if the component is checked. <br> <br> <b>Note:<\/b> The property can be changed with user interaction, either by cliking/tapping on the component, or by pressing the Enter or Space key.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWrappingType":{"!description":"Sets a new value for property {@link #getWrappingType wrappingType}.\n\nDefines whether the component text wraps when there is not enough space. <br> <br> Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sWrappingType?: sap.ui.webc.main.WrappingType) -> sap.ui.webc.main.CheckBox","parameters":{"sWrappingType":"type: sap.ui.webc.main.WrappingType, description: New value for property <code>wrappingType<\/code>"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.CheckBox","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.IIcon":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.TableColumn_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TableColumn"},"sap.ui.webc.main.ToastPlacement":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","TopStart":{"!description":"<code>ui5-toast<\/code> is placed at the <code>TopStart<\/code> position of its container.","!category":"enum","!type":"String"},"BottomCenter":{"!description":"<code>ui5-toast<\/code> is placed at the <code>BottomCenter<\/code> position of its container. Default placement (no selection)","!category":"enum","!type":"String"},"MiddleStart":{"!description":"<code>ui5-toast<\/code> is placed at the <code>MiddleStart<\/code> position of its container.","!category":"enum","!type":"String"},"TopEnd":{"!description":"<code>ui5-toast<\/code> is placed at the <code>TopEnd<\/code> position of its container.","!category":"enum","!type":"String"},"TopCenter":{"!description":"<code>ui5-toast<\/code> is placed at the <code>TopCenter<\/code> position of its container.","!category":"enum","!type":"String"},"BottomStart":{"!description":"<code>ui5-toast<\/code> is placed at the <code>BottomStart<\/code> position of its container.","!category":"enum","!type":"String"},"MiddleEnd":{"!description":"<code>ui5-toast<\/code> is placed at the <code>MiddleEnd<\/code> position of its container.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","MiddleCenter":{"!description":"<code>ui5-toast<\/code> is placed at the <code>MiddleCenter<\/code> position of its container.","!category":"enum","!type":"String"},"!category":"static class","BottomEnd":{"!description":"<code>ui5-toast<\/code> is placed at the <code>BottomEnd<\/code> position of its container.","!category":"enum","!type":"String"}},"sap.ui.webc.main.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Link with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Link"},"sap.ui.webc.main.ResponsivePopover":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setOpen":{"!description":"Sets a new value for property {@link #getOpen open}.\n\nIndicates if the element is open\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bOpen?: Boolean) -> sap.ui.webc.main.ResponsivePopover","parameters":{"bOpen":"type: boolean, description: New value for property <code>open<\/code>"}},"setPlacementType":{"!description":"Sets a new value for property {@link #getPlacementType placementType}.\n\nDetermines on which side the component is placed at. <br> <br> Available options are: <ul> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn(sPlacementType?: sap.ui.webc.main.PopoverPlacementType) -> sap.ui.webc.main.ResponsivePopover","parameters":{"sPlacementType":"type: sap.ui.webc.main.PopoverPlacementType, description: New value for property <code>placementType<\/code>"}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterClose afterClose} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself.\n\nFired after the component is closed. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setInitialFocus":{"!description":"Sets the associated {@link #getInitialFocus initialFocus}.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oInitialFocus":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"addFooter":{"!description":"Adds some footer to the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer to add; if empty, nothing is inserted"}},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.ResponsivePopover","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"setHideBackdrop":{"!description":"Sets a new value for property {@link #getHideBackdrop hideBackdrop}.\n\nDefines whether the block layer will be shown if modal property is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideBackdrop?: Boolean) -> sap.ui.webc.main.ResponsivePopover","parameters":{"bHideBackdrop":"type: boolean, description: New value for property <code>hideBackdrop<\/code>"}},"setAllowTargetOverlap":{"!description":"Sets a new value for property {@link #getAllowTargetOverlap allowTargetOverlap}.\n\nDetermines if there is no enough space, the component can be placed over the target.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAllowTargetOverlap?: Boolean) -> sap.ui.webc.main.ResponsivePopover","parameters":{"bAllowTargetOverlap":"type: boolean, description: New value for property <code>allowTargetOverlap<\/code>"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterClose afterClose} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeFooter":{"!description":"Removes a footer from the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(vFooter: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vFooter":"type: int|string|sap.ui.core.Control, description: The footer to remove or its index or id"}},"fireBeforeOpen":{"!description":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getVerticalAlign":{"!description":"Gets current value of property {@link #getVerticalAlign verticalAlign}.\n\nDetermines the vertical alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.PopoverVerticalAlign"},"getHideArrow":{"!description":"Gets current value of property {@link #getHideArrow hideArrow}.\n\nDetermines whether the component arrow is hidden.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ResponsivePopover"},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nDefines the header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> slot is provided, the <code>headerText<\/code> is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText?: String) -> sap.ui.webc.main.ResponsivePopover","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ResponsivePopover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getModal":{"!description":"Gets current value of property {@link #getModal modal}.\n\nDefines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself.\n\nFired before the component is opened. This event can be cancelled, which will prevent the popup from opening. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setVerticalAlign":{"!description":"Sets a new value for property {@link #getVerticalAlign verticalAlign}.\n\nDetermines the vertical alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn(sVerticalAlign?: sap.ui.webc.main.PopoverVerticalAlign) -> sap.ui.webc.main.ResponsivePopover","parameters":{"sVerticalAlign":"type: sap.ui.webc.main.PopoverVerticalAlign, description: New value for property <code>verticalAlign<\/code>"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"getPlacementType":{"!description":"Gets current value of property {@link #getPlacementType placementType}.\n\nDetermines on which side the component is placed at. <br> <br> Available options are: <ul> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <\/ul>\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.PopoverPlacementType"},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterOpen afterOpen} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ResponsivePopover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeHeader":{"!description":"Removes a header from the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(vHeader: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vHeader":"type: int|string|sap.ui.core.Control, description: The header to remove or its index or id"}},"setHorizontalAlign":{"!description":"Sets a new value for property {@link #getHorizontalAlign horizontalAlign}.\n\nDetermines the horizontal alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn(sHorizontalAlign?: sap.ui.webc.main.PopoverHorizontalAlign) -> sap.ui.webc.main.ResponsivePopover","parameters":{"sHorizontalAlign":"type: sap.ui.webc.main.PopoverHorizontalAlign, description: New value for property <code>horizontalAlign<\/code>"}},"isOpen":{"!description":"Tells if the responsive popover is open","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/webc/main/ResponsivePopover","setModal":{"!description":"Sets a new value for property {@link #getModal modal}.\n\nDefines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bModal?: Boolean) -> sap.ui.webc.main.ResponsivePopover","parameters":{"bModal":"type: boolean, description: New value for property <code>modal<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","indexOfFooter":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getFooter footer}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> Number","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer whose index is looked for"}},"getOpener":{"!description":"ID of the element which is the current target of the association {@link #getOpener opener}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"getPreventFocusRestore":{"!description":"Gets current value of property {@link #getPreventFocusRestore preventFocusRestore}.\n\nDefines if the focus should be returned to the previously focused element, when the popup closes.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"showAt":{"!description":"Shows popover on desktop and dialog on mobile.","!static":false,"!category":"function","!type":"fn(opener: HTMLElement, preventInitialFocus: Boolean)","parameters":{"preventInitialFocus":"type: boolean, description: Prevents applying the focus inside the popup","opener":"type: HTMLElement, description: the element that the popover is shown at"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getOpen":{"!description":"Gets current value of property {@link #getOpen open}.\n\nIndicates if the element is open\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the Popup.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterOpen afterOpen} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself.\n\nFired after the component is opened. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHideBackdrop":{"!description":"Gets current value of property {@link #getHideBackdrop hideBackdrop}.\n\nDefines whether the block layer will be shown if modal property is set to true.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","destroyFooter":{"!description":"Destroys all the footer in the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ResponsivePopover"},"getInitialFocus":{"!description":"ID of the element which is the current target of the association {@link #getInitialFocus initialFocus}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"fireBeforeClose":{"!description":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the header HTML Element.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.\n\nDefines the header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> slot is provided, the <code>headerText<\/code> is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"insertFooter":{"!description":"Inserts a footer into the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.ResponsivePopover","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the footer should be inserted at; for a negative value of <code>iIndex<\/code>, the footer is inserted at position 0; for a value greater than the current size of the aggregation, the footer is inserted at the last position","oFooter":"type: sap.ui.core.Control, description: The footer to insert; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new <code>ResponsivePopover<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getAllowTargetOverlap allowTargetOverlap} : boolean (default: false)<\/li>\n<li>{@link #getHeaderText headerText} : string (default: \"\")<\/li>\n<li>{@link #getHideArrow hideArrow} : boolean (default: false)<\/li>\n<li>{@link #getHideBackdrop hideBackdrop} : boolean (default: false)<\/li>\n<li>{@link #getHorizontalAlign horizontalAlign} : sap.ui.webc.main.PopoverHorizontalAlign (default: Center)<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getOpen open} : boolean (default: false)<\/li>\n<li>{@link #getPlacementType placementType} : sap.ui.webc.main.PopoverPlacementType (default: Right)<\/li>\n<li>{@link #getPreventFocusRestore preventFocusRestore} : boolean (default: false)<\/li>\n<li>{@link #getVerticalAlign verticalAlign} : sap.ui.webc.main.PopoverVerticalAlign (default: Center)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control[]<\/li>\n<li>{@link #getHeader header} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getOpener opener} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.ResponsivePopover","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"removeAllFooter":{"!description":"Removes all the controls from the aggregation {@link #getFooter footer}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAllowTargetOverlap":{"!description":"Gets current value of property {@link #getAllowTargetOverlap allowTargetOverlap}.\n\nDetermines if there is no enough space, the component can be placed over the target.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"close":{"!description":"Closes the popover/dialog.","!static":false,"!category":"function","!type":"fn()"},"setHideArrow":{"!description":"Sets a new value for property {@link #getHideArrow hideArrow}.\n\nDetermines whether the component arrow is hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideArrow?: Boolean) -> sap.ui.webc.main.ResponsivePopover","parameters":{"bHideArrow":"type: boolean, description: New value for property <code>hideArrow<\/code>"}},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"addHeader":{"!description":"Adds some header to the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to add; if empty, nothing is inserted"}},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\nDefines the footer HTML Element.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setPreventFocusRestore":{"!description":"Sets a new value for property {@link #getPreventFocusRestore preventFocusRestore}.\n\nDefines if the focus should be returned to the previously focused element, when the popup closes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreventFocusRestore?: Boolean) -> sap.ui.webc.main.ResponsivePopover","parameters":{"bPreventFocusRestore":"type: boolean, description: New value for property <code>preventFocusRestore<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setOpener":{"!description":"Sets the associated {@link #getOpener opener}.","!static":false,"!category":"function","!type":"fn(oOpener: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oOpener":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this opener association; alternatively, an element instance may be given"}},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeClose beforeClose} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeAllHeader":{"!description":"Removes all the controls from the aggregation {@link #getHeader header}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeClose beforeClose} event of this <code>sap.ui.webc.main.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself.\n\nFired before the component is closed. This event can be cancelled, which will prevent the popup from closing. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ResponsivePopover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHorizontalAlign":{"!description":"Gets current value of property {@link #getHorizontalAlign horizontalAlign}.\n\nDetermines the horizontal alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.PopoverHorizontalAlign"},"destroyHeader":{"!description":"Destroys all the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ResponsivePopover"},"fireAfterClose":{"!description":"Fires event {@link #event:afterClose afterClose} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ResponsivePopover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertHeader":{"!description":"Inserts a header into the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.ResponsivePopover","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the header should be inserted at; for a negative value of <code>iIndex<\/code>, the header is inserted at position 0; for a value greater than the current size of the aggregation, the header is inserted at the last position"}},"applyFocus":{"!description":"Focuses the element denoted by <code>initialFocus<\/code>, if provided, or the first focusable element otherwise.","!static":false,"!category":"function","!type":"fn()"},"indexOfHeader":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeader header}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> Number","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header whose index is looked for"}}},"sap.ui.webc.main.ComboBoxGroupItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ComboBoxGroupItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ComboBoxGroupItem"},"sap.ui.webc.main.SplitButton":{"!proto":"sap.ui.webc.common.WebComponent","!category":"class","detachArrowClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:arrowClick arrowClick} event of this <code>sap.ui.webc.main.SplitButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SplitButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.SplitButton","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"fireArrowClick":{"!description":"Fires event {@link #event:arrowClick arrowClick} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.SplitButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.SplitButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>SplitButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getActiveIcon activeIcon} : string (default: \"\")<\/li>\n<li>{@link #getDesign design} : sap.ui.webc.main.ButtonDesign (default: Default)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:arrowClick arrowClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","setActiveIcon":{"!description":"Sets a new value for property {@link #getActiveIcon activeIcon}.\n\nDefines the icon to be displayed in active state as graphical element within the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sActiveIcon?: String) -> sap.ui.webc.main.SplitButton","parameters":{"sActiveIcon":"type: string, description: New value for property <code>activeIcon<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getActiveIcon":{"!description":"Gets current value of property {@link #getActiveIcon activeIcon}.\n\nDefines the icon to be displayed in active state as graphical element within the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.SplitButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.SplitButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.SplitButton<\/code> itself.\n\nFired when the user clicks on the default action.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SplitButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.SplitButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SplitButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.SplitButton","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.SplitButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.SplitButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SplitButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!module":"sap/ui/webc/main/SplitButton","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the component design.\n\n<br> <br> <b>The available values are:<\/b>\n\n<ul> <li><code>Default<\/code><\/li> <li><code>Emphasized<\/code><\/li> <li><code>Positive<\/code><\/li> <li><code>Negative<\/code><\/li> <li><code>Transparent<\/code><\/li> <li><code>Attention<\/code><\/li> <\/ul>\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ButtonDesign"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the component design.\n\n<br> <br> <b>The available values are:<\/b>\n\n<ul> <li><code>Default<\/code><\/li> <li><code>Emphasized<\/code><\/li> <li><code>Positive<\/code><\/li> <li><code>Negative<\/code><\/li> <li><code>Transparent<\/code><\/li> <li><code>Attention<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.ButtonDesign) -> sap.ui.webc.main.SplitButton","parameters":{"sDesign":"type: sap.ui.webc.main.ButtonDesign, description: New value for property <code>design<\/code>"}},"attachArrowClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:arrowClick arrowClick} event of this <code>sap.ui.webc.main.SplitButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.SplitButton<\/code> itself.\n\nFired when the user clicks on the arrow action.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SplitButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.SplitButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.SplitButton","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.FileUploader_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.FileUploader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.FileUploader"},"sap.ui.webc.main.Badge_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Badge with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Badge"},"sap.ui.webc.main.ProgressIndicator":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ProgressIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.ProgressIndicator","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setDisplayValue":{"!description":"Sets a new value for property {@link #getDisplayValue displayValue}.\n\nSpecifies the text value to be displayed in the bar.\n\n<b>Note:<\/b> <ul> <li>If there is no value provided or the value is empty, the default percentage value is shown.<\/li> <li>If <code>hideValue<\/code> property is <code>true<\/code> both the <code>displayValue<\/code> and <code>value<\/code> property values are not shown.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.ui.webc.main.ProgressIndicator","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.ProgressIndicator","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ProgressIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getHideValue":{"!description":"Gets current value of property {@link #getHideValue hideValue}.\n\nDefines whether the component value is shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nSpecifies the numerical value in percent for the length of the component.\n\n<b>Note:<\/b> If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.ProgressIndicator","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new <code>ProgressIndicator<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHideValue hideValue} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : int (default: 0)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/ProgressIndicator","getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setHideValue":{"!description":"Sets a new value for property {@link #getHideValue hideValue}.\n\nDefines whether the component value is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideValue?: Boolean) -> sap.ui.webc.main.ProgressIndicator","parameters":{"bHideValue":"type: boolean, description: New value for property <code>hideValue<\/code>"}},"getDisplayValue":{"!description":"Gets current value of property {@link #getDisplayValue displayValue}.\n\nSpecifies the text value to be displayed in the bar.\n\n<b>Note:<\/b> <ul> <li>If there is no value provided or the value is empty, the default percentage value is shown.<\/li> <li>If <code>hideValue<\/code> property is <code>true<\/code> both the <code>displayValue<\/code> and <code>value<\/code> property values are not shown.<\/li> <\/ul>","!static":false,"!category":"function","!type":"fn() -> String"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nSpecifies the numerical value in percent for the length of the component.\n\n<b>Note:<\/b> If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iValue?: Number) -> sap.ui.webc.main.ProgressIndicator","parameters":{"iValue":"type: int, description: New value for property <code>value<\/code>"}}},"sap.ui.webc.main.CalendarSelectionMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Multiple":{"!description":"Several dates can be selected","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Single":{"!description":"Only one date can be selected at a time","!category":"enum","!type":"String"},"!category":"static class","Range":{"!description":"A range defined by a start date and an end date can be selected","!category":"enum","!type":"String"}},"sap.ui.webc.main.MultiComboBoxItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MultiComboBoxItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.MultiComboBoxItem"},"sap.ui.webc.main.Popover":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setOpen":{"!description":"Sets a new value for property {@link #getOpen open}.\n\nIndicates if the element is open\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bOpen?: Boolean) -> sap.ui.webc.main.Popover","parameters":{"bOpen":"type: boolean, description: New value for property <code>open<\/code>"}},"setPlacementType":{"!description":"Sets a new value for property {@link #getPlacementType placementType}.\n\nDetermines on which side the component is placed at. <br> <br> Available options are: <ul> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn(sPlacementType?: sap.ui.webc.main.PopoverPlacementType) -> sap.ui.webc.main.Popover","parameters":{"sPlacementType":"type: sap.ui.webc.main.PopoverPlacementType, description: New value for property <code>placementType<\/code>"}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterClose afterClose} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Popover<\/code> itself.\n\nFired after the component is closed. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Popover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setInitialFocus":{"!description":"Sets the associated {@link #getInitialFocus initialFocus}.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Popover","parameters":{"oInitialFocus":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"addFooter":{"!description":"Adds some footer to the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> sap.ui.webc.main.Popover","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer to add; if empty, nothing is inserted"}},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.Popover","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"setHideBackdrop":{"!description":"Sets a new value for property {@link #getHideBackdrop hideBackdrop}.\n\nDefines whether the block layer will be shown if modal property is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideBackdrop?: Boolean) -> sap.ui.webc.main.Popover","parameters":{"bHideBackdrop":"type: boolean, description: New value for property <code>hideBackdrop<\/code>"}},"setAllowTargetOverlap":{"!description":"Sets a new value for property {@link #getAllowTargetOverlap allowTargetOverlap}.\n\nDetermines if there is no enough space, the component can be placed over the target.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAllowTargetOverlap?: Boolean) -> sap.ui.webc.main.Popover","parameters":{"bAllowTargetOverlap":"type: boolean, description: New value for property <code>allowTargetOverlap<\/code>"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterClose afterClose} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeFooter":{"!description":"Removes a footer from the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(vFooter: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vFooter":"type: int|string|sap.ui.core.Control, description: The footer to remove or its index or id"}},"fireBeforeOpen":{"!description":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getVerticalAlign":{"!description":"Gets current value of property {@link #getVerticalAlign verticalAlign}.\n\nDetermines the vertical alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.PopoverVerticalAlign"},"getHideArrow":{"!description":"Gets current value of property {@link #getHideArrow hideArrow}.\n\nDetermines whether the component arrow is hidden.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Popover"},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nDefines the header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> slot is provided, the <code>headerText<\/code> is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText?: String) -> sap.ui.webc.main.Popover","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Popover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Popover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getModal":{"!description":"Gets current value of property {@link #getModal modal}.\n\nDefines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Popover<\/code> itself.\n\nFired before the component is opened. This event can be cancelled, which will prevent the popup from opening. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Popover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setVerticalAlign":{"!description":"Sets a new value for property {@link #getVerticalAlign verticalAlign}.\n\nDetermines the vertical alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn(sVerticalAlign?: sap.ui.webc.main.PopoverVerticalAlign) -> sap.ui.webc.main.Popover","parameters":{"sVerticalAlign":"type: sap.ui.webc.main.PopoverVerticalAlign, description: New value for property <code>verticalAlign<\/code>"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Popover","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"getPlacementType":{"!description":"Gets current value of property {@link #getPlacementType placementType}.\n\nDetermines on which side the component is placed at. <br> <br> Available options are: <ul> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <\/ul>\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.PopoverPlacementType"},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterOpen afterOpen} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Popover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeHeader":{"!description":"Removes a header from the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(vHeader: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vHeader":"type: int|string|sap.ui.core.Control, description: The header to remove or its index or id"}},"setHorizontalAlign":{"!description":"Sets a new value for property {@link #getHorizontalAlign horizontalAlign}.\n\nDetermines the horizontal alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn(sHorizontalAlign?: sap.ui.webc.main.PopoverHorizontalAlign) -> sap.ui.webc.main.Popover","parameters":{"sHorizontalAlign":"type: sap.ui.webc.main.PopoverHorizontalAlign, description: New value for property <code>horizontalAlign<\/code>"}},"isOpen":{"!description":"Tells if the component is opened","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/webc/main/Popover","setModal":{"!description":"Sets a new value for property {@link #getModal modal}.\n\nDefines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bModal?: Boolean) -> sap.ui.webc.main.Popover","parameters":{"bModal":"type: boolean, description: New value for property <code>modal<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","indexOfFooter":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getFooter footer}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> Number","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer whose index is looked for"}},"getOpener":{"!description":"ID of the element which is the current target of the association {@link #getOpener opener}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Popover","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"getPreventFocusRestore":{"!description":"Gets current value of property {@link #getPreventFocusRestore preventFocusRestore}.\n\nDefines if the focus should be returned to the previously focused element, when the popup closes.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"showAt":{"!description":"Shows the popover.","!static":false,"!category":"function","!type":"fn(opener: HTMLElement, preventInitialFocus: Boolean)","parameters":{"preventInitialFocus":"type: boolean, description: prevents applying the focus inside the popover","opener":"type: HTMLElement, description: the element that the popover is shown at"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getOpen":{"!description":"Gets current value of property {@link #getOpen open}.\n\nIndicates if the element is open\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the Popup.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterOpen afterOpen} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Popover<\/code> itself.\n\nFired after the component is opened. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Popover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHideBackdrop":{"!description":"Gets current value of property {@link #getHideBackdrop hideBackdrop}.\n\nDefines whether the block layer will be shown if modal property is set to true.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"destroyFooter":{"!description":"Destroys all the footer in the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Popover"},"getInitialFocus":{"!description":"ID of the element which is the current target of the association {@link #getInitialFocus initialFocus}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"fireBeforeClose":{"!description":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the header HTML Element.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.\n\nDefines the header text. <br> <br> <b>Note:<\/b> If <code>header<\/code> slot is provided, the <code>headerText<\/code> is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"insertFooter":{"!description":"Inserts a footer into the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Popover","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the footer should be inserted at; for a negative value of <code>iIndex<\/code>, the footer is inserted at position 0; for a value greater than the current size of the aggregation, the footer is inserted at the last position","oFooter":"type: sap.ui.core.Control, description: The footer to insert; if empty, nothing is inserted"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Popover<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getAllowTargetOverlap allowTargetOverlap} : boolean (default: false)<\/li>\n<li>{@link #getHeaderText headerText} : string (default: \"\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHideArrow hideArrow} : boolean (default: false)<\/li>\n<li>{@link #getHideBackdrop hideBackdrop} : boolean (default: false)<\/li>\n<li>{@link #getHorizontalAlign horizontalAlign} : sap.ui.webc.main.PopoverHorizontalAlign (default: Center)<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getOpen open} : boolean (default: false)<\/li>\n<li>{@link #getPlacementType placementType} : sap.ui.webc.main.PopoverPlacementType (default: Right)<\/li>\n<li>{@link #getPreventFocusRestore preventFocusRestore} : boolean (default: false)<\/li>\n<li>{@link #getVerticalAlign verticalAlign} : sap.ui.webc.main.PopoverVerticalAlign (default: Center)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control[]<\/li>\n<li>{@link #getHeader header} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getOpener opener} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Popover","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"removeAllFooter":{"!description":"Removes all the controls from the aggregation {@link #getFooter footer}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAllowTargetOverlap":{"!description":"Gets current value of property {@link #getAllowTargetOverlap allowTargetOverlap}.\n\nDetermines if there is no enough space, the component can be placed over the target.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"close":{"!description":"Hides the block layer (for modal popups only)","!static":false,"!category":"function","!type":"fn()"},"setHideArrow":{"!description":"Sets a new value for property {@link #getHideArrow hideArrow}.\n\nDetermines whether the component arrow is hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideArrow?: Boolean) -> sap.ui.webc.main.Popover","parameters":{"bHideArrow":"type: boolean, description: New value for property <code>hideArrow<\/code>"}},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeOpen beforeOpen} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"addHeader":{"!description":"Adds some header to the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.webc.main.Popover","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to add; if empty, nothing is inserted"}},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\nDefines the footer HTML Element.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setPreventFocusRestore":{"!description":"Sets a new value for property {@link #getPreventFocusRestore preventFocusRestore}.\n\nDefines if the focus should be returned to the previously focused element, when the popup closes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreventFocusRestore?: Boolean) -> sap.ui.webc.main.Popover","parameters":{"bPreventFocusRestore":"type: boolean, description: New value for property <code>preventFocusRestore<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setOpener":{"!description":"Sets the associated {@link #getOpener opener}.","!static":false,"!category":"function","!type":"fn(oOpener: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Popover","parameters":{"oOpener":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this opener association; alternatively, an element instance may be given"}},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeClose beforeClose} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.Popover","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Popover","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeAllHeader":{"!description":"Removes all the controls from the aggregation {@link #getHeader header}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeClose beforeClose} event of this <code>sap.ui.webc.main.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Popover<\/code> itself.\n\nFired before the component is closed. This event can be cancelled, which will prevent the popup from closing. <b>This event does not bubble.<\/b>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Popover<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHorizontalAlign":{"!description":"Gets current value of property {@link #getHorizontalAlign horizontalAlign}.\n\nDetermines the horizontal alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>\n\nDefault value is <code>Center<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.PopoverHorizontalAlign"},"destroyHeader":{"!description":"Destroys all the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Popover"},"fireAfterClose":{"!description":"Fires event {@link #event:afterClose afterClose} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Popover","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"insertHeader":{"!description":"Inserts a header into the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Popover","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the header should be inserted at; for a negative value of <code>iIndex<\/code>, the header is inserted at position 0; for a value greater than the current size of the aggregation, the header is inserted at the last position"}},"applyFocus":{"!description":"Focuses the element denoted by <code>initialFocus<\/code>, if provided, or the first focusable element otherwise.","!static":false,"!category":"function","!type":"fn()"},"indexOfHeader":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeader header}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> Number","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header whose index is looked for"}}},"sap.ui.webc.main.MultiComboBoxItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nDefines the additional text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.MultiComboBoxItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines the selected state of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.MultiComboBoxItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MultiComboBoxItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines the selected state of the component.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>MultiComboBoxItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAdditionalText additionalText} : string (default: \"\")<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/MultiComboBoxItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nDefines the additional text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalText?: String) -> sap.ui.webc.main.MultiComboBoxItem","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.MultiComboBoxItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.RangeSlider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.RangeSlider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.RangeSlider"},"sap.ui.webc.main.Card":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component, which is used as the name of the card region and should be unique per card. <b>Note:<\/b> <code>accessibleName<\/code> should be always set, unless <code>ariaLabelledBy<\/code> is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.Card","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the header of the component. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.CardHeader<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Card<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getHeader header} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Card","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Card"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"addHeader":{"!description":"Adds some header to the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.webc.main.Card","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Card.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible name of the component, which is used as the name of the card region and should be unique per card. <b>Note:<\/b> <code>accessibleName<\/code> should be always set, unless <code>ariaLabelledBy<\/code> is set.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.Card","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Card","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Card","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeAllHeader":{"!description":"Removes all the controls from the aggregation {@link #getHeader header}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Card with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeHeader":{"!description":"Removes a header from the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(vHeader: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vHeader":"type: int|string|sap.ui.core.Control, description: The header to remove or its index or id"}},"!module":"sap/ui/webc/main/Card","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","destroyHeader":{"!description":"Destroys all the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Card"},"insertHeader":{"!description":"Inserts a header into the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Card","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the header should be inserted at; for a negative value of <code>iIndex<\/code>, the header is inserted at position 0; for a value greater than the current size of the aggregation, the header is inserted at the last position"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Card","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"indexOfHeader":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeader header}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> Number","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header whose index is looked for"}}},"sap.ui.webc.main.TableRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TableRow"},"sap.ui.webc.main.ITableRow":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.ColorPalettePopover_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPalettePopover with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ColorPalettePopover"},"sap.ui.webc.main.Tree_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Tree with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Tree"},"sap.ui.webc.main.SegmentedButton":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.ISegmentedButtonItem) -> sap.ui.webc.main.ISegmentedButtonItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.ISegmentedButtonItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.SegmentedButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.SegmentedButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.webc.common.WebComponent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.SegmentedButton"},"!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.SegmentedButton","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ISegmentedButtonItem]"},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.SegmentedButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SegmentedButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ISegmentedButtonItem) -> sap.ui.webc.main.SegmentedButton","parameters":{"oItem":"type: sap.ui.webc.main.ISegmentedButtonItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the items of <code>sap.ui.webc.main.SegmentedButton<\/code>. <br> <br> <b>Note:<\/b> Multiple items are allowed. <br> <br> <b>Note:<\/b> Use the <code>sap.ui.webc.main.SegmentedButtonItem<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ISegmentedButtonItem]"},"!constructorDescription":"Constructor for a new <code>SegmentedButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.webc.main.ISegmentedButtonItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/SegmentedButton","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.ISegmentedButtonItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ISegmentedButtonItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.ISegmentedButtonItem, description: The item whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.SegmentedButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SegmentedButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getFormDoNotAdjustWidth":{"!description":"<code>SegmentedButton<\/code> must not be stretched in Form because ResizeHandler is used internally in order to manage the width of the SegmentedButton depending on the container size","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.SegmentedButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.SegmentedButton<\/code> itself.\n\nFired when the selected item changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.SegmentedButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.SegmentedButton<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ISegmentedButtonItem, iIndex: Number) -> sap.ui.webc.main.SegmentedButton","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.ISegmentedButtonItem, description: The item to insert; if empty, nothing is inserted"}},"getSelectedItem":{"!description":"Returns the currently selected item.","!static":false,"!category":"function","!type":"fn()"}},"sap.ui.webc.main.Breadcrumbs":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.IBreadcrumbsItem) -> sap.ui.webc.main.IBreadcrumbsItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.IBreadcrumbsItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Breadcrumbs.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.webc.common.WebComponent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Breadcrumbs"},"!category":"class","attachItemClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.Breadcrumbs<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Breadcrumbs<\/code> itself.\n\nFires when a <code>BreadcrumbsItem<\/code> is clicked. <b>Note:<\/b> You can prevent browser location change by calling <code>event.preventDefault()<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Breadcrumbs","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Breadcrumbs<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IBreadcrumbsItem]"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Breadcrumbs with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IBreadcrumbsItem) -> sap.ui.webc.main.Breadcrumbs","parameters":{"oItem":"type: sap.ui.webc.main.IBreadcrumbsItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the component items.\n\n<br> <br> <b>Note:<\/b> Use the <code>sap.ui.webc.main.BreadcrumbsItem<\/code> component to define the desired items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IBreadcrumbsItem]"},"detachItemClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.Breadcrumbs<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Breadcrumbs","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>Breadcrumbs<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDesign design} : sap.ui.webc.main.BreadcrumbsDesign (default: Standard)<\/li>\n<li>{@link #getSeparatorStyle separatorStyle} : sap.ui.webc.main.BreadcrumbsSeparatorStyle (default: Slash)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.webc.main.IBreadcrumbsItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClick itemClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Breadcrumbs","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the visual indication and behavior of the breadcrumbs. Available options are <code>Standard<\/code> (by default) and <code>NoCurrentPage<\/code>. <br> <br> <b>Note:<\/b> The <code>Standard<\/code> breadcrumbs show the current page as the last item in the trail. The last item contains only plain text and is not a link.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.BreadcrumbsDesign"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IBreadcrumbsItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IBreadcrumbsItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.IBreadcrumbsItem, description: The item whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the visual indication and behavior of the breadcrumbs. Available options are <code>Standard<\/code> (by default) and <code>NoCurrentPage<\/code>. <br> <br> <b>Note:<\/b> The <code>Standard<\/code> breadcrumbs show the current page as the last item in the trail. The last item contains only plain text and is not a link.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.BreadcrumbsDesign) -> sap.ui.webc.main.Breadcrumbs","parameters":{"sDesign":"type: sap.ui.webc.main.BreadcrumbsDesign, description: New value for property <code>design<\/code>"}},"fireItemClick":{"!description":"Fires event {@link #event:itemClick itemClick} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getSeparatorStyle":{"!description":"Gets current value of property {@link #getSeparatorStyle separatorStyle}.\n\nDetermines the visual style of the separator between the breadcrumb items.\n\n<br> <br> Available options are: <ul> <li><code>Slash<\/code><\/li> <li><code>BackSlash<\/code><\/li> <li><code>DoubleBackSlash<\/code><\/li> <li><code>DoubleGreaterThan<\/code><\/li> <li><code>DoubleSlash<\/code><\/li> <li><code>GreaterThan<\/code><\/li> <\/ul>\n\nDefault value is <code>Slash<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.BreadcrumbsSeparatorStyle"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IBreadcrumbsItem, iIndex: Number) -> sap.ui.webc.main.Breadcrumbs","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.IBreadcrumbsItem, description: The item to insert; if empty, nothing is inserted"}},"setSeparatorStyle":{"!description":"Sets a new value for property {@link #getSeparatorStyle separatorStyle}.\n\nDetermines the visual style of the separator between the breadcrumb items.\n\n<br> <br> Available options are: <ul> <li><code>Slash<\/code><\/li> <li><code>BackSlash<\/code><\/li> <li><code>DoubleBackSlash<\/code><\/li> <li><code>DoubleGreaterThan<\/code><\/li> <li><code>DoubleSlash<\/code><\/li> <li><code>GreaterThan<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Slash<\/code>.","!static":false,"!category":"function","!type":"fn(sSeparatorStyle?: sap.ui.webc.main.BreadcrumbsSeparatorStyle) -> sap.ui.webc.main.Breadcrumbs","parameters":{"sSeparatorStyle":"type: sap.ui.webc.main.BreadcrumbsSeparatorStyle, description: New value for property <code>separatorStyle<\/code>"}}},"sap.ui.webc.main.TextArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TextArea with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TextArea"},"sap.ui.webc.main.Select_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Select with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Select"},"sap.ui.webc.main.DateTimePicker":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getSecondaryCalendarType":{"!description":"Gets current value of property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.DateTimePicker","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the aria-label attribute for the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.DateTimePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateTimePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getPrimaryCalendarType":{"!description":"Gets current value of property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setPrimaryCalendarType":{"!description":"Sets a new value for property {@link #getPrimaryCalendarType primaryCalendarType}.\n\nSets a calendar type used for display. If not set, the calendar type of the global configuration is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrimaryCalendarType: sap.ui.core.CalendarType) -> sap.ui.webc.main.DateTimePicker","parameters":{"sPrimaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>primaryCalendarType<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.DateTimePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the aria-label attribute for the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.DateTimePicker","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"closePicker":{"!description":"Closes the picker.","!static":false,"!category":"function","!type":"fn()"},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.DateTimePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateTimePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.DateTimePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.DateTimePicker<\/code> itself.\n\nFired when the input operation has finished by pressing Enter or on focusout.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateTimePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.DateTimePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDetermines whether the component is displayed as read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.DateTimePicker","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.DateTimePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.DateTimePicker","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setHideWeekNumbers":{"!description":"Sets a new value for property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideWeekNumbers?: Boolean) -> sap.ui.webc.main.DateTimePicker","parameters":{"bHideWeekNumbers":"type: boolean, description: New value for property <code>hideWeekNumbers<\/code>"}},"isOpen":{"!description":"Checks if the picker is open.","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/webc/main/DateTimePicker","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getDateValue":{"!description":"Returns the currently selected date represented as a Local JavaScript Date instance.","!static":false,"!category":"function","!type":"fn()"},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"setFormatPattern":{"!description":"Sets a new value for property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFormatPattern?: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sFormatPattern":"type: string, description: New value for property <code>formatPattern<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMinDate":{"!description":"Gets current value of property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHideWeekNumbers":{"!description":"Gets current value of property {@link #getHideWeekNumbers hideWeekNumbers}.\n\nDefines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>DateTimePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getFormatPattern formatPattern} : string (default: \"\")<\/li>\n<li>{@link #getHideWeekNumbers hideWeekNumbers} : boolean (default: false)<\/li>\n<li>{@link #getMaxDate maxDate} : string (default: \"\")<\/li>\n<li>{@link #getMinDate minDate} : string (default: \"\")<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: undefined)<\/li>\n<li>{@link #getPrimaryCalendarType primaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType (default: undefined)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.DateTimePicker","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"formatValue":{"!description":"Formats a Java Script date object into a string representing a locale date according to the <code>formatPattern<\/code> property of the DatePicker instance","!static":false,"!category":"function","!type":"fn(date: Object)","parameters":{"date":"type: object, description: A Java Script date object to be formatted as string"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormatPattern":{"!description":"Gets current value of property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"isValid":{"!description":"Checks if a value is valid against the current date format of the DatePicker.","!static":false,"!category":"function","!type":"fn(value: String)","parameters":{"value":"type: string, description: A value to be tested against the current date format"}},"getMaxDate":{"!description":"Gets current value of property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setSecondaryCalendarType":{"!description":"Sets a new value for property {@link #getSecondaryCalendarType secondaryCalendarType}.\n\nDefines the secondary calendar type. If not set, the calendar will only show the primary calendar type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sSecondaryCalendarType?: sap.ui.core.CalendarType) -> sap.ui.webc.main.DateTimePicker","parameters":{"sSecondaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>secondaryCalendarType<\/code>"}},"isInValidRange":{"!description":"Checks if a date is between the minimum and maximum date.","!static":false,"!category":"function","!type":"fn(value: String)","parameters":{"value":"type: string, description: A value to be checked"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.DateTimePicker","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines a formatted date value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setMaxDate":{"!description":"Sets a new value for property {@link #getMaxDate maxDate}.\n\nDetermines the maximum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxDate?: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sMaxDate":"type: string, description: New value for property <code>maxDate<\/code>"}},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines a formatted date value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.DateTimePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.DateTimePicker<\/code> itself.\n\nFired when the value of the component is changed at each key stroke.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.DateTimePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.DateTimePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"openPicker":{"!description":"Opens the picker.","!static":false,"!category":"function","!type":"fn()"},"setMinDate":{"!description":"Sets a new value for property {@link #getMinDate minDate}.\n\nDetermines the minimum date available for selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sMinDate?: String) -> sap.ui.webc.main.DateTimePicker","parameters":{"sMinDate":"type: string, description: New value for property <code>minDate<\/code>"}}},"sap.ui.webc.main.Input":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.Input","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.Input","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Input","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfIcon":{"!description":"Checks for the provided <code>sap.ui.webc.main.IIcon<\/code> in the aggregation {@link #getIcon icon}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> Number","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon whose index is looked for"}},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.Input","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"setShowClearIcon":{"!description":"Sets a new value for property {@link #getShowClearIcon showClearIcon}.\n\nDefines whether the clear icon of the input will be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowClearIcon?: Boolean) -> sap.ui.webc.main.Input","parameters":{"bShowClearIcon":"type: boolean, description: New value for property <code>showClearIcon<\/code>"}},"getShowSuggestions":{"!description":"Gets current value of property {@link #getShowSuggestions showSuggestions}.\n\nDefines whether the component should show suggestions, if such are present. <br> <br> <b>Note:<\/b> You need to import the <code>InputSuggestions<\/code> module from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"<\/code> to enable this functionality.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getPreviewItem":{"!description":"Returns the the suggestion item on preview.","!static":false,"!category":"function","!type":"fn()"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Input.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.Input","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"addSuggestionItem":{"!description":"Adds some suggestionItem to the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.webc.main.IInputSuggestionItem) -> sap.ui.webc.main.Input","parameters":{"oSuggestionItem":"type: sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem to add; if empty, nothing is inserted"}},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Input<\/code> itself.\n\nFired when the input operation has finished by pressing Enter or on focusout.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Input<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachSuggestionItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggestionItemSelect suggestionItemSelect} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Input<\/code> itself.\n\nFired when a suggestion item, that is displayed in the suggestion popup, is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Input<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Input","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.Input","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Input with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Input","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/Input","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the HTML type of the component. Available options are: <code>Text<\/code>, <code>Email<\/code>, <code>Number<\/code>, <code>Password<\/code>, <code>Tel<\/code>, and <code>URL<\/code>. <br> <br> <b>Notes:<\/b> <ul> <li>The particular effect of this property differs depending on the browser and the current language settings, especially for type <code>Number<\/code>.<\/li> <li>The property is mostly intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<\/li> <\/ul>\n\nDefault value is <code>Text<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.InputType"},"setShowSuggestions":{"!description":"Sets a new value for property {@link #getShowSuggestions showSuggestions}.\n\nDefines whether the component should show suggestions, if such are present. <br> <br> <b>Note:<\/b> You need to import the <code>InputSuggestions<\/code> module from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"<\/code> to enable this functionality.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSuggestions?: Boolean) -> sap.ui.webc.main.Input","parameters":{"bShowSuggestions":"type: boolean, description: New value for property <code>showSuggestions<\/code>"}},"removeSuggestionItem":{"!description":"Removes a suggestionItem from the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(vSuggestionItem: Number | String | sap.ui.webc.main.IInputSuggestionItem) -> sap.ui.webc.main.IInputSuggestionItem | null","parameters":{"vSuggestionItem":"type: int|string|sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem to remove or its index or id"}},"setMaxlength":{"!description":"Sets a new value for property {@link #getMaxlength maxlength}.\n\nSets the maximum number of characters available in the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaxlength: Number) -> sap.ui.webc.main.Input","parameters":{"iMaxlength":"type: int, description: New value for property <code>maxlength<\/code>"}},"getSuggestionItems":{"!description":"Gets content of aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IInputSuggestionItem]"},"addIcon":{"!description":"Adds some icon to the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> sap.ui.webc.main.Input","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to add; if empty, nothing is inserted"}},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.Input","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"destroyIcon":{"!description":"Destroys all the icon in the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Input"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"insertIcon":{"!description":"Inserts a icon into the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon, iIndex: Number) -> sap.ui.webc.main.Input","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the icon should be inserted at; for a negative value of <code>iIndex<\/code>, the icon is inserted at position 0; for a value greater than the current size of the aggregation, the icon is inserted at the last position"}},"insertSuggestionItem":{"!description":"Inserts a suggestionItem into the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.webc.main.IInputSuggestionItem, iIndex: Number) -> sap.ui.webc.main.Input","parameters":{"oSuggestionItem":"type: sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex<\/code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position"}},"fireSuggestionItemPreview":{"!description":"Fires event {@link #event:suggestionItemPreview suggestionItemPreview} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Input","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.webc.common.WebComponent","getMaxlength":{"!description":"Gets current value of property {@link #getMaxlength maxlength}.\n\nSets the maximum number of characters available in the input field.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAllIcon":{"!description":"Removes all the controls from the aggregation {@link #getIcon icon}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IIcon]"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachSuggestionItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggestionItemSelect suggestionItemSelect} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>Input<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxlength maxlength} : int<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getShowClearIcon showClearIcon} : boolean (default: false)<\/li>\n<li>{@link #getShowSuggestions showSuggestions} : boolean (default: false)<\/li>\n<li>{@link #getType type} : sap.ui.webc.main.InputType (default: Text)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.webc.main.IIcon[]<\/li>\n<li>{@link #getSuggestionItems suggestionItems} : sap.ui.webc.main.IInputSuggestionItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemPreview suggestionItemPreview} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemSelect suggestionItemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Input","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getShowClearIcon":{"!description":"Gets current value of property {@link #getShowClearIcon showClearIcon}.\n\nDefines whether the clear icon of the input will be shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.Input","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySuggestionItems":{"!description":"Destroys all the suggestionItems in the aggregation {@link #getSuggestionItems suggestionItems}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Input"},"detachSuggestionItemPreview":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggestionItemPreview suggestionItemPreview} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"attachSuggestionItemPreview":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggestionItemPreview suggestionItemPreview} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Input<\/code> itself.\n\nFired when the user navigates to a suggestion item via the ARROW keys, as a preview, before the final selection.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Input<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfSuggestionItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IInputSuggestionItem<\/code> in the aggregation {@link #getSuggestionItems suggestionItems}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.webc.main.IInputSuggestionItem) -> Number","parameters":{"oSuggestionItem":"type: sap.ui.webc.main.IInputSuggestionItem, description: The suggestionItem whose index is looked for"}},"removeIcon":{"!description":"Removes a icon from the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(vIcon: Number | String | sap.ui.webc.main.IIcon) -> sap.ui.webc.main.IIcon | null","parameters":{"vIcon":"type: int|string|sap.ui.webc.main.IIcon, description: The icon to remove or its index or id"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the HTML type of the component. Available options are: <code>Text<\/code>, <code>Email<\/code>, <code>Number<\/code>, <code>Password<\/code>, <code>Tel<\/code>, and <code>URL<\/code>. <br> <br> <b>Notes:<\/b> <ul> <li>The particular effect of this property differs depending on the browser and the current language settings, especially for type <code>Number<\/code>.<\/li> <li>The property is mostly intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Text<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: sap.ui.webc.main.InputType) -> sap.ui.webc.main.Input","parameters":{"sType":"type: sap.ui.webc.main.InputType, description: New value for property <code>type<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Input","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nDefines the icon to be displayed in the component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IIcon]"},"fireSuggestionItemSelect":{"!description":"Fires event {@link #event:suggestionItemSelect suggestionItemSelect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Input","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the value of the component. <br> <br> <b>Note:<\/b> The property is updated upon typing.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the value of the component. <br> <br> <b>Note:<\/b> The property is updated upon typing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.Input","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Input<\/code> itself.\n\nFired when the value of the component changes at each keystroke, and when a suggestion item has been selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Input<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"openPicker":{"!description":"Manually opens the suggestions popover, assuming suggestions are enabled. Items must be preloaded for it to open.","!static":false,"!category":"function","!type":"fn()"},"removeAllSuggestionItems":{"!description":"Removes all the controls from the aggregation {@link #getSuggestionItems suggestionItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IInputSuggestionItem]"}},"sap.ui.webc.main.TimePicker":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.TimePicker","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"setFormatPattern":{"!description":"Sets a new value for property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nExample: HH:mm:ss -> 11:42:35 hh:mm:ss a -> 2:23:15 PM mm:ss -> 12:04 (only minutes and seconds)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFormatPattern?: String) -> sap.ui.webc.main.TimePicker","parameters":{"sFormatPattern":"type: string, description: New value for property <code>formatPattern<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.TimePicker","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDetermines whether the <code>sap.ui.webc.main.TimePicker<\/code> is displayed as readonly.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.TimePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TimePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>TimePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getFormatPattern formatPattern} : string (default: \"\")<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: undefined)<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : string (default: undefined)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","formatValue":{"!description":"Formats a Java Script date object into a string representing a locale date and time according to the <code>formatPattern<\/code> property of the TimePicker instance","!static":false,"!category":"function","!type":"fn(date: Object)","parameters":{"date":"type: object, description: A Java Script date object to be formatted as string"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.TimePicker","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFormatPattern":{"!description":"Gets current value of property {@link #getFormatPattern formatPattern}.\n\nDetermines the format, displayed in the input field.\n\nExample: HH:mm:ss -> 11:42:35 hh:mm:ss a -> 2:23:15 PM mm:ss -> 12:04 (only minutes and seconds)\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TimePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the <code>sap.ui.webc.main.TimePicker<\/code>. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.TimePicker","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"isValid":{"!description":"Checks if a value is valid against the current <code>formatPattern<\/code> value.\n\n<br> <br> <b>Note:<\/b> an empty string is considered as valid value.","!static":false,"!category":"function","!type":"fn(value: String)","parameters":{"value":"type: string, description: The value to be tested against the current date format"}},"closePicker":{"!description":"Closes the picker","!static":false,"!category":"function","!type":"fn()"},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.TimePicker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TimePicker","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.TimePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.TimePicker<\/code> itself.\n\nFired when the input operation has finished by clicking the \"OK\" button or when the text in the input field has changed and the focus leaves the input field.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TimePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.TimePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.TimePicker","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDetermines whether the <code>sap.ui.webc.main.TimePicker<\/code> is displayed as readonly.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.TimePicker","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.TimePicker","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TimePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines a formatted time value.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.TimePicker","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"isOpen":{"!description":"Checks if the picker is open","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/ui/webc/main/TimePicker","getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the <code>sap.ui.webc.main.TimePicker<\/code>. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines a formatted time value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.TimePicker","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.TimePicker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.TimePicker<\/code> itself.\n\nFired when the value of the <code>sap.ui.webc.main.TimePicker<\/code> is changed at each key stroke.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TimePicker","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.TimePicker<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDateValue":{"!description":"Returns the currently selected time represented as JavaScript Date instance","!static":false,"!category":"function","!type":"fn()"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"openPicker":{"!description":"Opens the picker.","!static":false,"!category":"function","!type":"fn()"}},"sap.ui.webc.main.TableMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","MultiSelect":{"!description":"Multi selection mode (more than one table row can be selected).","!category":"enum","!type":"String"},"SingleSelect":{"!description":"Single selection mode (only one table row can be selected).","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","!category":"static class","None":{"!description":"Default mode (no selection).","!category":"enum","!type":"String"}},"sap.ui.webc.main":{"showValueHelpIcon":{"!description":"Determines whether a value help icon will be visualized in the end of the input. Pressing the icon will fire <code>value-help-trigger<\/code> event.","!category":"enum","!type":"Boolean"},"hideInput":{"!description":"If set to \"true\", the input field of component will not be rendered. Only the default slot that is passed will be rendered.","!category":"enum","!type":"Boolean"},"IColorPaletteItem":"sap.ui.webc.main.IColorPaletteItem","additionalText":{"!description":"Defines the <code>additionalText<\/code>, displayed in the end of the tree item.","!category":"enum","!type":"String"},"showDefaultColor":{"!description":"Defines whether the user can choose the default color from a button.","!category":"enum","!type":"Boolean"},"iconEnd":{"!description":"Defines whether the icon should be displayed after the component text.","!category":"enum","!type":"Boolean"},"defaultColor":{"!description":"Defines the default color of the component. <b>Note:<\/b> The default color should be a part of the ColorPalette colors<\/code>","!category":"enum","!type":"sap.ui.core.CSSColor"},"readonly":{"!description":"Defines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component can not be deleted or selected, but still provides visual feedback upon user interaction.","!category":"enum","!type":"Boolean"},"Button":"sap.ui.webc.main.Button_obj","TableGrowingMode":"sap.ui.webc.main.TableGrowingMode","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"MultiComboBoxItem":"sap.ui.webc.main.MultiComboBoxItem_obj","growingButtonText":{"!description":"Defines the text that will be displayed inside the growing button at the bottom of the table, meant for loading more rows upon press.\n\n<br> <br> <b>Note:<\/b> If not specified a built-in text will be displayed. <br> <b>Note:<\/b> This property takes effect if <code>growing<\/code> is set to <code>Button<\/code>.","!category":"enum","!type":"String"},"height":{"!description":"Defines the height of the control","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","TitleLevel":"sap.ui.webc.main.TitleLevel","MultiInput":"sap.ui.webc.main.MultiInput_obj","maxlength":{"!description":"Defines the maximum number of characters that the <code>value<\/code> can have.","!category":"enum","!type":"Number"},"ComboBox":"sap.ui.webc.main.ComboBox_obj","CardHeader":"sap.ui.webc.main.CardHeader_obj","active":{"!description":"Defines if the busy indicator is visible on the screen. By default it is not.","!category":"enum","!type":"Boolean"},"additionalTextState":{"!description":"Defines the state of the <code>additionalText<\/code>. <br> Available options are: <code>\"None\"<\/code> (by default), <code>\"Success\"<\/code>, <code>\"Warning\"<\/code>, <code>\"Information\"<\/code> and <code>\"Erorr\"<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"ColorPaletteItem":"sap.ui.webc.main.ColorPaletteItem_obj","stickyColumnHeader":{"!description":"Determines whether the column headers remain fixed at the top of the page during vertical scrolling as long as the Web Component is in the viewport. <br> <br> <b>Restrictions:<\/b> <ul> <li>Browsers that do not support this feature: <ul> <li>Internet Explorer<\/li> <li>Microsoft Edge lower than version 41 (EdgeHTML 16)<\/li> <li>Mozilla Firefox lower than version 59<\/li> <\/ul> <\/li> <li>Scrolling behavior: <ul> <li>If the Web Component is placed in layout containers that have the <code>overflow: hidden<\/code> or <code>overflow: auto<\/code> style definition, this can prevent the sticky elements of the Web Component from becoming fixed at the top of the viewport.<\/li> <\/ul> <\/li> <\/ul>","!category":"enum","!type":"Boolean"},"accept":{"!description":"Comma-separated list of file types that the component should accept. <br> <br> <b>Note:<\/b> Please make sure you are adding the <code>.<\/code> in front on the file type, e.g. <code>.png<\/code> in case you want to accept png's only.","!category":"enum","!type":"String"},"allowTargetOverlap":{"!description":"Determines if there is no enough space, the component can be placed over the target.","!category":"enum","!type":"Boolean"},"delay":{"!description":"Defines the delay in milliseconds, after which the busy indicator will be visible on the screen.","!category":"enum","!type":"Number"},"!module":"sap/ui/webc/main/library","size":{"!description":"Defines the size of the component.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>Small<\/code><\/li> <li><code>Medium<\/code><\/li> <li><code>Large<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.BusyIndicatorSize"},"ISegmentedButtonItem":"sap.ui.webc.main.ISegmentedButtonItem","IButton":"sap.ui.webc.main.IButton","placement":{"!description":"Defines the placement of the component. <br> <br> Available options are: <ul> <li><code>TopStart<\/code><\/li> <li><code>TopCenter<\/code><\/li> <li><code>TopEnd<\/code><\/li> <li><code>MiddleStart<\/code><\/li> <li><code>MiddleCenter<\/code><\/li> <li><code>MiddleEnd<\/code><\/li> <li><code>BottomStart<\/code><\/li> <li><code>BottomCenter<\/code><\/li> <li><code>BottomEnd<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.ToastPlacement"},"IAvatar":"sap.ui.webc.main.IAvatar","Link":"sap.ui.webc.main.Link_obj","minDate":{"!description":"Determines the minimum date available for selection.","!category":"enum","!type":"String"},"IIcon":"sap.ui.webc.main.IIcon","collapsed":{"!description":"Defines whether the tab content is collapsed.","!category":"enum","!type":"Boolean"},"SuggestionItem":"sap.ui.webc.main.SuggestionItem_obj","icon":{"!description":"If set, an icon will be displayed before the text, representing the tree item.","!category":"enum","!type":"String"},"ButtonDesign":"sap.ui.webc.main.ButtonDesign","Badge":"sap.ui.webc.main.Badge_obj","hideBackdrop":{"!description":"Defines whether the block layer will be shown if modal property is set to true.","!category":"enum","!type":"Boolean"},"SuggestionGroupItem":"sap.ui.webc.main.SuggestionGroupItem_obj","PopoverHorizontalAlign":"sap.ui.webc.main.PopoverHorizontalAlign","DateRangePicker":"sap.ui.webc.main.DateRangePicker_obj","min":{"!description":"Defines a minimum value of the component.","!category":"enum","!type":"Number"},"draggable":{"!description":"Determines whether the component is draggable. If this property is set to true, the Dialog will be draggable by its header. <br> <br> <b>Note:<\/b> The component can be draggable only in desktop mode.","!category":"enum","!type":"Boolean"},"textOn":{"!description":"Defines the text, displayed when the component is checked.\n\n<br> <br> <b>Note:<\/b> We recommend using short texts, up to 3 letters (larger texts would be cut off). <b>Note:<\/b> This property will have no effect if the theme is set to <code>sap_horizon<\/code>.","!category":"enum","!type":"String"},"IToken":"sap.ui.webc.main.IToken","demandPopin":{"!description":"According to your <code>minWidth<\/code> settings, the component can be hidden in different screen sizes. <br> <br> Setting this property to <code>true<\/code>, shows this column as pop-in instead of hiding it.","!category":"enum","!type":"Boolean"},"StepInput":"sap.ui.webc.main.StepInput_obj","StandardListItem":"sap.ui.webc.main.StandardListItem_obj","allowCustomValues":{"!description":"Defines if the user input will be prevented, if no matching item has been found","!category":"enum","!type":"Boolean"},"ToggleButton":"sap.ui.webc.main.ToggleButton_obj","backgroundColor":{"!description":"Defines the background color of the control","!category":"enum","!type":"sap.ui.core.CSSColor"},"secondaryCalendarType":{"!description":"Defines the secondary calendar type. If not set, the calendar will only show the primary calendar type.","!category":"enum","!type":"sap.ui.core.CalendarType"},"Calendar":"sap.ui.webc.main.Calendar_obj","SemanticColor":"sap.ui.webc.main.SemanticColor","displayValue":{"!description":"Specifies the text value to be displayed in the bar.\n\n<b>Note:<\/b> <ul> <li>If there is no value provided or the value is empty, the default percentage value is shown.<\/li> <li>If <code>hideValue<\/code> property is <code>true<\/code> both the <code>displayValue<\/code> and <code>value<\/code> property values are not shown.<\/li> <\/ul>","!category":"enum","!type":"String"},"ComboBoxItem":"sap.ui.webc.main.ComboBoxItem_obj","ComboBoxGroupItem":"sap.ui.webc.main.ComboBoxGroupItem_obj","TableGroupRow":"sap.ui.webc.main.TableGroupRow_obj","ListGrowingMode":"sap.ui.webc.main.ListGrowingMode","Select":"sap.ui.webc.main.Select_obj","growingMaxLines":{"!description":"Defines the maximum number of lines that the component can grow.","!category":"enum","!type":"Number"},"valueStateMessage":{"!description":"Defines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.","!category":"enum","!type":"String"},"open":{"!description":"Indicates if the element is open","!category":"enum","!type":"Boolean"},"GrowingMode":"sap.ui.webc.main.GrowingMode","textOff":{"!description":"Defines the text, displayed when the component is not checked. <br> <br> <b>Note:<\/b> We recommend using short texts, up to 3 letters (larger texts would be cut off). <b>Note:<\/b> This property will have no effect if the theme is set to <code>sap_horizon<\/code>.","!category":"enum","!type":"String"},"hideNavigationArrows":{"!description":"Defines the visibility of the navigation arrows. If set to true the navigation arrows will be hidden. <br> <br> <b>Note:<\/b> The navigation arrows are never displayed on touch devices. In this case, the user can swipe to navigate through the items.","!category":"enum","!type":"Boolean"},"valueState":{"!description":"Defines the value state of the <code>sap.ui.webc.main.TimePicker<\/code>. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.core.ValueState"},"headerText":{"!description":"Defines the component header text. <br> <br> <b>Note:<\/b> If the <code>header<\/code> slot is set, this property is ignored.","!category":"enum","!type":"String"},"TextArea":"sap.ui.webc.main.TextArea_obj","PopoverVerticalAlign":"sap.ui.webc.main.PopoverVerticalAlign","hasChildren":{"!description":"Defines whether the tree node has children, even if currently no other tree nodes are slotted inside. <br> <i>Note:<\/i> This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to <code>true<\/code> for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway.","!category":"enum","!type":"Boolean"},"Label":"sap.ui.webc.main.Label_obj","hideCloseButton":{"!description":"Defines whether the MessageStrip renders close button.","!category":"enum","!type":"Boolean"},"TabContainer":"sap.ui.webc.main.TabContainer_obj","CalendarDate":"sap.ui.webc.main.CalendarDate_obj","Dialog":"sap.ui.webc.main.Dialog_obj","ColorPalette":"sap.ui.webc.main.ColorPalette_obj","arrowsPlacement":{"!description":"Defines the position of arrows. <br> <br> Available options are: <ul> <li><code>Content<\/code><\/li> <li><code>Navigation<\/code><\/li> <\/ul> <br> When set to \"Content\", the arrows are placed on the sides of the current page. <br> When set to \"Navigation\", the arrows are placed on the sides of the page indicator.","!category":"enum","!type":"sap.ui.webc.main.CarouselArrowsPlacement"},"TableMode":"sap.ui.webc.main.TableMode","List":"sap.ui.webc.main.List_obj","ResponsivePopover":"sap.ui.webc.main.ResponsivePopover_obj","modal":{"!description":"Defines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background.","!category":"enum","!type":"Boolean"},"image":{"!description":"Defines the <code>image<\/code> source URI. <br> <br> <b>Note:<\/b> The <code>image<\/code> would be displayed in the beginning of the item.","!category":"enum","!type":"String"},"ToastPlacement":"sap.ui.webc.main.ToastPlacement","CalendarSelectionMode":"sap.ui.webc.main.CalendarSelectionMode","itemsPerPageM":{"!description":"Defines the number of items per page on medium size (from 640px to 1024px). One item per page shown by default.","!category":"enum","!type":"Number"},"RadioButton":"sap.ui.webc.main.RadioButton_obj","itemsPerPageL":{"!description":"Defines the number of items per page on large size (more than 1024px). One item per page shown by default.","!category":"enum","!type":"Number"},"itemsPerPageS":{"!description":"Defines the number of items per page on small size (up to 640px). One item per page shown by default.","!category":"enum","!type":"Number"},"ITab":"sap.ui.webc.main.ITab","showRecentColors":{"!description":"Defines whether the user can see the last used colors in the bottom of the component","!category":"enum","!type":"Boolean"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","CheckBox":"sap.ui.webc.main.CheckBox_obj","name":{"!description":"Determines the name with which the component will be submitted in an HTML form.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.","!category":"enum","!type":"String"},"ISelectOption":"sap.ui.webc.main.ISelectOption","fixed":{"!description":"Defines whether the tabs are in a fixed state that is not expandable/collapsible by user interaction.","!category":"enum","!type":"Boolean"},"Icon":"sap.ui.webc.main.Icon_obj","BreadcrumbsDesign":"sap.ui.webc.main.BreadcrumbsDesign","preventFocusRestore":{"!description":"Defines if the focus should be returned to the previously focused element, when the popup closes.","!category":"enum","!type":"Boolean"},"showTickmarks":{"!description":"Enables tickmarks visualization for each step. <br> <br> <b>Note:<\/b> The step must be a positive number.","!category":"enum","!type":"Boolean"},"selectionMode":{"!description":"Defines the type of selection used in the calendar component. Accepted property values are:<br>\n\n<ul> <li><code>CalendarSelectionMode.Single<\/code> - enables a single date selection.(default value)<\/li> <li><code>CalendarSelectionMode.Range<\/code> - enables selection of a date range.<\/li> <li><code>CalendarSelectionMode.Multiple<\/code> - enables selection of multiple dates.<\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.CalendarSelectionMode"},"tabsOverflowMode":{"!description":"Defines the overflow mode of the tab strip. If you have a large number of tabs, only the tabs that can fit on screen will be visible. All other tabs that can 't fit on the screen are available in an overflow tab \"More\".\n\n<br> <br> <b>Note:<\/b> Only one overflow at the end would be displayed by default, but when set to <code>StartAndEnd<\/code>, there will be two overflows on both ends, and tab order will not change on tab selection.\n\n<br> <br> Available options are: <ul> <li><code>End<\/code><\/li> <li><code>StartAndEnd<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.TabsOverflowMode"},"ITreeItem":"sap.ui.webc.main.ITreeItem","Slider":"sap.ui.webc.main.Slider_obj","color":{"!description":"Defines the color of the control","!category":"enum","!type":"sap.ui.core.CSSColor"},"formatPattern":{"!description":"Determines the format, displayed in the input field.\n\nExample: HH:mm:ss -> 11:42:35 hh:mm:ss a -> 2:23:15 PM mm:ss -> 12:04 (only minutes and seconds)","!category":"enum","!type":"String"},"description":{"!description":"Defines the description displayed right under the item text, if such is present.","!category":"enum","!type":"String"},"BreadcrumbsItem":"sap.ui.webc.main.BreadcrumbsItem_obj","duration":{"!description":"Defines the duration in milliseconds for which component remains on the screen before it's automatically closed. <br> <br> <b>Note:<\/b> The minimum supported value is <code>500<\/code> ms and even if a lower value is set, the duration would remain <code>500<\/code> ms.","!category":"enum","!type":"Number"},"LinkDesign":"sap.ui.webc.main.LinkDesign","stretch":{"!description":"Determines whether the component should be stretched to fullscreen. <br> <br> <b>Note:<\/b> The component will be stretched to approximately 90% of the viewport.","!category":"enum","!type":"Boolean"},"expanded":{"!description":"Defines whether the tree node is expanded or collapsed. Only has visual effect for tree nodes with children.","!category":"enum","!type":"Boolean"},"TableCell":"sap.ui.webc.main.TableCell_obj","Toast":"sap.ui.webc.main.Toast_obj","ProgressIndicator":"sap.ui.webc.main.ProgressIndicator_obj","TabLayout":"sap.ui.webc.main.TabLayout","showOverflow":{"!description":"Defines whether the overflow select list is displayed. <br> <br> The overflow select list represents a list, where all tabs are displayed so that it's easier for the user to select a specific tab.","!category":"enum","!type":"Boolean"},"SplitButton":"sap.ui.webc.main.SplitButton_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is fired.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!category":"enum","!type":"[String]"},"placeholder":{"!description":"Defines a short hint, intended to aid the user with data entry when the component has no value.\n\n<br> <br> <b>Note:<\/b> When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern.","!category":"enum","!type":"String"},"hideArrow":{"!description":"Determines whether the component arrow is hidden.","!category":"enum","!type":"Boolean"},"TabsOverflowMode":"sap.ui.webc.main.TabsOverflowMode","hideIcon":{"!description":"Defines whether the MessageStrip will show an icon in the beginning. You can directly provide an icon with the <code>icon<\/code> slot. Otherwise, the default icon for the type will be used.","!category":"enum","!type":"Boolean"},"hideNoData":{"!description":"Defines if the value of <code>noDataText<\/code> will be diplayed when there is no rows present in the table.","!category":"enum","!type":"Boolean"},"Breadcrumbs":"sap.ui.webc.main.Breadcrumbs_obj","multiple":{"!description":"Allows multiple files to be chosen.","!category":"enum","!type":"Boolean"},"Title":"sap.ui.webc.main.Title_obj","MenuItem":"sap.ui.webc.main.MenuItem_obj","Avatar":"sap.ui.webc.main.Avatar_obj","RangeSlider":"sap.ui.webc.main.RangeSlider_obj","ICalendarDate":"sap.ui.webc.main.ICalendarDate","target":{"!description":"Defines the component target. <br> <br> <b>Notes:<\/b>\n\n<ul> <li><code>_self<\/code><\/li> <li><code>_top<\/code><\/li> <li><code>_blank<\/code><\/li> <li><code>_parent<\/code><\/li> <li><code>_search<\/code><\/li> <\/ul>\n\n<b>This property must only be used when the <code>href<\/code> property is set.<\/b>","!category":"enum","!type":"String"},"noAnimation":{"!description":"Indicates whether the transition between the expanded and the collapsed state of the component is animated. By default the animation is enabled.","!category":"enum","!type":"Boolean"},"busyDelay":{"!description":"Defines the delay in milliseconds, after which the busy indicator will show up for this component.","!category":"enum","!type":"Number"},"step":{"!description":"Defines a step of increasing/decreasing the value of the component.","!category":"enum","!type":"Number"},"GroupHeaderListItem":"sap.ui.webc.main.GroupHeaderListItem_obj","TableRowType":"sap.ui.webc.main.TableRowType","endValue":{"!description":"Defines end point of a selection - position of a second handle on the slider. <br> <br>","!category":"enum","!type":"Number"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"indeterminate":{"!description":"Defines whether the selection of a tree node is displayed as partially selected. <br> <br> <b>Note:<\/b> The indeterminate state can be set only programatically and can\u2019t be achieved by user interaction, meaning that the resulting visual state depends on the values of the <code>indeterminate<\/code> and <code>selected<\/code> properties: <ul> <li> If a tree node has both <code>selected<\/code> and <code>indeterminate<\/code> set to <code>true<\/code>, it is displayed as partially selected. <li> If a tree node has <code>selected<\/code> set to <code>true<\/code> and <code>indeterminate<\/code> set to <code>false<\/code>, it is displayed as selected. <li> If a tree node has <code>selected<\/code> set to <code>false<\/code>, it is displayed as not selected regardless of the value of the <code>indeterminate<\/code> property. <\/ul> <br> <b>Note:<\/b> This property takes effect only when the <code>sap.ui.webc.main.Tree<\/code> is in <code>MultiSelect<\/code> mode.","!category":"enum","!type":"Boolean"},"interactive":{"!description":"Defines if the icon is interactive (focusable and pressable)","!category":"enum","!type":"Boolean"},"Token":"sap.ui.webc.main.Token_obj","MessageStrip":"sap.ui.webc.main.MessageStrip_obj","type":{"!description":"Defines the visual indication and behavior of the component. <br> <br> Available options are: <ul> <li><code>Active<\/code><\/li> <li><code>Inactive<\/code><\/li> <\/ul> <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press, while with type <code>Inactive<\/code> - will not.","!category":"enum","!type":"sap.ui.webc.main.TableRowType"},"labelInterval":{"!description":"Displays a label with a value on every N-th step. <br> <br> <b>Note:<\/b> The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number.","!category":"enum","!type":"Number"},"required":{"!description":"Defines whether the component is required.","!category":"enum","!type":"Boolean"},"MessageStripDesign":"sap.ui.webc.main.MessageStripDesign","SegmentedButton":"sap.ui.webc.main.SegmentedButton_obj","hideValue":{"!description":"Defines whether the component value is shown.","!category":"enum","!type":"Boolean"},"delimiter":{"!description":"Determines the symbol which separates the dates. If not supplied, the default time interval delimiter for the current locale will be used.","!category":"enum","!type":"String"},"titleText":{"!description":"Defines the title text.","!category":"enum","!type":"String"},"text":{"!description":"Defines the text of the tree item.","!category":"enum","!type":"String"},"href":{"!description":"Defines the component href. <br> <br> <b>Note:<\/b> Standard hyperlink behavior is supported.","!category":"enum","!type":"String"},"verticalAlign":{"!description":"Determines the vertical alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.PopoverVerticalAlign"},"shape":{"!description":"Defines the shape of the component. <br> <br> Available options are: <ul> <li><code>Circle<\/code><\/li> <li><code>Square<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.AvatarShape"},"ListSeparators":"sap.ui.webc.main.ListSeparators","pressed":{"!description":"Determines whether the component is displayed as pressed.","!category":"enum","!type":"Boolean"},"IMenuItem":"sap.ui.webc.main.IMenuItem","loading":{"!description":"Indicates whether a loading indicator should be shown in the picker.","!category":"enum","!type":"Boolean"},"popinText":{"!description":"The text for the column when it pops in.","!category":"enum","!type":"String"},"TableColumn":"sap.ui.webc.main.TableColumn_obj","Card":"sap.ui.webc.main.Card_obj","Switch":"sap.ui.webc.main.Switch_obj","InputType":"sap.ui.webc.main.InputType","TableRow":"sap.ui.webc.main.TableRow_obj","TabSeparator":"sap.ui.webc.main.TabSeparator_obj","DatePicker":"sap.ui.webc.main.DatePicker_obj","HasPopup":"sap.ui.webc.main.HasPopup","hideWeekNumbers":{"!description":"Defines the visibility of the week numbers column. <br> <br>\n\n<b>Note:<\/b> For calendars other than Gregorian, the week numbers are not displayed regardless of what is set.","!category":"enum","!type":"Boolean"},"Popover":"sap.ui.webc.main.Popover_obj","status":{"!description":"Defines the status text.","!category":"enum","!type":"String"},"showSuggestions":{"!description":"Defines whether the component should show suggestions, if such are present. <br> <br> <b>Note:<\/b> You need to import the <code>InputSuggestions<\/code> module from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"<\/code> to enable this functionality.","!category":"enum","!type":"Boolean"},"AvatarGroup":"sap.ui.webc.main.AvatarGroup_obj","WrappingType":"sap.ui.webc.main.WrappingType","FileUploader":"sap.ui.webc.main.FileUploader_obj","SwitchDesign":"sap.ui.webc.main.SwitchDesign","subtitleText":{"!description":"Defines the subtitle text.","!category":"enum","!type":"String"},"separatorStyle":{"!description":"Determines the visual style of the separator between the breadcrumb items.\n\n<br> <br> Available options are: <ul> <li><code>Slash<\/code><\/li> <li><code>BackSlash<\/code><\/li> <li><code>DoubleBackSlash<\/code><\/li> <li><code>DoubleGreaterThan<\/code><\/li> <li><code>DoubleSlash<\/code><\/li> <li><code>GreaterThan<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.BreadcrumbsSeparatorStyle"},"enabled":{"!description":"Defines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.","!category":"enum","!type":"Boolean"},"activeIcon":{"!description":"Defines the icon to be displayed in active state as graphical element within the component.","!category":"enum","!type":"String"},"hidePageIndicator":{"!description":"Defines the visibility of the paging indicator. If set to true the page indicator will be hidden.","!category":"enum","!type":"Boolean"},"BreadcrumbsSeparatorStyle":"sap.ui.webc.main.BreadcrumbsSeparatorStyle","blocked":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.69 The blocked property is deprecated. There is no accessibility support for this property. Blocked controls should not be used inside Controls, which rely on keyboard navigation, e.g. List controls.<br>Whether the control is currently in blocked state.","!category":"enum","!type":"Boolean"},"_semanticFormValue":{"!description":"The value for sap.ui.core.ISemanticFormContent interface.","!category":"enum","!type":"String"},"horizontalAlign":{"!description":"Determines the horizontal alignment of the component. <br> <br> Available options are: <ul> <li><code>Center<\/code><\/li> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Stretch<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.PopoverHorizontalAlign"},"IComboBoxItem":"sap.ui.webc.main.IComboBoxItem","Menu":"sap.ui.webc.main.Menu_obj","MultiComboBox":"sap.ui.webc.main.MultiComboBox_obj","primaryCalendarType":{"!description":"Sets a calendar type used for display. If not set, the calendar type of the global configuration is used.","!category":"enum","!type":"sap.ui.core.CalendarType"},"ListItemType":"sap.ui.webc.main.ListItemType","PopoverPlacementType":"sap.ui.webc.main.PopoverPlacementType","showColon":{"!description":"Defines whether colon is added to the component text. <br> <br> <b>Note:<\/b> Usually used in forms.","!category":"enum","!type":"Boolean"},"Table":"sap.ui.webc.main.Table_obj","resizable":{"!description":"Configures the component to be resizable. If this property is set to true, the Dialog will have a resize handle in its bottom right corner in LTR languages. In RTL languages, the resize handle will be placed in the bottom left corner. <br> <br> <b>Note:<\/b> The component can be resizable only in desktop mode. <br> <b>Note:<\/b> Upon resizing, externally defined height and width styling will be ignored.","!category":"enum","!type":"Boolean"},"max":{"!description":"Defines a maximum value of the component.","!category":"enum","!type":"Number"},"display":{"!description":"Defines whether the control will be rendered as a block or inline HTML element","!category":"enum","!type":"String"},"showTooltip":{"!description":"Enables handle tooltip displaying the current value.","!category":"enum","!type":"Boolean"},"minWidth":{"!description":"Defines the minimum table width required to display this column. By default it is always displayed. <br> <br> The responsive behavior of the <code>sap.ui.webc.main.Table<\/code> is determined by this property. As an example, by setting <code>minWidth<\/code> property to <code>400<\/code> sets the minimum width to 400 pixels, and shows this column on tablet (and desktop) but hides it on mobile. <br> For further responsive design options, see <code>demandPopin<\/code> property.","!category":"enum","!type":"Number"},"ITableRow":"sap.ui.webc.main.ITableRow","AvatarColorScheme":"sap.ui.webc.main.AvatarColorScheme","noDataText":{"!description":"Defines the text that is displayed when the component contains no items.","!category":"enum","!type":"String"},"filter":{"!description":"Defines the filter type of the component. Available options are: <code>StartsWithPerTerm<\/code>, <code>StartsWith<\/code>, <code>Contains<\/code> and <code>None<\/code>.","!category":"enum","!type":"String"},"Panel":"sap.ui.webc.main.Panel_obj","Tab":"sap.ui.webc.main.Tab_obj","headerLevel":{"!description":"Defines the \"aria-level\" of component heading, set by the <code>headerText<\/code>. <br> <br> Available options are: <code>\"H6\"<\/code> to <code>\"H1\"<\/code>.","!category":"enum","!type":"sap.ui.webc.main.TitleLevel"},"width":{"!description":"Defines the width of the control","!category":"enum","!type":"sap.ui.core.CSSSize"},"maxDate":{"!description":"Determines the maximum date available for selection.","!category":"enum","!type":"String"},"IInputSuggestionItem":"sap.ui.webc.main.IInputSuggestionItem","colorScheme":{"!description":"Defines the color scheme of the component. There are 10 predefined schemes. Each scheme applies different values for the <code>background-color<\/code> and <code>border-color<\/code>. To use one you can set a number from <code>\"1\"<\/code> to <code>\"10\"<\/code>. The <code>colorScheme<\/code> <code>\"1\"<\/code> will be set by default. <br> <br> <b>Note:<\/b> Color schemes have no visual representation in High Contrast Black (sap_belize_hcb) theme.","!category":"enum","!type":"String"},"cyclic":{"!description":"Defines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.","!category":"enum","!type":"Boolean"},"TimePicker":"sap.ui.webc.main.TimePicker_obj","__isBusy":{"!description":"__isBusy : Boolean","!category":"enum","!type":"Boolean"},"ColorPicker":"sap.ui.webc.main.ColorPicker_obj","TreeItem":"sap.ui.webc.main.TreeItem_obj","Carousel":"sap.ui.webc.main.Carousel_obj","CarouselArrowsPlacement":"sap.ui.webc.main.CarouselArrowsPlacement","ITableColumn":"sap.ui.webc.main.ITableColumn","DateTimePicker":"sap.ui.webc.main.DateTimePicker_obj","ListMode":"sap.ui.webc.main.ListMode","mode":{"!description":"Defines the mode of the component. Since the tree uses a <code>sap.ui.webc.main.List<\/code> to display its structure, the tree modes are exactly the same as the list modes, and are all applicable.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>None<\/code><\/li> <li><code>SingleSelect<\/code><\/li> <li><code>SingleSelectBegin<\/code><\/li> <li><code>SingleSelectEnd<\/code><\/li> <li><code>MultiSelect<\/code><\/li> <li><code>Delete<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.ListMode"},"accessibleRole":{"!description":"Sets the accessible aria role of the component. Depending on the usage, you can change the role from the default <code>Form<\/code> to <code>Region<\/code> or <code>Complementary<\/code>.","!category":"enum","!type":"sap.ui.webc.main.PanelAccessibleRole"},"growing":{"!description":"Enables the component to automatically grow and shrink dynamically with its content. <br> <br> <b>Note:<\/b> If set to <code>true<\/code>, the CSS <code>height<\/code> property is ignored.","!category":"enum","!type":"Boolean"},"Input":"sap.ui.webc.main.Input_obj","PanelAccessibleRole":"sap.ui.webc.main.PanelAccessibleRole","Tree":"sap.ui.webc.main.Tree_obj","checked":{"!description":"Defines if the component is checked. <br> <br> <b>Note:<\/b> The property can be changed with user interaction, either by cliking the component, or by pressing the <code>Enter<\/code> or <code>Space<\/code> key.","!category":"enum","!type":"Boolean"},"BusyIndicator":"sap.ui.webc.main.BusyIndicator_obj","startValue":{"!description":"Defines start point of a selection - position of a first handle on the slider. <br> <br>","!category":"enum","!type":"Number"},"selected":{"!description":"Defines whether the tree node is selected by the user. Only has effect if the <code>sap.ui.webc.main.Tree<\/code> is in one of the following modes: in <code>SingleSelect<\/code>, <code>SingleSelectBegin<\/code>, <code>SingleSelectEnd<\/code> and <code>MultiSelect<\/code>.","!category":"enum","!type":"Boolean"},"AvatarGroupType":"sap.ui.webc.main.AvatarGroupType","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nAlso see {@link module:sap/ui/core/InvisibleRenderer InvisibleRenderer}.","!category":"enum","!type":"Boolean"},"level":{"!description":"Defines the component level. Available options are: <code>\"H6\"<\/code> to <code>\"H1\"<\/code>.","!category":"enum","!type":"sap.ui.webc.main.TitleLevel"},"Priority":"sap.ui.webc.main.Priority","initials":{"!description":"Defines the displayed initials. <br> Up to two Latin letters can be displayed as initials.","!category":"enum","!type":"String"},"tabLayout":{"!description":"Defines the alignment of the content and the <code>additionalText<\/code> of a tab.\n\n<br> <br> <b>Note:<\/b> The content and the <code>additionalText<\/code> would be displayed vertically by defualt, but when set to <code>Inline<\/code>, they would be displayed horizontally.\n\n<br> <br> Available options are: <ul> <li><code>Standard<\/code><\/li> <li><code>Inline<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.TabLayout"},"valuePrecision":{"!description":"Determines the number of digits after the decimal point of the component.","!category":"enum","!type":"Number"},"RatingIndicator":"sap.ui.webc.main.RatingIndicator_obj","IListItem":"sap.ui.webc.main.IListItem","showMoreColors":{"!description":"Defines whether the user can choose a custom color from a component. <b>Note:<\/b> In order to use this property you need to import the following module: <code>\"@ui5/webcomponents/dist/features/ColorPaletteMoreColors.js\"<\/code>","!category":"enum","!type":"Boolean"},"accessibilityAttributes":{"!description":"An object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <li><code>controls<\/code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.<\/li> <\/ul>","!category":"enum","!type":"Object"},"Option":"sap.ui.webc.main.Option_obj","accessibleName":{"!description":"Defines the accessible aria name of the component.","!category":"enum","!type":"String"},"wrappingType":{"!description":"Defines how the text of a component will be displayed when there is not enough space. Available options are: <ul> <li><code>None<\/code> - The text will be truncated with an ellipsis.<\/li> <li><code>Normal<\/code> - The text will wrap. The words will not be broken based on hyphenation.<\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.WrappingType"},"showExceededText":{"!description":"Determines whether the characters exceeding the maximum allowed character count are visible in the component. <br> <br> If set to <code>false<\/code>, the user is not allowed to enter more characters than what is set in the <code>maxlength<\/code> property. If set to <code>true<\/code> the characters exceeding the <code>maxlength<\/code> value are selected on paste and the counter below the component displays their number.","!category":"enum","!type":"Boolean"},"IBreadcrumbsItem":"sap.ui.webc.main.IBreadcrumbsItem","ColorPalettePopover":"sap.ui.webc.main.ColorPalettePopover_obj","AvatarShape":"sap.ui.webc.main.AvatarShape","footerText":{"!description":"Defines the component footer text.","!category":"enum","!type":"String"},"indent":{"!description":"Determines whether the component is indented.","!category":"enum","!type":"Boolean"},"!category":"namespace","IInput":"sap.ui.webc.main.IInput","IMultiComboBoxItem":"sap.ui.webc.main.IMultiComboBoxItem","textDirection":{"!description":"Specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"ITableCell":"sap.ui.webc.main.ITableCell","AvatarSize":"sap.ui.webc.main.AvatarSize","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"design":{"!description":"Defines the component design.\n\n<br> <br> <b>The available values are:<\/b>\n\n<ul> <li><code>Default<\/code><\/li> <li><code>Emphasized<\/code><\/li> <li><code>Positive<\/code><\/li> <li><code>Negative<\/code><\/li> <li><code>Transparent<\/code><\/li> <li><code>Attention<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.ButtonDesign"},"startsSection":{"!description":"Defines whether a visual separator should be rendered before the item.","!category":"enum","!type":"Boolean"},"value":{"!description":"Defines a formatted time value.","!category":"enum","!type":"String"},"BusyIndicatorSize":"sap.ui.webc.main.BusyIndicatorSize","CustomListItem":"sap.ui.webc.main.CustomListItem_obj","SegmentedButtonItem":"sap.ui.webc.main.SegmentedButtonItem_obj","showClearIcon":{"!description":"Defines whether the clear icon of the input will be shown.","!category":"enum","!type":"Boolean"},"rows":{"!description":"Defines the number of visible text lines for the component. <br> <br> <b>Notes:<\/b> <ul> <li>If the <code>growing<\/code> property is enabled, this property defines the minimum rows to be displayed in the textarea.<\/li> <li>The CSS <code>height<\/code> property wins over the <code>rows<\/code> property, if both are set.<\/li> <\/ul>","!category":"enum","!type":"Number"},"growingButtonSubtext":{"!description":"Defines the subtext that will be displayed under the <code>growingButtonText<\/code>.\n\n<br> <br> <b>Note:<\/b> This property takes effect if <code>growing<\/code> is set to <code>Button<\/code>.","!category":"enum","!type":"String"},"submits":{"!description":"submits : Boolean","!category":"enum","!type":"Boolean"},"placementType":{"!description":"Determines on which side the component is placed at. <br> <br> Available options are: <ul> <li><code>Left<\/code><\/li> <li><code>Right<\/code><\/li> <li><code>Top<\/code><\/li> <li><code>Bottom<\/code><\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.PopoverPlacementType"},"separators":{"!description":"Defines the item separator style that is used. <br> <br> <b>Notes:<\/b> <ul> <li>Avalaible options are <code>All<\/code>, <code>Inner<\/code>, and <code>None<\/code>.<\/li> <li>When set to <code>None<\/code>, none of the items are separated by horizontal lines.<\/li> <li>When set to <code>Inner<\/code>, the first item doesn't have a top separator and the last item doesn't have a bottom separator.<\/li> <\/ul>","!category":"enum","!type":"sap.ui.webc.main.ListSeparators"}},"sap.ui.webc.main.CustomListItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.CustomListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nDefines the selected state of the <code>ListItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected?: Boolean) -> sap.ui.webc.main.CustomListItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nDefines the content of the component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the text alternative of the component. Note: If not provided a default text alternative will be set, if present.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.CustomListItem","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.CustomListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the visual indication and behavior of the list items. Available options are <code>Active<\/code> (by default), <code>Inactive<\/code> and <code>Detail<\/code>. <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press and hover, while with type <code>Inactive<\/code> and <code>Detail<\/code> - will not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Active<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: sap.ui.webc.main.ListItemType) -> sap.ui.webc.main.CustomListItem","parameters":{"sType":"type: sap.ui.webc.main.ListItemType, description: New value for property <code>type<\/code>"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CustomListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nDefines the selected state of the <code>ListItem<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new <code>CustomListItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: \"\")<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getType type} : sap.ui.webc.main.ListItemType (default: Active)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:detailClick detailClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/CustomListItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the visual indication and behavior of the list items. Available options are <code>Active<\/code> (by default), <code>Inactive<\/code> and <code>Detail<\/code>. <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press and hover, while with type <code>Inactive<\/code> and <code>Detail<\/code> - will not.\n\nDefault value is <code>Active<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ListItemType"},"attachDetailClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:detailClick detailClick} event of this <code>sap.ui.webc.main.CustomListItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.CustomListItem<\/code> itself.\n\nFired when the user clicks on the detail button when type is <code>Detail<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.CustomListItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.CustomListItem<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachDetailClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:detailClick detailClick} event of this <code>sap.ui.webc.main.CustomListItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.CustomListItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.CustomListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"fireDetailClick":{"!description":"Fires event {@link #event:detailClick detailClick} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.CustomListItem","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.CustomListItem"}},"sap.ui.webc.main.SuggestionItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nDefines the <code>additionalText<\/code>, displayed in the end of the item.","!static":false,"!category":"function","!type":"fn() -> String"},"getAdditionalTextState":{"!description":"Gets current value of property {@link #getAdditionalTextState additionalTextState}.\n\nDefines the state of the <code>additionalText<\/code>. <br> <br> Available options are: <code>\"None\"<\/code> (by default), <code>\"Success\"<\/code>, <code>\"Information\"<\/code>, <code>\"Warning\"<\/code> and <code>\"Erorr\"<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.SuggestionItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDefines the description displayed right under the item text, if such is present.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.ui.webc.main.SuggestionItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"setIconEnd":{"!description":"Sets a new value for property {@link #getIconEnd iconEnd}.\n\nDefines whether the <code>icon<\/code> should be displayed in the beginning of the item or in the end. <br> <br> <b>Note:<\/b> If <code>image<\/code> is set, the <code>icon<\/code> would be displayed after the <code>image<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIconEnd?: Boolean) -> sap.ui.webc.main.SuggestionItem","parameters":{"bIconEnd":"type: boolean, description: New value for property <code>iconEnd<\/code>"}},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nDefines the visual indication and behavior of the item. Available options are <code>Active<\/code> (by default), <code>Inactive<\/code> and <code>Detail<\/code>. <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press and hover, while when <code>Inactive<\/code> or <code>Detail<\/code> - will not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Active<\/code>.","!static":false,"!category":"function","!type":"fn(sType?: sap.ui.webc.main.ListItemType) -> sap.ui.webc.main.SuggestionItem","parameters":{"sType":"type: sap.ui.webc.main.ListItemType, description: New value for property <code>type<\/code>"}},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDefines the description displayed right under the item text, if such is present.","!static":false,"!category":"function","!type":"fn() -> String"},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the <code>icon<\/code> source URI. <br> <br> <b>Note:<\/b> SAP-icons font provides numerous built-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SuggestionItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setAdditionalTextState":{"!description":"Sets a new value for property {@link #getAdditionalTextState additionalTextState}.\n\nDefines the state of the <code>additionalText<\/code>. <br> <br> Available options are: <code>\"None\"<\/code> (by default), <code>\"Success\"<\/code>, <code>\"Information\"<\/code>, <code>\"Warning\"<\/code> and <code>\"Erorr\"<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalTextState?: sap.ui.core.ValueState) -> sap.ui.webc.main.SuggestionItem","parameters":{"sAdditionalTextState":"type: sap.ui.core.ValueState, description: New value for property <code>additionalTextState<\/code>"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the <code>icon<\/code> source URI. <br> <br> <b>Note:<\/b> SAP-icons font provides numerous built-in icons. To find all the available icons, see the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.ui.webc.main.SuggestionItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"!constructorDescription":"Constructor for a new <code>SuggestionItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAdditionalText additionalText} : string<\/li>\n<li>{@link #getAdditionalTextState additionalTextState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getIconEnd iconEnd} : boolean (default: false)<\/li>\n<li>{@link #getImage image} : string<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getType type} : sap.ui.webc.main.ListItemType (default: Active)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/SuggestionItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nDefines the visual indication and behavior of the item. Available options are <code>Active<\/code> (by default), <code>Inactive<\/code> and <code>Detail<\/code>. <br> <br> <b>Note:<\/b> When set to <code>Active<\/code>, the item will provide visual response upon press and hover, while when <code>Inactive<\/code> or <code>Detail<\/code> - will not.\n\nDefault value is <code>Active<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ListItemType"},"getIconEnd":{"!description":"Gets current value of property {@link #getIconEnd iconEnd}.\n\nDefines whether the <code>icon<\/code> should be displayed in the beginning of the item or in the end. <br> <br> <b>Note:<\/b> If <code>image<\/code> is set, the <code>icon<\/code> would be displayed after the <code>image<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nDefines the <code>additionalText<\/code>, displayed in the end of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAdditionalText: String) -> sap.ui.webc.main.SuggestionItem","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"}},"getImage":{"!description":"Gets current value of property {@link #getImage image}.\n\nDefines the <code>image<\/code> source URI. <br> <br> <b>Note:<\/b> The <code>image<\/code> would be displayed in the beginning of the item.","!static":false,"!category":"function","!type":"fn() -> String"},"setImage":{"!description":"Sets a new value for property {@link #getImage image}.\n\nDefines the <code>image<\/code> source URI. <br> <br> <b>Note:<\/b> The <code>image<\/code> would be displayed in the beginning of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sImage: String) -> sap.ui.webc.main.SuggestionItem","parameters":{"sImage":"type: string, description: New value for property <code>image<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.SuggestionItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.ToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ToggleButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ToggleButton"},"sap.ui.webc.main.TimePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TimePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.TimePicker"},"sap.ui.webc.main.Tree":{"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Tree"},"attachItemToggle":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemToggle itemToggle} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Tree<\/code> itself.\n\nFired when a tree item is expanded or collapsed. <i>Note:<\/i> You can call <code>preventDefault()<\/code> on the event object to suppress the event, if needed. This may be handy for example if you want to dynamically load tree items upon the user expanding a node. Even if you prevented the event's default behavior, you can always manually call <code>toggle()<\/code> on a tree item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Tree<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the items of the component. Tree items may have other tree items as children. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.TreeItem<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITreeItem]"},"detachItemClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.ITreeItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITreeItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.ITreeItem, description: The item whose index is looked for"}},"fireItemMouseover":{"!description":"Fires event {@link #event:itemMouseover itemMouseover} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Tree","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Tree<\/code> itself.\n\nFired when selection is changed by user interaction in <code>SingleSelect<\/code>, <code>SingleSelectBegin<\/code>, <code>SingleSelectEnd<\/code> and <code>MultiSelect<\/code> modes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Tree<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nDefines the mode of the component. Since the tree uses a <code>sap.ui.webc.main.List<\/code> to display its structure, the tree modes are exactly the same as the list modes, and are all applicable.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>None<\/code><\/li> <li><code>SingleSelect<\/code><\/li> <li><code>SingleSelectBegin<\/code><\/li> <li><code>SingleSelectEnd<\/code><\/li> <li><code>MultiSelect<\/code><\/li> <li><code>Delete<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ListMode"},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nDefines the component header text. <br> <br> <b>Note:<\/b> If the <code>header<\/code> slot is set, this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText?: String) -> sap.ui.webc.main.Tree","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Tree.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireItemMouseout":{"!description":"Fires event {@link #event:itemMouseout itemMouseout} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Tree","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachItemClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Tree<\/code> itself.\n\nFired when a tree item is activated.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Tree<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITreeItem]"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.Tree","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Tree with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"removeHeader":{"!description":"Removes a header from the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(vHeader: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vHeader":"type: int|string|sap.ui.core.Control, description: The header to remove or its index or id"}},"getFooterText":{"!description":"Gets current value of property {@link #getFooterText footerText}.\n\nDefines the component footer text.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/ui/webc/main/Tree","detachItemMouseout":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemMouseout itemMouseout} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nDefines the text that is displayed when the component contains no items.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireItemClick":{"!description":"Fires event {@link #event:itemClick itemClick} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"attachItemMouseout":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemMouseout itemMouseout} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Tree<\/code> itself.\n\nFired when the mouse cursor leaves the tree item borders.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Tree<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.ITreeItem) -> sap.ui.webc.main.ITreeItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.ITreeItem, description: The item to remove or its index or id"}},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Tree","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setNoDataText":{"!description":"Sets a new value for property {@link #getNoDataText noDataText}.\n\nDefines the text that is displayed when the component contains no items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sNoDataText?: String) -> sap.ui.webc.main.Tree","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","detachItemMouseover":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemMouseover itemMouseover} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachItemMouseover":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemMouseover itemMouseover} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Tree<\/code> itself.\n\nFired when the mouse cursor enters the tree item borders.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Tree<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachItemDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemDelete itemDelete} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Tree<\/code> itself.\n\nFired when the Delete button of any tree item is pressed. <br> <br> <b>Note:<\/b> A Delete button is displayed on each item, when the component <code>mode<\/code> property is set to <code>Delete<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Tree<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nDefines the component header. <br> <br> <b>Note:<\/b> When the <code>header<\/code> slot is set, the <code>headerText<\/code> property is ignored.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.\n\nDefines the component header text. <br> <br> <b>Note:<\/b> If the <code>header<\/code> slot is set, this property is ignored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITreeItem) -> sap.ui.webc.main.Tree","parameters":{"oItem":"type: sap.ui.webc.main.ITreeItem, description: The item to add; if empty, nothing is inserted"}},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>Tree<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFooterText footerText} : string (default: \"\")<\/li>\n<li>{@link #getHeaderText headerText} : string (default: \"\")<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMode mode} : sap.ui.webc.main.ListMode (default: None)<\/li>\n<li>{@link #getNoDataText noDataText} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.ui.core.Control[]<\/li>\n<li>{@link #getItems items} : sap.ui.webc.main.ITreeItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClick itemClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemDelete itemDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemMouseout itemMouseout} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemMouseover itemMouseover} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemToggle itemToggle} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"addHeader":{"!description":"Adds some header to the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.ui.webc.main.Tree","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to add; if empty, nothing is inserted"}},"setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nDefines the mode of the component. Since the tree uses a <code>sap.ui.webc.main.List<\/code> to display its structure, the tree modes are exactly the same as the list modes, and are all applicable.\n\n<br> <br> <b>Note:<\/b>\n\n<ul> <li><code>None<\/code><\/li> <li><code>SingleSelect<\/code><\/li> <li><code>SingleSelectBegin<\/code><\/li> <li><code>SingleSelectEnd<\/code><\/li> <li><code>MultiSelect<\/code><\/li> <li><code>Delete<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sMode?: sap.ui.webc.main.ListMode) -> sap.ui.webc.main.Tree","parameters":{"sMode":"type: sap.ui.webc.main.ListMode, description: New value for property <code>mode<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Tree","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"removeAllHeader":{"!description":"Removes all the controls from the aggregation {@link #getHeader header}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyHeader":{"!description":"Destroys all the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Tree"},"insertHeader":{"!description":"Inserts a header into the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.Tree","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the header should be inserted at; for a negative value of <code>iIndex<\/code>, the header is inserted at position 0; for a value greater than the current size of the aggregation, the header is inserted at the last position"}},"detachItemDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemDelete itemDelete} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireItemToggle":{"!description":"Fires event {@link #event:itemToggle itemToggle} to attached listeners.\n\nListeners may prevent the default action of this event by calling the <code>preventDefault<\/code> method on the event object. The return value of this method indicates whether the default action should be executed.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachItemToggle":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemToggle itemToggle} event of this <code>sap.ui.webc.main.Tree<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Tree","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"fireItemDelete":{"!description":"Fires event {@link #event:itemDelete itemDelete} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Tree","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setFooterText":{"!description":"Sets a new value for property {@link #getFooterText footerText}.\n\nDefines the component footer text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sFooterText?: String) -> sap.ui.webc.main.Tree","parameters":{"sFooterText":"type: string, description: New value for property <code>footerText<\/code>"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITreeItem, iIndex: Number) -> sap.ui.webc.main.Tree","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.ITreeItem, description: The item to insert; if empty, nothing is inserted"}},"indexOfHeader":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeader header}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> Number","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header whose index is looked for"}},"walk":{"!description":"Perform Depth-First-Search walk on the tree and run a callback on each node","!static":false,"!category":"function","!type":"fn(callback: fn())","parameters":{"callback":"type: function, description: function to execute on each node of the tree with 2 arguments: the node and the level"}}},"sap.ui.webc.main.TabContainer":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.ITab) -> sap.ui.webc.main.ITab | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.ITab, description: The item to remove or its index or id"}},"destroyOverflowButton":{"!description":"Destroys the overflowButton in the aggregation {@link #getOverflowButton overflowButton}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TabContainer"},"getStartOverflowButton":{"!description":"Gets content of aggregation {@link #getStartOverflowButton startOverflowButton}.\n\nDefines the button which will open the start overflow menu if available. If nothing is provided to this slot, the default button will be used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.IButton"},"setCollapsed":{"!description":"Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines whether the tab content is collapsed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCollapsed?: Boolean) -> sap.ui.webc.main.TabContainer","parameters":{"bCollapsed":"type: boolean, description: New value for property <code>collapsed<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TabContainer"},"setFixed":{"!description":"Sets a new value for property {@link #getFixed fixed}.\n\nDefines whether the tabs are in a fixed state that is not expandable/collapsible by user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFixed?: Boolean) -> sap.ui.webc.main.TabContainer","parameters":{"bFixed":"type: boolean, description: New value for property <code>fixed<\/code>"}},"attachTabSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:tabSelect tabSelect} event of this <code>sap.ui.webc.main.TabContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.TabContainer<\/code> itself.\n\nFired when a tab is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TabContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.TabContainer<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","setOverflowButton":{"!description":"Sets the aggregated {@link #getOverflowButton overflowButton}.","!static":false,"!category":"function","!type":"fn(oOverflowButton: sap.ui.webc.main.IButton) -> sap.ui.webc.main.TabContainer","parameters":{"oOverflowButton":"type: sap.ui.webc.main.IButton, description: The overflowButton to set"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getTabLayout":{"!description":"Gets current value of property {@link #getTabLayout tabLayout}.\n\nDefines the alignment of the content and the <code>additionalText<\/code> of a tab.\n\n<br> <br> <b>Note:<\/b> The content and the <code>additionalText<\/code> would be displayed vertically by defualt, but when set to <code>Inline<\/code>, they would be displayed horizontally.\n\n<br> <br> Available options are: <ul> <li><code>Standard<\/code><\/li> <li><code>Inline<\/code><\/li> <\/ul>\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TabLayout"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITab) -> sap.ui.webc.main.TabContainer","parameters":{"oItem":"type: sap.ui.webc.main.ITab, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the tabs. <br> <br> <b>Note:<\/b> Use <code>sap.ui.webc.main.Tab<\/code> and <code>sap.ui.webc.main.TabSeparator<\/code> for the intended design.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITab]"},"getFixed":{"!description":"Gets current value of property {@link #getFixed fixed}.\n\nDefines whether the tabs are in a fixed state that is not expandable/collapsible by user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setTabsOverflowMode":{"!description":"Sets a new value for property {@link #getTabsOverflowMode tabsOverflowMode}.\n\nDefines the overflow mode of the tab strip. If you have a large number of tabs, only the tabs that can fit on screen will be visible. All other tabs that can 't fit on the screen are available in an overflow tab \"More\".\n\n<br> <br> <b>Note:<\/b> Only one overflow at the end would be displayed by default, but when set to <code>StartAndEnd<\/code>, there will be two overflows on both ends, and tab order will not change on tab selection.\n\n<br> <br> Available options are: <ul> <li><code>End<\/code><\/li> <li><code>StartAndEnd<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>End<\/code>.","!static":false,"!category":"function","!type":"fn(sTabsOverflowMode?: sap.ui.webc.main.TabsOverflowMode) -> sap.ui.webc.main.TabContainer","parameters":{"sTabsOverflowMode":"type: sap.ui.webc.main.TabsOverflowMode, description: New value for property <code>tabsOverflowMode<\/code>"}},"!constructorDescription":"Constructor for a new <code>TabContainer<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getFixed fixed} : boolean (default: false)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowOverflow showOverflow} : boolean (default: false)<\/li>\n<li>{@link #getTabLayout tabLayout} : sap.ui.webc.main.TabLayout (default: Standard)<\/li>\n<li>{@link #getTabsOverflowMode tabsOverflowMode} : sap.ui.webc.main.TabsOverflowMode (default: End)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.webc.main.ITab[] (default)<\/li>\n<li>{@link #getOverflowButton overflowButton} : sap.ui.webc.main.IButton<\/li>\n<li>{@link #getStartOverflowButton startOverflowButton} : sap.ui.webc.main.IButton<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tabSelect tabSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","destroyStartOverflowButton":{"!description":"Destroys the startOverflowButton in the aggregation {@link #getStartOverflowButton startOverflowButton}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TabContainer"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.ITab<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITab) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.ITab, description: The item whose index is looked for"}},"getCollapsed":{"!description":"Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines whether the tab content is collapsed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TabContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTabsOverflowMode":{"!description":"Gets current value of property {@link #getTabsOverflowMode tabsOverflowMode}.\n\nDefines the overflow mode of the tab strip. If you have a large number of tabs, only the tabs that can fit on screen will be visible. All other tabs that can 't fit on the screen are available in an overflow tab \"More\".\n\n<br> <br> <b>Note:<\/b> Only one overflow at the end would be displayed by default, but when set to <code>StartAndEnd<\/code>, there will be two overflows on both ends, and tab order will not change on tab selection.\n\n<br> <br> Available options are: <ul> <li><code>End<\/code><\/li> <li><code>StartAndEnd<\/code><\/li> <\/ul>\n\nDefault value is <code>End<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TabsOverflowMode"},"setShowOverflow":{"!description":"Sets a new value for property {@link #getShowOverflow showOverflow}.\n\nDefines whether the overflow select list is displayed. <br> <br> The overflow select list represents a list, where all tabs are displayed so that it's easier for the user to select a specific tab.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowOverflow?: Boolean) -> sap.ui.webc.main.TabContainer","parameters":{"bShowOverflow":"type: boolean, description: New value for property <code>showOverflow<\/code>"}},"setTabLayout":{"!description":"Sets a new value for property {@link #getTabLayout tabLayout}.\n\nDefines the alignment of the content and the <code>additionalText<\/code> of a tab.\n\n<br> <br> <b>Note:<\/b> The content and the <code>additionalText<\/code> would be displayed vertically by defualt, but when set to <code>Inline<\/code>, they would be displayed horizontally.\n\n<br> <br> Available options are: <ul> <li><code>Standard<\/code><\/li> <li><code>Inline<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sTabLayout?: sap.ui.webc.main.TabLayout) -> sap.ui.webc.main.TabContainer","parameters":{"sTabLayout":"type: sap.ui.webc.main.TabLayout, description: New value for property <code>tabLayout<\/code>"}},"detachTabSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:tabSelect tabSelect} event of this <code>sap.ui.webc.main.TabContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.TabContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getShowOverflow":{"!description":"Gets current value of property {@link #getShowOverflow showOverflow}.\n\nDefines whether the overflow select list is displayed. <br> <br> The overflow select list represents a list, where all tabs are displayed so that it's easier for the user to select a specific tab.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getOverflowButton":{"!description":"Gets content of aggregation {@link #getOverflowButton overflowButton}.\n\nDefines the button which will open the overflow menu. If nothing is provided to this slot, the default button will be used.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.IButton"},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ITab]"},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.webc.main.TabContainer","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.TabContainer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TabContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/ui/webc/main/TabContainer","fireTabSelect":{"!description":"Fires event {@link #event:tabSelect tabSelect} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.TabContainer","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setStartOverflowButton":{"!description":"Sets the aggregated {@link #getStartOverflowButton startOverflowButton}.","!static":false,"!category":"function","!type":"fn(oStartOverflowButton: sap.ui.webc.main.IButton) -> sap.ui.webc.main.TabContainer","parameters":{"oStartOverflowButton":"type: sap.ui.webc.main.IButton, description: The startOverflowButton to set"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.ITab, iIndex: Number) -> sap.ui.webc.main.TabContainer","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.ITab, description: The item to insert; if empty, nothing is inserted"}}},"sap.ui.webc.main.DateTimePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.DateTimePicker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.DateTimePicker"},"sap.ui.webc.main.Switch_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Switch with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Switch"},"sap.ui.webc.main.ComboBoxItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ComboBoxItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nDefines the additional text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ComboBoxItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ComboBoxItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAdditionalText additionalText} : string (default: \"\")<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/ComboBoxItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nDefines the additional text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sAdditionalText?: String) -> sap.ui.webc.main.ComboBoxItem","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.ComboBoxItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.ColorPaletteItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPaletteItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ColorPaletteItem"},"sap.ui.webc.main.CheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CheckBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.CheckBox"},"sap.ui.webc.main.ITreeItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.ListSeparators":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","All":{"!description":"Separators between the items including the last and the first one.","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","!category":"static class","None":{"!description":"No item separators.","!category":"enum","!type":"String"},"Inner":{"!description":"Separators between the items. <b>Note:<\/b> This enumeration depends on the theme.","!category":"enum","!type":"String"}},"sap.ui.webc.main.CalendarDate":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CalendarDate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe date formatted according to the <code>formatPattern<\/code> property of the <code>sap.ui.webc.main.Calendar<\/code> that hosts the component","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.CalendarDate.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CalendarDate<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/CalendarDate","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe date formatted according to the <code>formatPattern<\/code> property of the <code>sap.ui.webc.main.Calendar<\/code> that hosts the component\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.webc.main.CalendarDate","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class"},"sap.ui.webc.main.MenuItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.IMenuItem) -> sap.ui.webc.main.IMenuItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.IMenuItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.MenuItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the text of the tree item.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.MenuItem"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IMenuItem]"},"setStartsSection":{"!description":"Sets a new value for property {@link #getStartsSection startsSection}.\n\nDefines whether a visual separator should be rendered before the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStartsSection?: Boolean) -> sap.ui.webc.main.MenuItem","parameters":{"bStartsSection":"type: boolean, description: New value for property <code>startsSection<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> <b>* Example:<\/b> See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.MenuItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> <b>* Example:<\/b> See all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.MenuItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMenuItem) -> sap.ui.webc.main.MenuItem","parameters":{"oItem":"type: sap.ui.webc.main.IMenuItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the items of this component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IMenuItem]"},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.MenuItem","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new <code>MenuItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getStartsSection startsSection} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.webc.main.IMenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/MenuItem","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IMenuItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMenuItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.IMenuItem, description: The item whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getStartsSection":{"!description":"Gets current value of property {@link #getStartsSection startsSection}.\n\nDefines whether a visual separator should be rendered before the item.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMenuItem, iIndex: Number) -> sap.ui.webc.main.MenuItem","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.IMenuItem, description: The item to insert; if empty, nothing is inserted"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the text of the tree item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.MenuItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.BreadcrumbsItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getHref":{"!description":"Gets current value of property {@link #getHref href}.\n\nDefines the link href. <br> <br> <b>Note:<\/b> Standard hyperlink behavior is supported.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.BreadcrumbsItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the item.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHref":{"!description":"Sets a new value for property {@link #getHref href}.\n\nDefines the link href. <br> <br> <b>Note:<\/b> Standard hyperlink behavior is supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHref?: String) -> sap.ui.webc.main.BreadcrumbsItem","parameters":{"sHref":"type: string, description: New value for property <code>href<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sAccessibleName?: String) -> sap.ui.webc.main.BreadcrumbsItem","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.BreadcrumbsItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getTarget":{"!description":"Gets current value of property {@link #getTarget target}.\n\nDefines the link target. <br> <br> Available options are: <ul> <li><code>_self<\/code><\/li> <li><code>_top<\/code><\/li> <li><code>_blank<\/code><\/li> <li><code>_parent<\/code><\/li> <li><code>_search<\/code><\/li> <\/ul> <br> <br> <b>Note:<b> This property must only be used when the <code>href<\/code> property is set.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>BreadcrumbsItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string (default: undefined)<\/li>\n<li>{@link #getHref href} : string (default: \"\")<\/li>\n<li>{@link #getTarget target} : string (default: undefined)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/BreadcrumbsItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setTarget":{"!description":"Sets a new value for property {@link #getTarget target}.\n\nDefines the link target. <br> <br> Available options are: <ul> <li><code>_self<\/code><\/li> <li><code>_top<\/code><\/li> <li><code>_blank<\/code><\/li> <li><code>_parent<\/code><\/li> <li><code>_search<\/code><\/li> <\/ul> <br> <br> <b>Note:<b> This property must only be used when the <code>href<\/code> property is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sTarget?: String) -> sap.ui.webc.main.BreadcrumbsItem","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.BreadcrumbsItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.BusyIndicatorSize":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Small":{"!description":"small size","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","Medium":{"!description":"medium size","!category":"enum","!type":"String"},"Large":{"!description":"large size","!category":"enum","!type":"String"},"!category":"static class"},"sap.ui.webc.main.IMultiComboBoxItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.ColorPalette":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ColorPalette.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllColors":{"!description":"Removes all the controls from the aggregation {@link #getColors colors}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IColorPaletteItem]"},"indexOfColor":{"!description":"Checks for the provided <code>sap.ui.webc.main.IColorPaletteItem<\/code> in the aggregation {@link #getColors colors}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColor: sap.ui.webc.main.IColorPaletteItem) -> Number","parameters":{"oColor":"type: sap.ui.webc.main.IColorPaletteItem, description: The color whose index is looked for"}},"insertColor":{"!description":"Inserts a color into the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn(oColor: sap.ui.webc.main.IColorPaletteItem, iIndex: Number) -> sap.ui.webc.main.ColorPalette","parameters":{"oColor":"type: sap.ui.webc.main.IColorPaletteItem, description: The color to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the color should be inserted at; for a negative value of <code>iIndex<\/code>, the color is inserted at position 0; for a value greater than the current size of the aggregation, the color is inserted at the last position"}},"!proto":"sap.ui.webc.common.WebComponent","addColor":{"!description":"Adds some color to the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn(oColor: sap.ui.webc.main.IColorPaletteItem) -> sap.ui.webc.main.ColorPalette","parameters":{"oColor":"type: sap.ui.webc.main.IColorPaletteItem, description: The color to add; if empty, nothing is inserted"}},"!category":"class","attachItemClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.ColorPalette<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ColorPalette<\/code> itself.\n\nFired when the user selects a color.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ColorPalette","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ColorPalette<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeColor":{"!description":"Removes a color from the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn(vColor: Number | String | sap.ui.webc.main.IColorPaletteItem) -> sap.ui.webc.main.IColorPaletteItem | null","parameters":{"vColor":"type: int|string|sap.ui.webc.main.IColorPaletteItem, description: The color to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPalette with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"detachItemClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.ColorPalette<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ColorPalette","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>ColorPalette<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getColors colors} : sap.ui.webc.main.IColorPaletteItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClick itemClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","destroyColors":{"!description":"Destroys all the colors in the aggregation {@link #getColors colors}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ColorPalette"},"getColors":{"!description":"Gets content of aggregation {@link #getColors colors}.\n\nDefines the <code>sap.ui.webc.main.ColorPaletteItem<\/code> elements.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IColorPaletteItem]"},"!module":"sap/ui/webc/main/ColorPalette","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","fireItemClick":{"!description":"Fires event {@link #event:itemClick itemClick} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ColorPalette","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}}},"sap.ui.webc.main.SegmentedButtonItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.SegmentedButtonItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.SegmentedButtonItem"},"sap.ui.webc.main.AvatarSize":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","S":{"!description":"component size - 3rem font size - 1.5rem","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","XL":{"!description":"component size - 7rem font size - 3rem","!category":"enum","!type":"String"},"!category":"static class","XS":{"!description":"component size - 2rem font size - 1rem","!category":"enum","!type":"String"},"L":{"!description":"component size - 5rem font size - 2.5rem","!category":"enum","!type":"String"},"M":{"!description":"component size - 4rem font size - 2rem","!category":"enum","!type":"String"}},"sap.ui.webc.main.AvatarGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.AvatarGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.AvatarGroup"},"sap.ui.webc.main.ITableCell":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.TabLayout":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class","Standard":{"!description":"Standard type, the tab <code>main text<\/code> and <code>additionalText<\/code> are displayed vertically.","!category":"enum","!type":"String"},"Inline":{"!description":"Inline type, the tab <code>main text<\/code> and <code>additionalText<\/code> are displayed horizotally.","!category":"enum","!type":"String"}},"sap.ui.webc.main.Button":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.Button","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setIconEnd":{"!description":"Sets a new value for property {@link #getIconEnd iconEnd}.\n\nDefines whether the icon should be displayed after the component text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIconEnd?: Boolean) -> sap.ui.webc.main.Button","parameters":{"bIconEnd":"type: boolean, description: New value for property <code>iconEnd<\/code>"}},"fireClick":{"!description":"Fires event {@link #event:click click} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Button","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>Button<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibilityAttributes accessibilityAttributes} : object (default: {})<\/li>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getDesign design} : sap.ui.webc.main.ButtonDesign (default: Default)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string (default: \"\")<\/li>\n<li>{@link #getIconEnd iconEnd} : boolean (default: false)<\/li>\n<li>{@link #getSubmits submits} : boolean (default: false)<\/li>\n<li>{@link #getText text} : string (default: \"\")<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:click click} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Button","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getIconEnd":{"!description":"Gets current value of property {@link #getIconEnd iconEnd}.\n\nDefines whether the icon should be displayed after the component text.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSubmits":{"!description":"Gets current value of property {@link #getSubmits submits}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Button.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:click click} event of this <code>sap.ui.webc.main.Button<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Button<\/code> itself.\n\nFired when the component is activated either with a mouse/tap or by using the Enter or Space key. <br> <br> <b>Note:<\/b> The event will not be fired if the <code>disabled<\/code> property is set to <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Button","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Button<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the content of the control\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property {@link #getTextDirection textDirection}.\n\nSpecifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection?: sap.ui.core.TextDirection) -> sap.ui.webc.main.Button","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Button","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAccessibilityAttributes":{"!description":"Sets a new value for property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <li><code>controls<\/code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn(oAccessibilityAttributes?: Object) -> sap.ui.webc.main.Button","parameters":{"oAccessibilityAttributes":"type: object, description: New value for property <code>accessibilityAttributes<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Button with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. <br> <br> Example:\n\nSee all the available icons in the <ui5-link target=\"_blank\" href=\"https://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer<\/ui5-link>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon?: String) -> sap.ui.webc.main.Button","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Button","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"detachClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:click click} event of this <code>sap.ui.webc.main.Button<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Button","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getAccessibilityAttributes":{"!description":"Gets current value of property {@link #getAccessibilityAttributes accessibilityAttributes}.\n\nAn object of strings that defines several additional accessibility attribute values for customization depending on the use case.\n\nIt supports the following fields:\n\n<ul> <li><code>expanded<\/code>: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: <ul> <li><code>true<\/code><\/li> <li><code>false<\/code><\/li> <\/ul> <\/li> <li><code>hasPopup<\/code>: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: <ul> <li><code>Dialog<\/code><\/li> <li><code>Grid<\/code><\/li> <li><code>ListBox<\/code><\/li> <li><code>Menu<\/code><\/li> <li><code>Tree<\/code><\/li> <\/ul> <\/li> <li><code>controls<\/code>: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.<\/li> <\/ul>\n\nDefault value is <code>{}<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setSubmits":{"!description":"Sets a new value for property {@link #getSubmits submits}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSubmits?: Boolean) -> sap.ui.webc.main.Button","parameters":{"bSubmits":"type: boolean, description: New value for property <code>submits<\/code>"}},"!module":"sap/ui/webc/main/Button","getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines the component design.\n\n<br> <br> <b>The available values are:<\/b>\n\n<ul> <li><code>Default<\/code><\/li> <li><code>Emphasized<\/code><\/li> <li><code>Positive<\/code><\/li> <li><code>Negative<\/code><\/li> <li><code>Transparent<\/code><\/li> <li><code>Attention<\/code><\/li> <\/ul>\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ButtonDesign"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines the component design.\n\n<br> <br> <b>The available values are:<\/b>\n\n<ul> <li><code>Default<\/code><\/li> <li><code>Emphasized<\/code><\/li> <li><code>Positive<\/code><\/li> <li><code>Negative<\/code><\/li> <li><code>Transparent<\/code><\/li> <li><code>Attention<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign?: sap.ui.webc.main.ButtonDesign) -> sap.ui.webc.main.Button","parameters":{"sDesign":"type: sap.ui.webc.main.ButtonDesign, description: New value for property <code>design<\/code>"}},"getTextDirection":{"!description":"Gets current value of property {@link #getTextDirection textDirection}.\n\nSpecifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the content of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sText?: String) -> sap.ui.webc.main.Button","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.ui.webc.main.Menu":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.IMenuItem) -> sap.ui.webc.main.IMenuItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.IMenuItem, description: The item to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Menu.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.webc.common.WebComponent","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Menu"},"!category":"class","attachItemClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.Menu<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Menu<\/code> itself.\n\nFired when an item is being clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Menu","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Menu<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IMenuItem]"},"getHeaderText":{"!description":"Gets current value of property {@link #getHeaderText headerText}.\n\nDefines the header text of the menu (displayed on mobile).\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Menu with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMenuItem) -> sap.ui.webc.main.Menu","parameters":{"oItem":"type: sap.ui.webc.main.IMenuItem, description: The item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the items of this component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IMenuItem]"},"detachItemClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemClick itemClick} event of this <code>sap.ui.webc.main.Menu<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Menu","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new <code>Menu<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderText headerText} : string (default: \"\")<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.webc.main.IMenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClick itemClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/Menu","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IMenuItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMenuItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.IMenuItem, description: The item whose index is looked for"}},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","fireItemClick":{"!description":"Fires event {@link #event:itemClick itemClick} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Menu","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"showAt":{"!description":"Shows the Menu near the opener element.","!static":false,"!category":"function","!type":"fn(opener: HTMLElement)","parameters":{"opener":"type: HTMLElement, description: the element that the popover is shown at"}},"close":{"!description":"Closes the Menu.","!static":false,"!category":"function","!type":"fn()"},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IMenuItem, iIndex: Number) -> sap.ui.webc.main.Menu","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.IMenuItem, description: The item to insert; if empty, nothing is inserted"}},"setHeaderText":{"!description":"Sets a new value for property {@link #getHeaderText headerText}.\n\nDefines the header text of the menu (displayed on mobile).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText?: String) -> sap.ui.webc.main.Menu","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}}},"sap.ui.webc.main.IToken":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui.webc.main.ComboBox":{"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.ComboBox","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.ComboBox","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"fireInput":{"!description":"Fires event {@link #event:input input} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ComboBox"},"getReadonly":{"!description":"Gets current value of property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.ComboBox","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.ComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nDefines the component items.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IComboBoxItem]"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.webc.main.IComboBoxItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IComboBoxItem) -> Number","parameters":{"oItem":"type: sap.ui.webc.main.IComboBoxItem, description: The item whose index is looked for"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.ComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ComboBox<\/code> itself.\n\nFired when selection is changed by user interaction","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.ComboBox","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"detachInput":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:input input} event of this <code>sap.ui.webc.main.ComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.ComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ComboBox<\/code> itself.\n\nFired when the input operation has finished by pressing Enter, focusout or an item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.IComboBoxItem]"},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setReadonly":{"!description":"Sets a new value for property {@link #getReadonly readonly}.\n\nDefines whether the component is read-only. <br> <br> <b>Note:<\/b> A read-only component is not editable, but still provides visual feedback upon user interaction.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bReadonly?: Boolean) -> sap.ui.webc.main.ComboBox","parameters":{"bReadonly":"type: boolean, description: New value for property <code>readonly<\/code>"}},"setFilter":{"!description":"Sets a new value for property {@link #getFilter filter}.\n\nDefines the filter type of the component. Available options are: <code>StartsWithPerTerm<\/code>, <code>StartsWith<\/code> and <code>Contains<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>\"StartsWithPerTerm\"<\/code>.","!static":false,"!category":"function","!type":"fn(sFilter?: String) -> sap.ui.webc.main.ComboBox","parameters":{"sFilter":"type: string, description: New value for property <code>filter<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ComboBox with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets the aggregated {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.webc.main.IIcon) -> sap.ui.webc.main.ComboBox","parameters":{"oIcon":"type: sap.ui.webc.main.IIcon, description: The icon to set"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.ComboBox","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/ComboBox","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setLoading":{"!description":"Sets a new value for property {@link #getLoading loading}.\n\nIndicates whether a loading indicator should be shown in the picker.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLoading?: Boolean) -> sap.ui.webc.main.ComboBox","parameters":{"bLoading":"type: boolean, description: New value for property <code>loading<\/code>"}},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.webc.main.IComboBoxItem) -> sap.ui.webc.main.IComboBoxItem | null","parameters":{"vItem":"type: int|string|sap.ui.webc.main.IComboBoxItem, description: The item to remove or its index or id"}},"destroyIcon":{"!description":"Destroys the icon in the aggregation {@link #getIcon icon}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.ComboBox"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"getPlaceholder":{"!description":"Gets current value of property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IComboBoxItem) -> sap.ui.webc.main.ComboBox","parameters":{"oItem":"type: sap.ui.webc.main.IComboBoxItem, description: The item to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new <code>ComboBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getFilter filter} : string (default: \"StartsWithPerTerm\")<\/li>\n<li>{@link #getLoading loading} : boolean (default: false)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: \"\")<\/li>\n<li>{@link #getReadonly readonly} : boolean (default: false)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getValue value} : string (default: \"\")<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.webc.main.IIcon<\/li>\n<li>{@link #getItems items} : sap.ui.webc.main.IComboBoxItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:input input} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.ComboBox","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"setPlaceholder":{"!description":"Sets a new value for property {@link #getPlaceholder placeholder}.\n\nDefines a short hint intended to aid the user with data entry when the component has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder?: String) -> sap.ui.webc.main.ComboBox","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.ui.webc.main.ComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLoading":{"!description":"Gets current value of property {@link #getLoading loading}.\n\nIndicates whether a loading indicator should be shown in the picker.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.ComboBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nDefines the icon to be displayed in the input field.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.IIcon"},"getFilter":{"!description":"Gets current value of property {@link #getFilter filter}.\n\nDefines the filter type of the component. Available options are: <code>StartsWithPerTerm<\/code>, <code>StartsWith<\/code> and <code>Contains<\/code>.\n\nDefault value is <code>\"StartsWithPerTerm\"<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the value of the component.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the value of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValue?: String) -> sap.ui.webc.main.ComboBox","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"attachInput":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:input input} event of this <code>sap.ui.webc.main.ComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.ComboBox<\/code> itself.\n\nFired when typing in input. <br> <br> <b>Note:<\/b> filterValue property is updated, input is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.ComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.ComboBox<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.webc.main.IComboBoxItem, iIndex: Number) -> sap.ui.webc.main.ComboBox","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.webc.main.IComboBoxItem, description: The item to insert; if empty, nothing is inserted"}},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.webc.main.ProgressIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ProgressIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.ProgressIndicator"},"sap.ui.webc.main.BusyIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.BusyIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.BusyIndicator"},"sap.ui":{"webc":"sap.ui.webc","!category":"namespace"},"sap.ui.webc.main.ISegmentedButtonItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"},"sap.ui.webc.main.CustomListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CustomListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.CustomListItem"},"sap.ui.webc.main.Dialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Dialog with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Dialog"},"sap.ui.webc.main.TabSeparator":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TabSeparator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TabSeparator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TabSeparator<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent} can be used.","!module":"sap/ui/webc/main/TabSeparator","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.ui.webc.common.WebComponent","!category":"class"},"sap.ui.webc.main.TableCell":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.TableCell.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nSpecifies the content of the component.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.webc.common.WebComponent","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.webc.main.TableCell","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control | null","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.TableCell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>TableCell<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/TableCell","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.webc.main.TableCell","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.TableCell"}},"sap.ui.webc.main.Select":{"indexOfOption":{"!description":"Checks for the provided <code>sap.ui.webc.main.ISelectOption<\/code> in the aggregation {@link #getOptions options}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oOption: sap.ui.webc.main.ISelectOption) -> Number","parameters":{"oOption":"type: sap.ui.webc.main.ISelectOption, description: The option whose index is looked for"}},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form. The value of the component will be the value of the currently selected <code>sap.ui.webc.main.Option<\/code>.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the <code>sap.ui.webc.main.Select<\/code> so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sName?: String) -> sap.ui.webc.main.Select","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"setValueStateMessage":{"!description":"Sets a new value for property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateMessage?: String) -> sap.ui.webc.main.Select","parameters":{"sValueStateMessage":"type: string, description: New value for property <code>valueStateMessage<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.ID]"},"removeAllOptions":{"!description":"Removes all the controls from the aggregation {@link #getOptions options}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ISelectOption]"},"setRequired":{"!description":"Sets a new value for property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired?: Boolean) -> sap.ui.webc.main.Select","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nDetermines the name with which the component will be submitted in an HTML form. The value of the component will be the value of the currently selected <code>sap.ui.webc.main.Option<\/code>.\n\n<br> <br> <b>Note:<\/b> When set, a native <code>input<\/code> HTML element will be created inside the <code>sap.ui.webc.main.Select<\/code> so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.webc.common.WebComponent","!category":"class","setAccessibleName":{"!description":"Sets a new value for property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAccessibleName: String) -> sap.ui.webc.main.Select","parameters":{"sAccessibleName":"type: string, description: New value for property <code>accessibleName<\/code>"}},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.ui.webc.main.Select<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Select","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called, when the event occurs"}},"removeOption":{"!description":"Removes a option from the aggregation {@link #getOptions options}.","!static":false,"!category":"function","!type":"fn(vOption: Number | String | sap.ui.webc.main.ISelectOption) -> sap.ui.webc.main.ISelectOption | null","parameters":{"vOption":"type: int|string|sap.ui.webc.main.ISelectOption, description: The option to remove or its index or id"}},"!constructorDescription":"Constructor for a new <code>Select<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAccessibleName accessibleName} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: \"\")<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateMessage valueStateMessage} : string (default: \"\")<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getOptions options} : sap.ui.webc.main.ISelectOption[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.webc.main.Select","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"}},"getSelectedOption":{"!description":"Returns the currently selected option.","!static":false,"!category":"function","!type":"fn()"},"destroyOptions":{"!description":"Destroys all the options in the aggregation {@link #getOptions options}.","!static":false,"!category":"function","!type":"fn() -> sap.ui.webc.main.Select"},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.Select.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibleName":{"!description":"Gets current value of property {@link #getAccessibleName accessibleName}.\n\nDefines the accessible aria name of the component.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState?: sap.ui.core.ValueState) -> sap.ui.webc.main.Select","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"insertOption":{"!description":"Inserts a option into the aggregation {@link #getOptions options}.","!static":false,"!category":"function","!type":"fn(oOption: sap.ui.webc.main.ISelectOption, iIndex: Number) -> sap.ui.webc.main.Select","parameters":{"oOption":"type: sap.ui.webc.main.ISelectOption, description: The option to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the option should be inserted at; for a negative value of <code>iIndex<\/code>, the option is inserted at position 0; for a value greater than the current size of the aggregation, the option is inserted at the last position"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.ui.webc.main.Select<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.webc.main.Select<\/code> itself.\n\nFired when the selected option changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: function(sap.ui.base.Event) : void, oListener?: Object) -> sap.ui.webc.main.Select","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.webc.main.Select<\/code> itself","fnFunction":"type: function(sap.ui.base.Event) : void, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.ui.webc.main.Select","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.webc.main.Select","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Select with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDefines whether the control is enabled. A disabled control can't be interacted with, and it is not in the tab chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled?: Boolean) -> sap.ui.webc.main.Select","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/ui/webc/main/Select","addOption":{"!description":"Adds some option to the aggregation {@link #getOptions options}.","!static":false,"!category":"function","!type":"fn(oOption: sap.ui.webc.main.ISelectOption) -> sap.ui.webc.main.Select","parameters":{"oOption":"type: sap.ui.webc.main.ISelectOption, description: The option to add; if empty, nothing is inserted"}},"getValueState":{"!description":"Gets current value of property {@link #getValueState valueState}.\n\nDefines the value state of the component. <br> <br> Available options are: <ul> <li><code>None<\/code><\/li> <li><code>Error<\/code><\/li> <li><code>Warning<\/code><\/li> <li><code>Success<\/code><\/li> <li><code>Information<\/code><\/li> <\/ul>\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getOptions":{"!description":"Gets content of aggregation {@link #getOptions options}.\n\nDefines the component options.\n\n<br> <br> <b>Note:<\/b> Only one selected option is allowed. If more than one option is defined as selected, the last one would be considered as the selected one.\n\n<br> <br> <b>Note:<\/b> Use the <code>sap.ui.webc.main.Option<\/code> component to define the desired options.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.webc.main.ISelectOption]"},"getRequired":{"!description":"Gets current value of property {@link #getRequired required}.\n\nDefines whether the component is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValueStateMessage":{"!description":"Gets current value of property {@link #getValueStateMessage valueStateMessage}.\n\nDefines the value state message that will be displayed as pop up under the contorl. <br> <br>\n\n<b>Note:<\/b> If not specified, a default text (in the respective language) will be displayed.\n\nDefault value is <code>empty string<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.ui.webc.main.BreadcrumbsSeparatorStyle":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","DoubleBackSlash":{"!description":"The separator appears as \"\\\\\".","!category":"enum","!type":"String"},"DoubleGreaterThan":{"!description":"The separator appears as \">>\".","!category":"enum","!type":"String"},"!module":"sap/ui/webc/main/library","GreaterThan":{"!description":"The separator appears as \">\".","!category":"enum","!type":"String"},"Slash":{"!description":"The separator appears as \"/\".","!category":"enum","!type":"String"},"!category":"static class","BackSlash":{"!description":"The separator appears as \"\\\".","!category":"enum","!type":"String"},"DoubleSlash":{"!description":"The separator appears as \"//\".","!category":"enum","!type":"String"}},"sap.ui.webc.main.Avatar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.Avatar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.Avatar"},"sap.ui.webc.main.CalendarDate_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.CalendarDate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.webc.main.CalendarDate"},"sap.ui.webc.main.ColorPaletteItem":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.ui.webc.main.ColorPaletteItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.webc.common.WebComponent.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the colour of the component. <br> <br> <b>Note:<\/b> The value should be a valid CSS color.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSColor"},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.webc.main.ColorPaletteItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ColorPaletteItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : sap.ui.core.CSSColor<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.webc.common.WebComponent#constructor sap.ui.webc.common.WebComponent}\ncan be used as well.","!module":"sap/ui/webc/main/ColorPaletteItem","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the colour of the component. <br> <br> <b>Note:<\/b> The value should be a valid CSS color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: sap.ui.core.CSSColor) -> sap.ui.webc.main.ColorPaletteItem","parameters":{"sValue":"type: sap.ui.core.CSSColor, description: New value for property <code>value<\/code>"}},"!proto":"sap.ui.webc.common.WebComponent","!category":"class"},"sap.ui.webc.main.ISelectOption":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/ui/webc/main/library","!category":"static class"}}}